{"version":3,"sources":["hooks-store/store.js","assets/images/cards/images.js","assets/images/ui/icons.js","components/Game/Board/Tile/Occupant/Occupant.js","components/Game/Board/Tile/Tile.js","components/Game/Board/Well/Well.js","components/Game/Board/God/God.js","components/Game/Board/Board.js","components/Game/Hand/Card/Card.js","components/Game/Hand/Hand.js","assets/images/ui/images_ui.js","components/Game/Wheel/WheelButton/WheelButton.js","components/UI/EndTurnButton/EndTurnButton.js","components/Game/Wheel/Wheel.js","components/Game/Faeria/Faeria.js","components/Game/Deck/Deck.js","components/UI/Hexagon/Hexagon.js","components/UI/Infobox/Infobox.js","components/UI/MulliganModal/MulliganModal.js","components/UI/ChooseModal/ChooseModal.js","components/Game/Game.js","App.js","hooks-store/event-processor.js","hooks-store/global-store.js","index.js"],"names":["globalState","listeners","actions","useStore","shouldListen","setState","useState","dispatch","actionIdentifier","payload","newState","listener","useEffect","push","filter","li","images","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","icons","aquatic_enemy","aquatic_enemyhover","aquatic_friendly","aquatic_friendlyhover","flying_enemy","flying_enemyhover","flying_friendly","flying_friendlyhover","jump_enemy","jump_enemyhover","jump_friendly","jump_friendlyhover","ranged_enemy","ranged_enemyhover","ranged_friendly","ranged_friendlyhover","scoot_enemy","scoot_enemyhover","scoot_friendly","scoot_friendlyhover","taunt_enemy","taunt_enemyhover","taunt_friendly","taunt_friendlyhover","Occupant","props","state","points_divine","x","y","join","occupantClass","data","board","tiles","tile","occupant","player","user","occupantSelectable","status","current","creatureClass","occupantSelected","iconClass","icon_taunt","taunt","rx","ry","width","height","fill","icon_ranged","ranged","icon_flying","movement","special","flying","icon_aquatic","aquatic","icon_jump","jump","icon_scoot","range","divine","points","className","protection","cx","cy","onClick","event","opponent","tile_id","currentAction","id","patternContentUnits","preserveAspectRatio","href","dy","attack","health","Tile","extraclass","selectable","tileclass","owner","type","hexSize","startPosX","startPosY","Math","sqrt","Fragment","Well","wellClass","collected","r","God","gods","god","textAnchor","stroke","strokeWidth","fontSize","Board","boardTilesMap","G","F","E","D","C","B","A","wellPositions","godPositions","Object","keys","map","column","i","Array","_","j","parity","columnNr","wells","indexOf","length","boardMaxHeight","style","justifyContent","display","Card","clickAction","mulligan","hand","index","cards","faeria_cost","faeria","hand_id","card_id","imgSrc","classname","alt","src","parseInt","Hand","cardClass","selected","cardOwner","alignSelf","align","images_ui","WheelButton","wheelbuttons","wheelbutton_id","EndTurnButton","btnText","turn","btnClass","btnClassText","btnOnClick","Wheel","offsetX","offsetY","wheel","wheelOutput","wheel_used","strokeColor","fillColor","position","bottom","left","Faeria","Deck","border","deckcounter","handcounter","Hexagon","Infobox","landCount","lands","f","l","m","d","values","forEach","charAt","getLandCount","landCounter","info_landcounter","margin","info_faeria","info_player","textAlign","name","info","deck","MulliganModal","initialHand","setInitialHand","btnDisabled","setBtnDisabled","swapHandler","newHand","JSON","parse","stringify","target","slice","getdata","FormData","append","axios","post","then","res","prevState","prevHand","cardsToReplace","replacePool","entries","card","includes","random","floor","splice","shuffledDeck","prevDeck","deckLength","postdata","catch","error","console","log","message","ChooseModal","chooseHandler","chooseParams","Game","document","getElementById","value","shuffle","timer","setTimeout","formdata","timestamp","Date","now","clearTimeout","choose","finished","winner","flexWrap","app","EventProcessor","this","eventLibrary","summonEffectLibrary","giftEffectLibrary","lastwordEffectLibrary","productionEffectLibrary","specialEffectLibrary","key","wheel_neutral_counter","selected_card_id","getSelectedCard","selected_occupant_id","params","friendly","enemy","playerCheck","processSpecialEffect","action","land_cost","forest","desert","mountain","lake","wild","base_attack","base_health","haste","dash","canCollect","hasMoved","hasDashed","hasAttacked","effects","summon","gift","lastword","production","effectUsed","landtype","newTileState","anyAdjacent","anyAdjacentFromOccupant","god_key","tileType","tileOwner","adjacent","some","player1","player2","dmgAllowed","getGodTile","health_dmg","randomTiles","jumpTiles","adjacent_tile","movementRange","rangeTiles","rangeTilesHelper","valid","prevTile","currentTile","rangetile","rangetile_key","rangetile_adj","rangetile_adj_key","rangetile_adj_adj","adjacentNonTile","moveRequirementsMet","process","setSelectStateForOccupantsDivine","setSelectStateForAllTiles","setSelectStateForOccupants","setSelectStateForBuildTiles","getRemoveOccupant","processLastwordEffect","handleCustomDrawLogic","findIndex","getLandCostForType","tileAvailable","availableTiles","getRandomTiles","count","getOccupantByID","getLandCostForOccupant","setSelectStateForGods","max","setSelectStateForMovementTiles","cardLibrary","reduce","sum","land","min","setSelectStateForHand","setSelectStateForWheel","adjTile","randomTile","setSelectStateForConditionalOccupants","processSummonEffect","initGiftEffect","configureStore","loadStore","userActions","initialState","SET_DATA","currentState","SHUFFLE_DECK","updatedState","CONFIRM_MULLIGAN","START_GAME","SELECT_LAND","newWheelState","DRAW_CARD","PLUS_FAERIA","BUILD_TILE","wheelbutton","SELECT_CARD","getLands","landtypes","canSpawnAdjacentToFriendliesArray","String","currentValue","requirementsMet","SELECT_EVENT","runLogic","EP","initEventLogic","handleEventLogic","PROCESS_EVENT_OCCUPANT","PROCESS_EVENT_TILE","PROCESS_GIFT_OCCUPANT","processGiftEffect","CHOOSE_CARD","SUMMON_CREATURE","newOccupant","available","SELECT_OCCUPANT","isTaunted","taunt_tile","rangeAttack","rangeAttackHelper","attackRequirementsMet","rangeAttackArrayHelper","rangeAttackArray","attacktile","MOVE_OCCUPANT","selected_tile_id","ATTACK_OCCUPANT","attacker","defender","removeOccupant","ATTACK_GOD","wasHit","END_TURN","processProductionEffect","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.6eab6bbc.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nlet globalState = {};\r\nlet listeners = [];\r\nlet actions = {};\r\n\r\nexport const useStore = (shouldListen = true) => {\r\n  const setState = useState(globalState)[1];\r\n\r\n  const dispatch = (actionIdentifier, payload) => {\r\n    const newState = actions[actionIdentifier](globalState, payload);\r\n    globalState = { ...globalState, ...newState };\r\n\r\n    for (const listener of listeners) {\r\n      listener(globalState);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shouldListen) {\r\n      listeners.push(setState);\r\n    }\r\n\r\n    return () => {\r\n      if (shouldListen) {\r\n        listeners = listeners.filter((li) => li !== setState);\r\n      }\r\n    };\r\n  }, [setState, shouldListen]);\r\n\r\n  return [globalState, dispatch];\r\n};\r\n\r\nexport const initStore = (userActions, initialState) => {\r\n  if (initialState) {\r\n    globalState = { ...globalState, ...initialState };\r\n  }\r\n  actions = { ...actions, ...userActions };\r\n};\r\n","const images = {\r\n    'cardback': 'assets/images/cards/cardback.jpg',\r\n    0: 'assets/images/cards/cheeksplore.jpg',\r\n    1: 'assets/images/cards/mercheek.jpg',\r\n    2: 'assets/images/cards/dolphin_cheekrider.jpg',\r\n    3: 'assets/images/cards/clamcheek.jpg',\r\n    4: 'assets/images/cards/ninjacheek.jpg',\r\n    5: 'assets/images/cards/song_of_the_mercheek.jpg',\r\n    6: 'assets/images/cards/cheek_in_a_bottle.jpg',\r\n    7: 'assets/images/cards/cheekie_in_a_lamp.jpg',\r\n    8: 'assets/images/cards/cheeklord.jpg',\r\n    9: 'assets/images/cards/rain_of_cheek.jpg',\r\n    10: 'assets/images/cards/cheekdrop.jpg',\r\n    11: 'assets/images/cards/cheekmoon.jpg',\r\n    12: 'assets/images/cards/cheekpearl.jpg',\r\n    13: 'assets/images/cards/crabcheek.jpg',\r\n    14: 'assets/images/cards/cheekcano.jpg',\r\n    15: 'assets/images/cards/cheekdevil.jpg',\r\n    16: 'assets/images/cards/cheekflame.jpg',\r\n    17: 'assets/images/cards/cheekblast.jpg',\r\n    18: 'assets/images/cards/cheekflame_faerie.jpg',\r\n    19: 'assets/images/cards/baby_cheekdevil.jpg',\r\n    20: 'assets/images/cards/ghostcheek_tower.jpg',\r\n    21: 'assets/images/cards/ghostcheek.jpg',\r\n    22: 'assets/images/cards/ghostcheek_alchemist.jpg',\r\n    23: 'assets/images/cards/cheekruption.jpg',\r\n    24: 'assets/images/cards/suncheek.jpg',\r\n    25: 'assets/images/cards/cheekflower.jpg',\r\n    26: 'assets/images/cards/cavecheek_dweller.jpg',\r\n    27: 'assets/images/cards/mushroom_cheek.jpg',\r\n    28: 'assets/images/cards/cheekshrooms.jpg',\r\n    29: 'assets/images/cards/cheektree_giant.jpg',\r\n    30: 'assets/images/cards/cheekworld_tree.jpg',\r\n    31: 'assets/images/cards/cheek_shaman.jpg',\r\n    32: 'assets/images/cards/cheekfox.jpg',\r\n    33: 'assets/images/cards/cheekbloom_spirit.jpg',\r\n    34: 'assets/images/cards/cheekshield_spirit.jpg',\r\n    35: 'assets/images/cards/cheek_dancers.jpg',\r\n    36: 'assets/images/cards/cheeksphynx.jpg',\r\n    37: 'assets/images/cards/cheeksphynx_a.jpg',\r\n    38: 'assets/images/cards/cheeksphynx_b.jpg',\r\n    39: 'assets/images/cards/cheeksphynx_c.jpg',\r\n    40: 'assets/images/cards/mummy_cheek.jpg',\r\n    41: 'assets/images/cards/cheeksquito.jpg',\r\n    42: 'assets/images/cards/cheek_air_balloon.jpg',\r\n    43: 'assets/images/cards/balloon_cheek.jpg',\r\n    44: 'assets/images/cards/dragon_cheekrider.jpg',\r\n    45: 'assets/images/cards/baby_dragoncheek.jpg',\r\n    46: 'assets/images/cards/cheek_glider.jpg',\r\n    47: 'assets/images/cards/cheek_pyramid.jpg',\r\n    48: 'assets/images/cards/cheek_wind.jpg',\r\n    49: 'assets/images/cards/canopic_cheekjar.jpg',\r\n    50: 'assets/images/cards/cavecheek.jpg',\r\n    51: 'assets/images/cards/book_of_cheek.jpg',\r\n    52: 'assets/images/cards/milk_of_the_cheek.jpg',\r\n}\r\n\r\nexport default images;","const icons = {\r\n    aquatic_enemy: 'assets/images/ui/aquatic_enemy.png',\r\n    aquatic_enemyhover: 'assets/images/ui/aquatic_enemyhover.png',\r\n    aquatic_friendly: 'assets/images/ui/aquatic_friendly.png',\r\n    aquatic_friendlyhover: 'assets/images/ui/aquatic_friendlyhover.png',\r\n    flying_enemy: 'assets/images/ui/flying_enemy.png',\r\n    flying_enemyhover: 'assets/images/ui/flying_enemyhover.png',\r\n    flying_friendly: 'assets/images/ui/flying_friendly.png',\r\n    flying_friendlyhover: 'assets/images/ui/flying_friendlyhover.png',\r\n    jump_enemy: 'assets/images/ui/jump_enemy.png',\r\n    jump_enemyhover: 'assets/images/ui/jump_enemyhover.png',\r\n    jump_friendly: 'assets/images/ui/jump_friendly.png',\r\n    jump_friendlyhover: 'assets/images/ui/jump_friendlyhover.png',\r\n    ranged_enemy: 'assets/images/ui/ranged_enemy.png',\r\n    ranged_enemyhover: 'assets/images/ui/ranged_enemyhover.png',\r\n    ranged_friendly: 'assets/images/ui/ranged_friendly.png',\r\n    ranged_friendlyhover: 'assets/images/ui/ranged_friendlyhover.png',\r\n    scoot_enemy: 'assets/images/ui/scoot_enemy.png',\r\n    scoot_enemyhover: 'assets/images/ui/scoot_enemyhover.png',\r\n    scoot_friendly: 'assets/images/ui/scoot_friendly.png',\r\n    scoot_friendlyhover: 'assets/images/ui/scoot_friendlyhover.png',\r\n    taunt_enemy: 'assets/images/ui/taunt_enemy.png',\r\n    taunt_enemyhover: 'assets/images/ui/taunt_enemyhover.png',\r\n    taunt_friendly: 'assets/images/ui/taunt_friendly.png',\r\n    taunt_friendlyhover: 'assets/images/ui/taunt_friendlyhover.png',\r\n}\r\n\r\nexport default icons;","import React from \"react\";\r\nimport { useStore } from \"../../../../../hooks-store/store\";\r\nimport \"./Occupant.css\";\r\nimport images from \"../../../../../assets/images/cards/images\";\r\nimport icons from \"../../../../../assets/images/ui/icons\";\r\n\r\nconst Occupant = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const points_divine = [\r\n    [props.x + 30, props.y - 10].join(),\r\n    [props.x - 10, props.y + 60].join(),\r\n    [props.x + 70, props.y + 60].join(),\r\n  ].join(\" \");\r\n\r\n  const occupantClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? state.tiles[props.tile].occupantSelectable &&\r\n        state.data.status.current === props.user\r\n        ? \"friendly-selectable\"\r\n        : \"friendly\"\r\n      : state.tiles[props.tile].occupantSelectable\r\n      ? \"enemy-selectable\"\r\n      : \"enemy\";\r\n  const creatureClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? state.tiles[props.tile].occupantSelected\r\n        ? \"creature-selected\"\r\n        : \"creature\"\r\n      : \"creature-enemy\";\r\n  const iconClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? \"friendly\"\r\n      : \"enemy\";\r\n  const icon_taunt = state.data.board.tiles[props.tile].occupant.taunt ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y - 7}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_taunt\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_ranged = state.data.board.tiles[props.tile].occupant.ranged ? (\r\n    <rect\r\n      x={props.x + 50}\r\n      y={props.y + 30}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_ranged\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_flying = state.data.board.tiles[props.tile].occupant.movement\r\n    .special.flying ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y + 45}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_flying\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_aquatic =\r\n    !icon_flying &&\r\n    state.data.board.tiles[props.tile].occupant.movement.special.aquatic ? (\r\n      <rect\r\n        x={props.x + 20}\r\n        y={props.y + 45}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        fill={\"url(#icon_aquatic\" + props.tile + \")\"}\r\n      />\r\n    ) : null;\r\n  const icon_jump = state.data.board.tiles[props.tile].occupant.movement.special\r\n    .jump ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y + 65}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_jump\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_scoot =\r\n    !icon_jump &&\r\n    state.data.board.tiles[props.tile].occupant.movement.range > 1 ? (\r\n      <rect\r\n        x={props.x + 20}\r\n        y={props.y + 65}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        fill={\"url(#icon_scoot\" + props.tile + \")\"}\r\n      />\r\n    ) : null;\r\n  const divine = state.data.board.tiles[props.tile].occupant.divine ? (\r\n    <polygon points={points_divine} className=\"divine\" />\r\n  ) : null;\r\n  const protection = state.data.board.tiles[props.tile].occupant.protection ? (\r\n    <ellipse\r\n      cx={props.x + 30}\r\n      cy={props.y + 39}\r\n      rx=\"49\"\r\n      ry=\"49\"\r\n      className=\"protection\"\r\n    />\r\n  ) : null;\r\n\r\n  const occupantHandler = () => {\r\n    if (\r\n      state.tiles[props.tile].occupantSelectable &&\r\n      state.data.status.current === props.user\r\n    ) {\r\n      const payload = {\r\n        event: \"occupant\",\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        tile_id: props.tile,\r\n      };\r\n      if (state.currentAction === \"gift_occupant\") {\r\n        dispatch(\"PROCESS_GIFT_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"event_occupant\") {\r\n        dispatch(\"PROCESS_EVENT_OCCUPANT\", payload);\r\n      } else {\r\n        if (state.data.board.tiles[props.tile].occupant.player === props.user) {\r\n          dispatch(\"SELECT_OCCUPANT\", payload);\r\n        } else if (state.currentAction === \"occupant_selected\") {\r\n          dispatch(\"ATTACK_OCCUPANT\", payload);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const occupant = (\r\n    <g className={occupantClass} onClick={occupantHandler}>\r\n      <defs>\r\n        <pattern\r\n          id={\"creature-image\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={images[state.data.board.tiles[props.tile].occupant.id]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_aquatic\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"aquatic_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_flying\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"flying_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_jump\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"jump_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_ranged\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"ranged_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_scoot\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"scoot_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_taunt\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"taunt_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n\r\n      <rect\r\n        x={props.x}\r\n        y={props.y}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width={props.width}\r\n        height={(props.width / 3) * 4}\r\n        className={creatureClass}\r\n        fill={\"url(#creature-image\" + props.tile + \")\"}\r\n      />\r\n\r\n      {icon_taunt}\r\n      {icon_ranged}\r\n      {icon_flying}\r\n      {icon_aquatic}\r\n      {icon_jump}\r\n      {icon_scoot}\r\n\r\n      <rect\r\n        x={props.x}\r\n        y={props.y + 55}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"25\"\r\n        className=\"attack\"\r\n      />\r\n      <text x={props.x + 10} y={props.y + 70} dy=\".3em\" className=\"attack-text\">\r\n        {state.data.board.tiles[props.tile].occupant.attack}\r\n      </text>\r\n\r\n      <rect\r\n        x={props.x + 40}\r\n        y={props.y + 55}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"25\"\r\n        className=\"health\"\r\n      />\r\n      <text x={props.x + 50} y={props.y + 70} dy=\".3em\" className=\"health-text\">\r\n        {state.data.board.tiles[props.tile].occupant.health}\r\n      </text>\r\n\r\n      {divine}\r\n      {protection}\r\n    </g>\r\n  );\r\n\r\n  return state.data.board.tiles[props.tile].occupant.id > 0 ? occupant : null;\r\n};\r\n\r\nexport default Occupant;\r\n","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport Occupant from \"./Occupant/Occupant\";\r\nimport \"./Tile.css\";\r\n\r\nconst Tile = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const extraclass =\r\n    state.tiles[props.id].selectable && state.data.status.current === props.user\r\n      ? \"tile-selectable\"\r\n      : \"tile-not-selectable\";\r\n  const tileclass =\r\n    state.data.board.tiles[props.id].owner !== props.user\r\n      ? props.type + \"-opponent\"\r\n      : props.type;\r\n\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  const tileHandler = () => {\r\n    if (\r\n      state.tiles[props.id].selectable &&\r\n      state.data.status.current === props.user\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        tile_id: props.id,\r\n      };\r\n      if (state.currentAction === \"summon_creature\") {\r\n        dispatch(\"SUMMON_CREATURE\", payload);\r\n      } else if (state.currentAction === \"occupant_selected\" || state.currentAction === \"event_move_occupant\") {\r\n        dispatch(\"MOVE_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"event_tile\") {\r\n        dispatch(\"PROCESS_EVENT_TILE\", payload);\r\n      } else {\r\n        dispatch(\"BUILD_TILE\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <polygon\r\n        className={tileclass + \" \" + extraclass}\r\n        points={points}\r\n        onClick={tileHandler}\r\n      />\r\n      <Occupant\r\n        tile={props.id}\r\n        x={startPosX + hexSize * 0.5}\r\n        y={startPosY + Math.sqrt(3) * hexSize * 0.125}\r\n        width={hexSize}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\nimport \"./Well.css\";\r\n\r\nconst Well = (props) => {\r\n  const wellClass = props.data.collected ? \"well-collected\" : \"well-available\";\r\n\r\n  return (\r\n    <circle cx={props.cx} cy={props.cy} r={props.r} className={wellClass} />\r\n  );\r\n};\r\n\r\nexport default Well;\r\n","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport \"./God.css\";\r\n\r\nconst God = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const selectable = state.gods[props.id].selectable\r\n    ? \"god-selectable\"\r\n    : \"god-not-selectable\";\r\n\r\n  const godHandler = () => {\r\n    if (state.gods[props.id].selectable) {\r\n      const payload = {\r\n        event: \"god\",\r\n        god: props.id,\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n      };\r\n      if (state.currentAction === \"event_occupant\") {\r\n        dispatch(\"PROCESS_EVENT_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"gift_occupant\") {\r\n        dispatch(\"PROCESS_GIFT_OCCUPANT\", payload);\r\n      } else {\r\n        dispatch(\"ATTACK_GOD\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <g className={selectable} onClick={godHandler}>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} />\r\n      <text\r\n        x={props.cx}\r\n        y={props.cy}\r\n        textAnchor=\"middle\"\r\n        stroke=\"#8B0000\"\r\n        strokeWidth=\"4px\"\r\n        fontSize=\"40px\"\r\n        dy=\".3em\"\r\n      >\r\n        {props.data.health}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default God;\r\n","import React from \"react\";\r\nimport Tile from \"./Tile/Tile\";\r\nimport Well from \"./Well/Well\";\r\nimport God from \"./God/God\";\r\n\r\nconst Board = (props) => {\r\n  const hexSize = 60;\r\n  const boardMaxHeight = 6;\r\n  const godMaxHeight = boardMaxHeight + 1;\r\n  const boardTilesMap =\r\n    props.user === \"player2\"\r\n      ? { G: 2, F: 5, E: 6, D: 5, C: 6, B: 5, A: 2 }\r\n      : { A: 2, B: 5, C: 6, D: 5, E: 6, F: 5, G: 2 };\r\n  const wellPositions =\r\n    props.user === \"player2\"\r\n      ? { G: [3, 0], A: [3, 0] }\r\n      : { A: [0, 3], G: [0, 3] };\r\n  const godPositions = props.user === \"player2\" ? { D: [6, 0] } : { D: [0, 6] };\r\n\r\n  const tiles = Object.keys(boardTilesMap).map((column, i) => {\r\n    return [...Array(boardTilesMap[column])].map((_, j) => {\r\n      let parity = i % 2 === 0;\r\n      let columnNr =\r\n        props.user === \"player2\" ? boardTilesMap[column] - j : j + 1;\r\n      return (\r\n        <Tile\r\n          key={column + columnNr}\r\n          id={column + columnNr}\r\n          type={props.data.tiles[column + columnNr].type}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 1.5}\r\n          startPosY={\r\n            parity\r\n              ? Math.sqrt(3) *\r\n                  hexSize *\r\n                  ((boardMaxHeight - boardTilesMap[column]) * 0.5 + j) +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n              : Math.sqrt(3) * hexSize * j + Math.sqrt(3) * hexSize\r\n          }\r\n          user={props.user}\r\n          opponent={props.opponent}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const wells = Object.keys(wellPositions).map((column) => {\r\n    return wellPositions[column].map((_, i) => {\r\n      let parity = Object.keys(boardTilesMap).indexOf(column) % 2 === 0;\r\n      return (\r\n        <Well\r\n          key={\"well-\" + column + wellPositions[column][i]}\r\n          id={\"well-\" + column + wellPositions[column][i]}\r\n          data={props.data.wells[column + wellPositions[column][i]]}\r\n          r={hexSize * 0.5}\r\n          cx={\r\n            hexSize * 1.5 * Object.keys(boardTilesMap).indexOf(column) + hexSize\r\n          }\r\n          cy={\r\n            parity\r\n              ? (boardMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  wellPositions[column].length +\r\n                  [0, 3][i]) *\r\n                Math.sqrt(3) *\r\n                hexSize\r\n              : (boardMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  wellPositions[column].length +\r\n                  [0, 3][i]) *\r\n                  Math.sqrt(3) *\r\n                  hexSize +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n          }\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const gods = Object.keys(godPositions).map((column) => {\r\n    return godPositions[column].map((_, i) => {\r\n      let parity = Object.keys(boardTilesMap).indexOf(column) % 2 === 0;\r\n      return (\r\n        <God\r\n          key={\"god-\" + column + godPositions[column][i]}\r\n          id={column + godPositions[column][i]}\r\n          data={props.data.gods[column + godPositions[column][i]]}\r\n          r={hexSize * 0.65}\r\n          cx={\r\n            hexSize * 1.5 * Object.keys(boardTilesMap).indexOf(column) + hexSize\r\n          }\r\n          cy={\r\n            parity\r\n              ? (godMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  godPositions[column].length +\r\n                  [0, 6][i]) *\r\n                Math.sqrt(3) *\r\n                hexSize\r\n              : (godMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  godPositions[column].length +\r\n                  [0, 6][i]) *\r\n                  Math.sqrt(3) *\r\n                  hexSize +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n          }\r\n          user={props.user}\r\n          opponent={props.opponent}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"60vw\", justifyContent: \"center\", display: \"flex\" }}>\r\n      <svg\r\n        width={\r\n          hexSize * 1.5 * Object.keys(boardTilesMap).length + hexSize * 0.5\r\n        }\r\n        height={Math.sqrt(3) * hexSize * godMaxHeight}\r\n      >\r\n        {tiles}\r\n        {wells}\r\n        {gods}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport images from \"../../../../assets/images/cards/images\";\r\nimport \"./Card.css\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\n\r\nconst Card = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const cardHandler = () => {\r\n    if (\r\n      state.hand[props.index].selectable &&\r\n      state.data[props.user].cards[props.id].faeria_cost <=\r\n        state.data[props.user].faeria\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        hand_id: props.index,\r\n        card_id: props.id,\r\n      };\r\n      if (state.data[props.user].cards[props.id].type === \"event\") {\r\n        dispatch(\"SELECT_EVENT\", payload);\r\n      } else {\r\n        dispatch(\"SELECT_CARD\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cardDisabled = () => {};\r\n\r\n  const clickAction =\r\n    state.data[props.user].mulligan ||\r\n    state.currentAction === \"event_choose_occupant\"\r\n      ? props.clickAction\r\n      : state.data.status.current !== props.user || props.owner !== props.user\r\n      ? cardDisabled\r\n      : cardHandler;\r\n\r\n  const imgSrc =\r\n    props.owner === props.opponent ? images[\"cardback\"] : images[props.data.id];\r\n\r\n  return (\r\n    <div className={props.classname} onClick={clickAction}>\r\n      <img\r\n        id={props.index}\r\n        alt=\"\"\r\n        src={imgSrc}\r\n        width={props.width}\r\n        height={parseInt(props.height) - 6 + \"px\"}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst Hand = (props) => {\r\n  const state = useStore()[0];\r\n\r\n  const cards = props.data.hand.map((id, index) => {\r\n    const cardClass =\r\n      state.hand[index + 1].selected && props.user === props.owner\r\n        ? \"-selected\"\r\n        : \"\";\r\n    const cardOwner = props.user === props.owner ? \"card\" : \"enemy-card\";\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index + 1}\r\n        data={props.data.cards[id]}\r\n        height={props.height}\r\n        width=\"120px\"\r\n        classname={cardOwner + cardClass}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.owner}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"60vw\",\r\n        height: props.height,\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        alignSelf: props.align,\r\n      }}\r\n    >\r\n      {cards}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hand;\r\n","const images_ui = {\r\n    'wheel-B3': 'assets/images/ui/pluscard.png',\r\n    'wheel-C2': 'assets/images/ui/pluscheekia.png',\r\n}\r\n\r\nexport default images_ui;","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport images_ui from \"../../../../assets/images/ui/images_ui\";\r\n\r\nconst WheelButton = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const selectable = state.wheelbuttons[props.id].selectable\r\n    ? \"\"\r\n    : \" not-selectable\";\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  const selectHandler = () => {\r\n    if (state.wheelbuttons[props.id].selectable) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n      };\r\n      switch (props.id) {\r\n        case \"wheel-B3\":\r\n          dispatch(\"DRAW_CARD\", payload);\r\n          break;\r\n        case \"wheel-C2\":\r\n          dispatch(\"PLUS_FAERIA\", props.user);\r\n          break;\r\n        default:\r\n          dispatch(\"SELECT_LAND\", {\r\n            player: props.user,\r\n            wheelbutton_id: props.id,\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <g>\r\n      <defs>\r\n        <pattern\r\n          id={\"buttonimage-\" + props.id}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={images_ui[props.id]}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n      <polygon\r\n        className={props.className + selectable}\r\n        fill={\"url(#buttonimage-\" + props.id + \")\"}\r\n        id={props.id}\r\n        points={points}\r\n        onClick={selectHandler}\r\n      />\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default WheelButton;\r\n","import React from \"react\";\r\nimport \"./EndTurnButton.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst EndTurnButton = (props) => {\r\n  const dispatch = useStore()[1];\r\n\r\n  const endTurnHandler = () => {\r\n    const payload = {\r\n      player: props.user,\r\n      opponent: props.opponent,\r\n      id: props.id,\r\n    };\r\n    dispatch(\"END_TURN\", payload);\r\n  };\r\n\r\n  const enemyTurnHandler = () => {};\r\n\r\n  const btnText =\r\n    props.data.turn === 0\r\n      ? \"MULLIGAN\"\r\n      : props.opponent === props.data.current\r\n      ? \"ENEMY TURN\"\r\n      : \"END TURN\";\r\n  const btnClass =\r\n    props.opponent === props.data.current\r\n      ? \"enemyturn-button\"\r\n      : \"endturn-button\";\r\n  const btnClassText =\r\n    props.opponent === props.data.current ? \"enemyturn-text\" : \"endturn-text\";\r\n  const btnOnClick =\r\n    props.data.turn === 0 || props.opponent === props.data.current\r\n      ? enemyTurnHandler\r\n      : endTurnHandler;\r\n\r\n  return (\r\n    <g onClick={btnOnClick}>\r\n      <rect\r\n        x=\"50\"\r\n        y=\"125\"\r\n        rx=\"20\"\r\n        ry=\"20\"\r\n        width=\"200\"\r\n        height=\"50\"\r\n        className={btnClass}\r\n      />\r\n      <text x=\"150\" y=\"150\" fontSize=\"25\" className={btnClassText} dy=\".3em\">\r\n        {btnText}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default EndTurnButton;\r\n","import React from \"react\";\r\nimport WheelButton from \"./WheelButton/WheelButton\";\r\nimport EndTurnButton from \"../../UI/EndTurnButton/EndTurnButton\";\r\nimport \"./Wheel.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst Wheel = (props) => {\r\n  const state = useStore()[0];\r\n\r\n  const hexSize = 40;\r\n  const boardTilesMap = { A: 2, B: 3, C: 2 };\r\n  const boardMaxHeight = 3;\r\n  const offsetX =\r\n    (300 -\r\n      (hexSize * 1.5 * Object.keys(boardTilesMap).length + hexSize * 0.5)) *\r\n    0.5;\r\n  const offsetY =\r\n    (300 - Math.sqrt(3) * hexSize * boardMaxHeight - Math.sqrt(3) * hexSize) *\r\n    0.5;\r\n\r\n  const wheel = Object.keys(boardTilesMap).map((column, i) => {\r\n    return [...Array(boardTilesMap[column])].map((_, j) => {\r\n      let parity = i % 2 !== 0;\r\n      return (\r\n        <WheelButton\r\n          key={\"wheel-\" + column + (j + 1)}\r\n          id={\"wheel-\" + column + (j + 1)}\r\n          className={\"wheel-\" + column + (j + 1)}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 1.5 + offsetX}\r\n          startPosY={\r\n            parity\r\n              ? Math.sqrt(3) *\r\n                  hexSize *\r\n                  ((boardMaxHeight - boardTilesMap[column]) * 0.5 + j) +\r\n                Math.sqrt(3) * hexSize * 0.5 +\r\n                offsetY\r\n              : Math.sqrt(3) * hexSize * j + Math.sqrt(3) * hexSize + offsetY\r\n          }\r\n          user={props.user}\r\n          opponent={props.opponent}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const wheelOutput = !state.data[props.user].wheel_used ? (\r\n    wheel\r\n  ) : (\r\n    <EndTurnButton\r\n      data={props.data}\r\n      user={props.user}\r\n      opponent={props.opponent}\r\n      id={props.id}\r\n    />\r\n  );\r\n  const strokeColor =\r\n    props.data.current === props.opponent ? \"#962d3e\" : \"#00FA9A\";\r\n  const fillColor =\r\n    props.data.current === props.opponent ? \"#262626\" : \"#2F4F4F\";\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"300px\",\r\n        height: \"300px\",\r\n        position: \"absolute\",\r\n        bottom: \"50px\",\r\n        left: \"50px\",\r\n      }}\r\n    >\r\n      <svg width=\"300px\" height=\"300\">\r\n        <circle\r\n          cx=\"150\"\r\n          cy=\"150\"\r\n          r=\"145\"\r\n          stroke={strokeColor}\r\n          strokeWidth=\"5\"\r\n          fill={fillColor}\r\n        />\r\n        {wheelOutput}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n","import React from \"react\";\r\n\r\nconst Faeria = (props) => {\r\n  return (\r\n    <svg>\r\n      <g>\r\n        <circle\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          r=\"50\"\r\n          stroke=\"#001920\"\r\n          strokeWidth=\"5\"\r\n          fill=\"#00bae8\"\r\n        />\r\n        <text\r\n          x=\"50%\"\r\n          y=\"50%\"\r\n          stroke=\"#001920\"\r\n          strokeWidth=\"3px\"\r\n          textAnchor=\"middle\"\r\n          fontSize=\"50px\"\r\n          dy=\".3em\"\r\n        >\r\n          {props.faeria}\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Faeria;\r\n","import React from \"react\";\r\n\r\nconst Deck = (props) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div style={{ border: \"5px solid #001920\" }}>\r\n        Deck: {props.deckcounter}\r\n      </div>\r\n      <div style={{ border: \"5px solid #001920\" }}>\r\n        Hand: {props.handcounter}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\n\r\nconst Hexagon = (props) => {\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  return <polygon className={props.className} points={points} />;\r\n};\r\n\r\nexport default Hexagon;\r\n","import React from \"react\";\r\nimport Faeria from \"../../Game/Faeria/Faeria\";\r\nimport Deck from \"../../Game/Deck/Deck\";\r\nimport Hexagon from \"../Hexagon/Hexagon\";\r\nimport \"./Infobox.css\";\r\n\r\nconst Infobox = (props) => {\r\n  const landCount = getLandCount(props.tiles, props.player);\r\n  const align = props.align;\r\n  const hexSize = 20;\r\n  const landCounter = Object.keys(landCount).map((column, i) => {\r\n    return (\r\n      <g key={column} id={column}>\r\n        <Hexagon\r\n          className={column}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 2.5 + 8}\r\n          startPosY={hexSize - hexSize * Math.sqrt(3) * 0.5}\r\n        />\r\n        <text\r\n          x={hexSize * i * 2.5 + hexSize + 8}\r\n          y={\r\n            hexSize * Math.sqrt(3) * 0.5 +\r\n            (hexSize - hexSize * Math.sqrt(3) * 0.5)\r\n          }\r\n          className={column + \"-text\"}\r\n          fontSize={hexSize}\r\n          dy=\".3em\"\r\n        >\r\n          {landCount[column]}\r\n        </text>\r\n      </g>\r\n    );\r\n  });\r\n  const info_landcounter = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <svg height={hexSize * 2} width=\"208px\" display=\"block\" margin=\"auto\">\r\n        {landCounter}\r\n      </svg>\r\n    </div>\r\n  );\r\n  const info_faeria = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Faeria faeria={props.data.faeria} />\r\n    </div>\r\n  );\r\n  const info_player = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div\r\n        style={{\r\n          width: \"50%\",\r\n          border: \"5px solid #001920\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <b>{props.data.name}</b>\r\n      </div>\r\n    </div>\r\n  );\r\n  const info =\r\n    align === \"flex-end\" ? (\r\n      <React.Fragment>\r\n        {info_landcounter}\r\n        {info_faeria}\r\n        {info_player}\r\n        <Deck\r\n          deckcounter={props.data.deck.length}\r\n          handcounter={props.data.hand.length}\r\n        />\r\n      </React.Fragment>\r\n    ) : (\r\n      <React.Fragment>\r\n        <Deck\r\n          deckcounter={props.data.deck.length}\r\n          handcounter={props.data.hand.length}\r\n        />\r\n        {info_player}\r\n        {info_faeria}\r\n        {info_landcounter}\r\n      </React.Fragment>\r\n    );\r\n  return (\r\n    <div\r\n      style={{\r\n        alignSelf: align,\r\n        margin: \"25px\",\r\n      }}\r\n    >\r\n      {info}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getLandCount(tiles, player) {\r\n  let lands = { f: 0, l: 0, m: 0, d: 0 };\r\n  Object.values(tiles).forEach((tile) => {\r\n    if (tile.owner === player && tile.type.charAt(0) !== \"p\") {\r\n      lands[tile.type.charAt(0)] += 1;\r\n    }\r\n  });\r\n  return lands;\r\n}\r\n\r\nexport default Infobox;\r\n","import React, { useState } from \"react\";\r\nimport \"./MulliganModal.css\";\r\nimport Card from \"../../Game/Hand/Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\nimport axios from \"axios\";\r\n\r\nconst MulliganModal = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const [initialHand, setInitialHand] = useState({\r\n    0: false,\r\n    1: false,\r\n    2: false,\r\n  });\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n\r\n  const swapHandler = (event) => {\r\n    const newHand = JSON.parse(JSON.stringify(initialHand));\r\n    newHand[event.target.id] = !newHand[event.target.id];\r\n    setInitialHand(newHand);\r\n  };\r\n\r\n  const classname = (index) => {\r\n    return !initialHand[index] ? \"card-mulligan\" : \"card-mulligan-selected\";\r\n  };\r\n\r\n  const cards = state.data[props.user].deck.slice(0, 3).map((id, index) => {\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index}\r\n        data={state.data[props.user].cards[id]}\r\n        height=\"486px\"\r\n        width=\"360px\"\r\n        clickAction={swapHandler}\r\n        classname={classname(index)}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.user}\r\n      />\r\n    );\r\n  });\r\n\r\n  const confirmHandler = () => {\r\n    if (btnDisabled) {\r\n      return;\r\n    }\r\n    setBtnDisabled(true);\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const getdata = new FormData();\r\n    getdata.append(\"id\", props.id);\r\n    axios\r\n      .post(\"/faeria/Faeria/utils/getState.php\", getdata)\r\n      .then((res) => {\r\n        const prevState = JSON.parse(res.data);\r\n        newState.data[props.opponent] = prevState.data[props.opponent];\r\n        const prevHand = newState.data[props.user].deck.slice(0, 3);\r\n        const cardsToReplace = [];\r\n        const newHand = [];\r\n        for (let i = 0; i < prevHand.length; i++) {\r\n          if (initialHand[i]) {\r\n            cardsToReplace.push(\r\n              newState.data[props.user].cards[prevHand[i]].id\r\n            );\r\n          } else {\r\n            newHand.push(parseInt(prevHand[i]));\r\n          }\r\n        }\r\n        const replacePool = Object.entries(\r\n          newState.data[props.user].cards\r\n        ).filter(\r\n          (card) =>\r\n            !cardsToReplace.includes(card[1].id) &&\r\n            !newHand.includes(parseInt(card[0])) &&\r\n            parseInt(card[0]) !== 0\r\n        );\r\n        for (let i = 0; i < cardsToReplace.length; i++) {\r\n          let random = Math.floor(Math.random() * replacePool.length);\r\n          newHand.push(parseInt(replacePool[random][0]));\r\n          replacePool.splice(random, 1);\r\n        }\r\n        const shuffledDeck = [];\r\n        const prevDeck = newState.data[props.user].deck.filter(\r\n          (card) => !newHand.includes(card)\r\n        );\r\n        const deckLength = prevDeck.length;\r\n        for (let i = 0; i < deckLength; i++) {\r\n          let random = Math.floor(Math.random() * prevDeck.length);\r\n          shuffledDeck.push(prevDeck[random]);\r\n          prevDeck.splice(random, 1);\r\n        }\r\n        if (props.user === \"player2\") {\r\n          newHand.push(0);\r\n        }\r\n        newState.data[props.user].deck = shuffledDeck;\r\n        newState.data[props.user].hand = newHand;\r\n        newState.data[props.user].mulligan = false;\r\n        const postdata = new FormData();\r\n        postdata.append(\"react_state\", JSON.stringify(newState));\r\n        postdata.append(\"id\", props.id);\r\n        axios\r\n          .post(\r\n            \"/faeria/Faeria/utils/saveState.php\",\r\n            postdata\r\n          )\r\n          .then(() => {\r\n            dispatch(\"CONFIRM_MULLIGAN\", newState);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Network Error\", error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Network Error\", error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div style={{ justifyContent: \"center\", display: \"flex\", height: \"75%\" }}>\r\n        {cards}\r\n      </div>\r\n      <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n        <div className=\"modal-confirm\" onClick={confirmHandler}>\r\n          CONFIRM\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MulliganModal;\r\n","import React from \"react\";\r\nimport \"./ChooseModal.css\";\r\nimport Card from \"../../Game/Hand/Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst ChooseModal = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const chooseHandler = (event) => {\r\n    const payload = {\r\n      id: state.chooseParams.cards[event.target.id],\r\n      tile: state.chooseParams.tile,\r\n      player: props.user,\r\n      opponent: props.opponent,\r\n    };\r\n    dispatch(\"CHOOSE_CARD\", payload);\r\n  };\r\n\r\n  const cards = state.chooseParams.cards.map((id, index) => {\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index}\r\n        data={{ id: id }}\r\n        height=\"486px\"\r\n        width=\"360px\"\r\n        clickAction={chooseHandler}\r\n        classname=\"card-choose\"\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.user}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div style={{ justifyContent: \"center\", display: \"flex\", height: \"75%\" }}>\r\n        {cards}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChooseModal;\r\n","import React, { useEffect } from \"react\";\r\nimport Board from \"./Board/Board\";\r\nimport Hand from \"./Hand/Hand\";\r\nimport Wheel from \"./Wheel/Wheel\";\r\nimport Infobox from \"../UI/Infobox/Infobox\";\r\nimport MulliganModal from \"../UI/MulliganModal/MulliganModal\";\r\nimport ChooseModal from \"../UI/ChooseModal/ChooseModal\";\r\nimport { useStore } from \"../../hooks-store/store\";\r\nimport axios from \"axios\";\r\n\r\nconst Game = () => {\r\n  const [state, dispatch] = useStore();\r\n  const user = document.getElementById(\"user\").value;\r\n  const opponent = document.getElementById(\"opponent\").value;\r\n  const id = document.getElementById(\"game_id\").value;\r\n\r\n  useEffect(() => {\r\n    const payload = { player: user, opponent: opponent, id: id };\r\n    if (!state.data[user].shuffle) {\r\n      dispatch(\"SHUFFLE_DECK\", payload);\r\n    }\r\n    if (\r\n      !state.data[user].mulligan &&\r\n      !state.data[opponent].mulligan &&\r\n      state.data.status.turn === 0 &&\r\n      user === \"player1\"\r\n    ) {\r\n      dispatch(\"START_GAME\", payload);\r\n    }\r\n    if (\r\n      (state.data.status.current === opponent && !state.data[user].mulligan) ||\r\n      (!state.data[user].mulligan && state.data[opponent].mulligan)\r\n    ) {\r\n      const timer = setTimeout(() => {\r\n        const formdata = new FormData();\r\n        formdata.append(\"id\", id);\r\n        let timestamp = Date.now();\r\n        axios\r\n          .post(\r\n            \"/faeria/Faeria/utils/getState.php?timestamp=\" + timestamp,\r\n            formdata\r\n          )\r\n          .then((res) => {\r\n            dispatch(\"SET_DATA\", JSON.parse(res.data));\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Network Error\", error.message);\r\n          });\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const mulligan = state.data[user].mulligan ? (\r\n    <MulliganModal user={user} opponent={opponent} id={id} />\r\n  ) : null;\r\n\r\n  const choose =\r\n    state.data.status.current === user &&\r\n    state.currentAction === \"event_choose_occupant\" ? (\r\n      <ChooseModal user={user} opponent={opponent} id={id} />\r\n    ) : null;\r\n\r\n  const output = state.data.status.finished ? (\r\n    <h1 style={{ textAlign: \"center\" }}>\r\n      WINNER: {state.data[state.data.status.winner].name}\r\n    </h1>\r\n  ) : (\r\n    <div style={{ display: \"flex\", height: \"100vh\" }}>\r\n      {mulligan}\r\n      {choose}\r\n      <div\r\n        style={{\r\n          width: \"20vw\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Infobox\r\n          align=\"flex-start\"\r\n          data={state.data[opponent]}\r\n          tiles={state.data.board.tiles}\r\n          player={opponent}\r\n        />\r\n        <Infobox\r\n          align=\"flex-end\"\r\n          data={state.data[user]}\r\n          tiles={state.data.board.tiles}\r\n          player={user}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"60vw\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Hand\r\n          data={state.data[opponent]}\r\n          owner={opponent}\r\n          height=\"36px\"\r\n          align=\"flex-start\"\r\n          user={user}\r\n          opponent={opponent}\r\n        />\r\n        <Board data={state.data.board} user={user} opponent={opponent} />\r\n        <Hand\r\n          data={state.data[user]}\r\n          owner={user}\r\n          height=\"166px\"\r\n          align=\"flex-end\"\r\n          user={user}\r\n          opponent={opponent}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"20vw\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Wheel\r\n          data={state.data.status}\r\n          user={user}\r\n          opponent={opponent}\r\n          id={id}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return output;\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\n\nconst app = () => {\n  return <Game />;\n};\n\nexport default app;\n","export default class EventProcessor {\r\n  constructor(state, data) {\r\n    this.state = state;\r\n    this.data = data;\r\n    this.eventLibrary = {\r\n      0: \"processEvent_0\",\r\n      5: \"processEvent_5\",\r\n      6: \"processEvent_6\",\r\n      7: \"processEvent_7\",\r\n      9: \"processEvent_9\",\r\n      11: \"processEvent_11\",\r\n      17: \"processEvent_17\",\r\n      23: \"processEvent_23\",\r\n      34: \"processEvent_34\",\r\n      35: \"processEvent_35\",\r\n      46: \"processEvent_46\",\r\n      48: \"processEvent_48\",\r\n      49: \"processEvent_49\",\r\n      51: \"processEvent_51\",\r\n      52: \"processEvent_52\",\r\n    };\r\n    this.summonEffectLibrary = {\r\n      8: \"processSummonEffect_8\",\r\n      14: \"processSummonEffect_14\",\r\n      25: \"processSummonEffect_25\",\r\n      27: \"processSummonEffect_27\",\r\n      30: \"processSummonEffect_30\",\r\n      36: \"processSummonEffect_36\",\r\n      37: \"processSummonEffect_37\",\r\n      38: \"processSummonEffect_38\",\r\n    };\r\n    this.giftEffectLibrary = {\r\n      1: \"processGiftEffect_1\",\r\n      16: \"processGiftEffect_16\",\r\n      22: \"processGiftEffect_22\",\r\n      26: \"processGiftEffect_26\",\r\n      31: \"processGiftEffect_31\",\r\n      39: \"processGiftEffect_39\",\r\n    };\r\n    this.lastwordEffectLibrary = {\r\n      3: \"processLastwordEffect_3\",\r\n      24: \"processLastwordEffect_24\",\r\n      41: \"processLastwordEffect_41\",\r\n      44: \"processLastwordEffect_44\",\r\n    };\r\n    this.productionEffectLibrary = {\r\n      19: \"processProductionEffect_19\",\r\n      20: \"processProductionEffect_20\",\r\n      40: \"processProductionEffect_40\",\r\n      47: \"processProductionEffect_47\",\r\n    };\r\n    this.specialEffectLibrary = {\r\n      37: \"processSpecialEffect_37\",\r\n      38: \"processSpecialEffect_38\",\r\n      39: \"processSpecialEffect_39\",\r\n      43: \"processSpecialEffect_43\",\r\n    };\r\n  }\r\n\r\n  initEventLogic() {\r\n    const newHand = this.state.hand;\r\n    newHand[this.data.hand_id].selected = !newHand[this.data.hand_id].selected;\r\n    if (newHand[this.data.hand_id].selected) {\r\n      this[\r\n        this.eventLibrary[\r\n          this.state.data[this.data.player].cards[this.data.card_id].id\r\n        ]\r\n      ](\"init\");\r\n    } else {\r\n      this[\r\n        this.eventLibrary[\r\n          this.state.data[this.data.player].cards[this.data.card_id].id\r\n        ]\r\n      ](\"revert\");\r\n    }\r\n    Object.keys(newHand).forEach((key) => {\r\n      if (parseInt(key) !== this.data.hand_id) {\r\n        newHand[key].selectable = !newHand[key].selectable;\r\n      }\r\n    });\r\n    this.state.hand = newHand;\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        if (newHand[this.data.hand_id].selected) {\r\n          this.state.wheelbuttons[key].selectable = false;\r\n        } else {\r\n          this.state.wheelbuttons[key].selectable = true;\r\n        }\r\n      });\r\n    } else {\r\n      if (newHand[this.data.hand_id].selected) {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      } else {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n    }\r\n    return this.state;\r\n  }\r\n\r\n  handleEventLogic() {\r\n    const selected_card_id = this.getSelectedCard();\r\n    this[\r\n      this.eventLibrary[\r\n        this.state.data[this.data.player].cards[\r\n          this.state.data[this.data.player].hand[selected_card_id - 1]\r\n        ].id\r\n      ]\r\n    ](\"handle\");\r\n    const newHand = this.state.hand;\r\n    newHand[selected_card_id].selected = !newHand[selected_card_id].selected;\r\n    if (\r\n      this.state.currentAction !== \"event_move_occupant\" &&\r\n      this.state.currentAction !== \"event_choose_occupant\"\r\n    ) {\r\n      Object.keys(newHand).forEach((key) => {\r\n        newHand[key].selectable = true;\r\n      });\r\n      if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n          this.state.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      this.state.currentAction = \"\";\r\n    }\r\n    this.state.hand = newHand;\r\n    this.state.data[this.data.player].faeria -=\r\n      this.state.data[this.data.player].cards[\r\n        this.state.data[this.data.player].hand[selected_card_id - 1]\r\n      ].faeria_cost;\r\n    this.state.data[this.data.player].hand.splice(selected_card_id - 1, 1);\r\n    return this.state;\r\n  }\r\n\r\n  processSummonEffect(occupant) {\r\n    this[this.summonEffectLibrary[occupant.id]]();\r\n    return this.state;\r\n  }\r\n\r\n  initGiftEffect(occupant) {\r\n    this[this.giftEffectLibrary[occupant.id]](\"init\", occupant);\r\n    return this.state;\r\n  }\r\n\r\n  processGiftEffect(selected_occupant_id) {\r\n    const occupant = this.state.data.board.tiles[selected_occupant_id].occupant;\r\n    this[this.giftEffectLibrary[occupant.id]](\"handle\", selected_occupant_id);\r\n    this.state.tiles[selected_occupant_id].occupantSelected = false;\r\n    this.state.currentAction = \"\";\r\n    Object.keys(this.state.hand).forEach((key) => {\r\n      this.state.hand[key].selectable = true;\r\n    });\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        this.state.wheelbuttons[key].selectable = true;\r\n      });\r\n    } else {\r\n      this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n    }\r\n    return this.state;\r\n  }\r\n\r\n  processLastwordEffect(occupant, tile) {\r\n    this[this.lastwordEffectLibrary[occupant.id]](occupant, tile);\r\n    return this.state;\r\n  }\r\n\r\n  processProductionEffect(occupant, tile) {\r\n    this[this.productionEffectLibrary[occupant.id]](tile);\r\n    return this.state;\r\n  }\r\n\r\n  processSpecialEffect(id, params) {\r\n    this[this.specialEffectLibrary[id]](params);\r\n    return this.state;\r\n  }\r\n\r\n  //HELPERS\r\n\r\n  setSelectStateForOccupants(friendly, enemy) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(\r\n          this.state.data.board.tiles[key].occupant.player\r\n        ) &&\r\n        !this.state.data.board.tiles[key].occupant.divine\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectStateForOccupantsDivine(friendly, enemy) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(this.state.data.board.tiles[key].occupant.player)\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectStateForConditionalOccupants(friendly, enemy, attack) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(\r\n          this.state.data.board.tiles[key].occupant.player\r\n        ) &&\r\n        !this.state.data.board.tiles[key].occupant.divine &&\r\n        this.state.data.board.tiles[key].occupant.attack <= attack\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getSelectedCard() {\r\n    return parseInt(\r\n      Object.keys(this.state.hand).filter(\r\n        (key) => this.state.hand[key].selected\r\n      )[0]\r\n    );\r\n  }\r\n\r\n  getRemoveOccupant(tile) {\r\n    //Balloon Cheek\r\n    this.processSpecialEffect(43, {\r\n      action: \"remove\",\r\n      tile: tile,\r\n      attack: -1,\r\n    });\r\n    //Balloon Cheek\r\n\r\n    return {\r\n      player: \"\",\r\n      id: 0,\r\n      type: \"\",\r\n      faeria_cost: 0,\r\n      land_cost: {\r\n        forest: 0,\r\n        desert: 0,\r\n        mountain: 0,\r\n        lake: 0,\r\n        wild: 0,\r\n      },\r\n      attack: 0,\r\n      base_attack: 0,\r\n      health: 0,\r\n      base_health: 0,\r\n      movement: {\r\n        range: 1,\r\n        haste: true,\r\n        dash: 0,\r\n        special: {\r\n          aquatic: false,\r\n          flying: false,\r\n          jump: false,\r\n        },\r\n      },\r\n      taunt: false,\r\n      divine: false,\r\n      protection: false,\r\n      ranged: false,\r\n      canCollect: false,\r\n      hasMoved: false,\r\n      hasDashed: false,\r\n      hasAttacked: false,\r\n      effects: {\r\n        summon: false,\r\n        gift: false,\r\n        lastword: false,\r\n        production: false,\r\n      },\r\n      effectUsed: false,\r\n    };\r\n  }\r\n\r\n  setSelectStateForBuildTiles(landtype) {\r\n    const newTileState = this.state.tiles;\r\n    const anyAdjacent = (tile) =>\r\n      this.state.data.board.tiles[tile].owner === this.data.player;\r\n    const anyAdjacentFromOccupant = (tile) =>\r\n      this.state.data.board.tiles[tile].occupant.player === this.data.player &&\r\n      this.state.data.board.tiles[tile].type !== \"none\";\r\n    const god_key = Object.keys(this.state.gods).filter(\r\n      (god) => this.state.gods[god].player === this.data.player\r\n    );\r\n    Object.keys(newTileState).forEach((key) => {\r\n      let tileType = this.state.data.board.tiles[key].type;\r\n      let tileOwner = this.state.data.board.tiles[key].owner;\r\n      if (\r\n        tileType === \"none\" ||\r\n        (tileType === \"prairie\" && tileOwner === this.data.player)\r\n      ) {\r\n        if (\r\n          newTileState[key].adjacent.some(anyAdjacent) ||\r\n          newTileState[key].adjacent.some(anyAdjacentFromOccupant) ||\r\n          this.state.gods[god_key].adjacent.includes(key)\r\n        ) {\r\n          if (\r\n            !this.state.data.board.tiles[key].occupant.movement.special.aquatic\r\n          ) {\r\n            newTileState[key].selectable = true;\r\n          } else if (landtype === \"lake\") {\r\n            newTileState[key].selectable = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.state.tiles = newTileState;\r\n  }\r\n\r\n  setSelectStateForAllTiles(selectable) {\r\n    Object.keys(this.state.tiles).forEach((key) => {\r\n      this.state.tiles[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  setSelectStateForGods(selectable) {\r\n    Object.keys(this.state.gods).forEach((key) => {\r\n      this.state.gods[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  setSelectStateForHand(selectable) {\r\n    Object.keys(this.state.hand).forEach((key) => {\r\n      this.state.hand[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  setSelectStateForWheel(selectable) {\r\n    Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n      this.state.wheelbuttons[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  getGodTile() {\r\n    const god = {\r\n      player1: \"D6\",\r\n      player2: \"D0\",\r\n    };\r\n    return god[this.data.player];\r\n  }\r\n\r\n  getLandCostForType(card, type) {\r\n    return this.state.data[this.data.player].cards[card].land_cost[type];\r\n  }\r\n\r\n  getLandCostForOccupant(tile, type) {\r\n    return this.state.data.board.tiles[tile].occupant.land_cost[type];\r\n  }\r\n\r\n  handleCustomDrawLogic(index, length, dmgAllowed) {\r\n    if (index !== -1) {\r\n      if (this.state.data[this.data.player].hand.length < length) {\r\n        this.state.data[this.data.player].hand.push(\r\n          this.state.data[this.data.player].deck.splice(index, 1)[0]\r\n        );\r\n      } else {\r\n        this.state.data[this.data.player].deck.splice(index, 1);\r\n      }\r\n    } else if (dmgAllowed) {\r\n      this.state.data.board.gods[this.getGodTile()].health -= ++this.state.data[\r\n        this.data.player\r\n      ].health_dmg;\r\n      if (this.state.data.board.gods[this.getGodTile()].health <= 0) {\r\n        this.state.data.status.finished = true;\r\n        this.state.data.status.winner = this.data.opponent;\r\n      }\r\n    }\r\n  }\r\n\r\n  getRandomTiles() {\r\n    const randomTiles = Object.keys(this.state.data.board.tiles);\r\n    for (let i = randomTiles.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [randomTiles[i], randomTiles[j]] = [randomTiles[j], randomTiles[i]];\r\n    }\r\n    return randomTiles;\r\n  }\r\n\r\n  getOccupantByID(id, params = {}) {\r\n    switch (id) {\r\n      case 10:\r\n        return {\r\n          player: this.data.player,\r\n          id: 10,\r\n          type: \"creature\",\r\n          faeria_cost: 1,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 1, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: true,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 12:\r\n        return {\r\n          player: params.player,\r\n          id: 12,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 2, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: true,\r\n          divine: true,\r\n          protection: true,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 13:\r\n        return {\r\n          player: this.data.player,\r\n          id: 13,\r\n          type: \"creature\",\r\n          faeria_cost: 4,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 2, wild: 0 },\r\n          attack: 6,\r\n          base_attack: 6,\r\n          health: 4,\r\n          base_health: 4,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: params.canCollect,\r\n          hasMoved: params.hasMoved,\r\n          hasDashed: false,\r\n          hasAttacked: params.hasAttacked,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 21:\r\n        return {\r\n          player: params.player,\r\n          id: 21,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 0, mountain: 2, lake: 0, wild: 0 },\r\n          attack: 2,\r\n          base_attack: 2,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: true,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 28:\r\n        return {\r\n          player: this.data.player,\r\n          id: 28,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 1, desert: 0, mountain: 0, lake: 0, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 2,\r\n          base_health: 2,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 40:\r\n        return {\r\n          player: params.player,\r\n          id: 40,\r\n          type: \"creature\",\r\n          faeria_cost: 4,\r\n          land_cost: { forest: 0, desert: 1, mountain: 0, lake: 0, wild: 0 },\r\n          attack: 3,\r\n          base_attack: 3,\r\n          health: 5,\r\n          base_health: 5,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: true,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 41:\r\n        return {\r\n          player: params.player,\r\n          id: 41,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 1, mountain: 0, lake: 0, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: true,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: true,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 45:\r\n        return {\r\n          player: params.player,\r\n          id: 45,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 2, mountain: 0, lake: 0, wild: 0 },\r\n          attack: 2,\r\n          base_attack: 2,\r\n          health: 2,\r\n          base_health: 2,\r\n          movement: {\r\n            range: 2,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: true,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          canCollect: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      default:\r\n        return {};\r\n    }\r\n  }\r\n\r\n  setSelectStateForMovementTiles() {\r\n    const jumpTiles = [];\r\n    if (\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.movement.special\r\n        .jump\r\n    ) {\r\n      this.state.tiles[this.data.tile_id].adjacent.forEach((tile) => {\r\n        if (!jumpTiles.includes(tile) && tile !== this.data.tile_id) {\r\n          jumpTiles.push(tile);\r\n        }\r\n        this.state.tiles[tile].adjacent.forEach((adjacent_tile) => {\r\n          if (\r\n            !jumpTiles.includes(adjacent_tile) &&\r\n            adjacent_tile !== this.data.tile_id\r\n          ) {\r\n            jumpTiles.push(adjacent_tile);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    const movementRange =\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.movement.dash >\r\n        0 && !this.state.data.board.tiles[this.data.tile_id].occupant.hasDashed\r\n        ? this.state.data.board.tiles[this.data.tile_id].occupant.movement.dash\r\n        : this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n            .range;\r\n    const rangeTiles = [];\r\n    const rangeTilesHelper = {};\r\n    for (let i = 1; i <= movementRange; i++) {\r\n      if (i === 1) {\r\n        rangeTilesHelper[i] = {};\r\n        this.state.tiles[this.data.tile_id].adjacent.forEach((tile) => {\r\n          let valid = true;\r\n          if (\r\n            this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n              .special.aquatic &&\r\n            !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n              .special.flying\r\n          ) {\r\n            if (\r\n              this.state.data.board.tiles[tile].type !== \"lake\" &&\r\n              this.state.data.board.tiles[tile].type !== \"none\"\r\n            ) {\r\n              valid = false;\r\n            }\r\n          }\r\n          if (\r\n            !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n              .special.aquatic &&\r\n            !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n              .special.flying\r\n          ) {\r\n            if (this.state.data.board.tiles[tile].type === \"none\") {\r\n              valid = false;\r\n            }\r\n          }\r\n          if (valid && !this.state.data.board.tiles[tile].occupant.player) {\r\n            rangeTiles.push(tile);\r\n            rangeTilesHelper[i][tile] = {\r\n              prevTile: this.data.tile_id,\r\n              currentTile: tile,\r\n            };\r\n          }\r\n        });\r\n      } else {\r\n        rangeTilesHelper[i] = {};\r\n        Object.values(rangeTilesHelper[i - 1]).forEach((rangetile) => {\r\n          this.state.tiles[rangetile.currentTile].adjacent\r\n            .filter(\r\n              (rangetile_key) =>\r\n                !this.state.tiles[rangetile.prevTile].adjacent.includes(\r\n                  rangetile_key\r\n                ) && rangetile_key !== rangetile.prevTile\r\n            )\r\n            .forEach((rangetile_adj) => {\r\n              let valid = true;\r\n              this.state.tiles[rangetile_adj].adjacent\r\n                .filter(\r\n                  (rangetile_adj_key) =>\r\n                    rangetile_adj_key !== rangetile.currentTile\r\n                )\r\n                .forEach((rangetile_adj_adj) => {\r\n                  if (\r\n                    this.state.tiles[rangetile_adj_adj].adjacent.includes(\r\n                      rangetile.prevTile\r\n                    )\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                });\r\n              if (this.state.tiles[rangetile_adj].adjacentNonTile) {\r\n                if (\r\n                  this.state.tiles[rangetile_adj].adjacentNonTile.includes(\"D\")\r\n                ) {\r\n                  if (\r\n                    this.state.gods[\r\n                      this.state.tiles[rangetile_adj].adjacentNonTile\r\n                    ].adjacent.includes(rangetile.prevTile)\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                } else {\r\n                  if (\r\n                    this.state.data.board.wells[\r\n                      this.state.tiles[rangetile_adj].adjacentNonTile\r\n                    ].adjacent.includes(rangetile.prevTile)\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n              }\r\n              if (\r\n                this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n                  .special.aquatic &&\r\n                !this.state.data.board.tiles[this.data.tile_id].occupant\r\n                  .movement.special.flying\r\n              ) {\r\n                if (\r\n                  this.state.data.board.tiles[rangetile_adj].type !== \"lake\" &&\r\n                  this.state.data.board.tiles[rangetile_adj].type !== \"none\"\r\n                ) {\r\n                  valid = false;\r\n                }\r\n              }\r\n              if (\r\n                !this.state.data.board.tiles[this.data.tile_id].occupant\r\n                  .movement.special.aquatic &&\r\n                !this.state.data.board.tiles[this.data.tile_id].occupant\r\n                  .movement.special.flying\r\n              ) {\r\n                if (\r\n                  this.state.data.board.tiles[rangetile_adj].type === \"none\"\r\n                ) {\r\n                  valid = false;\r\n                }\r\n              }\r\n              if (\r\n                valid &&\r\n                !rangeTiles.includes(rangetile_adj) &&\r\n                !this.state.data.board.tiles[rangetile_adj].occupant.player\r\n              ) {\r\n                rangeTiles.push(rangetile_adj);\r\n                rangeTilesHelper[i][rangetile_adj] = {\r\n                  prevTile: rangetile.currentTile,\r\n                  currentTile: rangetile_adj,\r\n                };\r\n              }\r\n            });\r\n        });\r\n      }\r\n    }\r\n    const moveRequirementsMet = (tile_id) => {\r\n      if (this.state.data.board.tiles[tile_id].occupant.player) {\r\n        return false;\r\n      }\r\n      if (\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.movement.dash >\r\n          0 &&\r\n        !this.state.data.board.tiles[this.data.tile_id].occupant.hasDashed\r\n      ) {\r\n        if (!rangeTiles.includes(tile_id)) {\r\n          return false;\r\n        }\r\n      } else {\r\n        if (\r\n          this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n            .special.jump\r\n        ) {\r\n          if (!jumpTiles.includes(tile_id) && !rangeTiles.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (!rangeTiles.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      if (\r\n        !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n          .special.aquatic &&\r\n        !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n          .special.flying\r\n      ) {\r\n        if (this.state.data.board.tiles[tile_id].type === \"none\") {\r\n          return false;\r\n        }\r\n      }\r\n      if (\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.movement.special\r\n          .aquatic &&\r\n        !this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n          .special.flying\r\n      ) {\r\n        if (\r\n          this.state.data.board.tiles[tile_id].type !== \"lake\" &&\r\n          this.state.data.board.tiles[tile_id].type !== \"none\"\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n    Object.keys(this.state.tiles).forEach((key) => {\r\n      if (moveRequirementsMet(key)) {\r\n        this.state.tiles[key].selectable = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  //EVENTS\r\n\r\n  //0 - Explore\r\n  processEvent_0(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, false);\r\n      this.setSelectStateForBuildTiles(\"prairie\");\r\n      this.state.currentAction = \"event_tile\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.data[this.data.player].faeria += 2;\r\n      this.state.data.board.tiles[this.data.tile_id].type = \"prairie\";\r\n      this.state.data.board.tiles[this.data.tile_id].owner = this.data.player;\r\n    }\r\n  }\r\n\r\n  //5 - Song of the Mercheek\r\n  processEvent_5(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n      target.health = Math.floor(target.health / 2);\r\n      target.attack =\r\n        Math.floor(target.attack / 2) >= 0 ? Math.floor(target.attack / 2) : 0;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant =\r\n        target.health > 0 ? target : this.getRemoveOccupant(this.data.tile_id);\r\n      if (target.health <= 0 && target.effects.lastword) {\r\n        this.processLastwordEffect(target, this.data.tile_id);\r\n      }\r\n    }\r\n  }\r\n\r\n  //6 - Cheek in a bottle\r\n  processEvent_6(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 3; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex(\r\n            (card) => this.getLandCostForType(card, \"lake\") > 0\r\n          ),\r\n          10,\r\n          false\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //7 - Cheekie in a lamp\r\n  processEvent_7(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 2; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex(\r\n            (card) =>\r\n              this.state.data[this.data.player].cards[card].type === \"event\"\r\n          ),\r\n          10,\r\n          false\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //9 - Rain of Cheek\r\n  processEvent_9(process) {\r\n    if (process === \"handle\") {\r\n      let tileAvailable = true;\r\n      const availableTiles = this.getRandomTiles().filter(\r\n        (tile) => !this.state.data.board.tiles[tile].occupant.player\r\n      );\r\n      let count = 0;\r\n      while (tileAvailable) {\r\n        if (availableTiles.length !== 0) {\r\n          this.state.data.board.tiles[availableTiles.splice(0, 1)].occupant =\r\n            this.getOccupantByID(10);\r\n          if (++count === 6) {\r\n            tileAvailable = false;\r\n          }\r\n        } else {\r\n          tileAvailable = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //11 - Mooncheek\r\n  processEvent_11(process) {\r\n    if (process === \"handle\") {\r\n      Object.keys(this.state.data.board.tiles)\r\n        .filter(\r\n          (key) =>\r\n            this.state.data.board.tiles[key].occupant.player ===\r\n              this.data.player && this.getLandCostForOccupant(key, \"lake\") > 0\r\n        )\r\n        .forEach((tile) => {\r\n          this.state.data.board.tiles[tile].occupant = this.getOccupantByID(\r\n            13,\r\n            {\r\n              hasAttacked:\r\n                this.state.data.board.tiles[tile].occupant.hasAttacked,\r\n              hasMoved: this.state.data.board.tiles[tile].occupant.hasMoved,\r\n              canCollect: this.state.data.board.tiles[tile].occupant.canCollect,\r\n            }\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  //17 - Cheekblast\r\n  processEvent_17(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.setSelectStateForGods(false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.setSelectStateForGods(true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.setSelectStateForGods(false);\r\n      if (this.data.event === \"occupant\") {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 3;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0\r\n            ? target\r\n            : this.getRemoveOccupant(this.data.tile_id);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      if (this.data.event === \"god\") {\r\n        this.state.data.board.gods[this.data.god].health -= 3;\r\n        if (this.state.data.board.gods[this.data.god].health <= 0) {\r\n          this.state.data.status.finished = true;\r\n          this.state.data.status.winner =\r\n            this.state.gods[this.data.god].player === this.data.opponent\r\n              ? this.data.player\r\n              : this.data.opponent;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //23 - Cheekruption\r\n  processEvent_23(process) {\r\n    if (process === \"handle\") {\r\n      Object.keys(this.state.data.board.tiles)\r\n        .filter(\r\n          (key) =>\r\n            this.state.data.board.tiles[key].occupant.player ===\r\n            this.data.opponent\r\n        )\r\n        .forEach((tile) => {\r\n          const target = this.state.data.board.tiles[tile].occupant;\r\n          if (target.protection) {\r\n            target.protection = false;\r\n          } else {\r\n            target.health -= 2;\r\n          }\r\n          this.state.data.board.tiles[tile].occupant =\r\n            target.health > 0 ? target : this.getRemoveOccupant(tile);\r\n          if (target.health <= 0 && target.effects.lastword) {\r\n            this.processLastwordEffect(target, tile);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  //34 - Cheekshield Spirit\r\n  processEvent_34(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health += 4;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack += 2;\r\n    }\r\n  }\r\n\r\n  //35 - Cheek Dancers\r\n  processEvent_35(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health += 4;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.taunt = true;\r\n    }\r\n  }\r\n\r\n  //46 - Cheek Glider\r\n  processEvent_46(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      const flying =\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.movement.special\r\n          .flying;\r\n\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.movement.range =\r\n        Math.max(\r\n          this.state.data.board.tiles[this.data.tile_id].occupant.movement\r\n            .range,\r\n          2\r\n        );\r\n      this.state.data.board.tiles[\r\n        this.data.tile_id\r\n      ].occupant.movement.special.flying = true;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack += 1;\r\n\r\n      //Balloon Cheek\r\n      if (!flying)\r\n        this.processSpecialEffect(43, {\r\n          action: \"gain\",\r\n          tile: this.data.tile_id,\r\n          attack: 1,\r\n        });\r\n      //Balloon Cheek\r\n    }\r\n  }\r\n\r\n  //48 - Cheek Wind\r\n  processEvent_48(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(false, false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.setSelectStateForMovementTiles();\r\n      this.state.currentAction = \"event_move_occupant\";\r\n    }\r\n  }\r\n\r\n  //49 - Canopic Cheekjar\r\n  processEvent_49(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      const target = JSON.parse(JSON.stringify(this.state)).cardLibrary[\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.id\r\n      ];\r\n      target.land_cost.wild = Object.values(target.land_cost).reduce(\r\n        (sum, current) => sum + current\r\n      );\r\n      Object.keys(target.land_cost).forEach((land) => {\r\n        if (land !== \"wild\") {\r\n          target.land_cost[land] = 0;\r\n        }\r\n      });\r\n      this.state.data.board.tiles[this.data.tile_id].occupant =\r\n        this.getRemoveOccupant(this.data.tile_id);\r\n      if (target.effects.lastword) {\r\n        this.processLastwordEffect(target, this.data.tile_id);\r\n      }\r\n      const card_id =\r\n        parseInt(\r\n          Object.keys(this.state.data[this.data.player].cards)[\r\n            Object.keys(this.state.data[this.data.player].cards).length - 1\r\n          ]\r\n        ) + 1;\r\n      this.state.data[this.data.player].cards[card_id] = target;\r\n      if (this.state.data[this.data.player].hand.length < 10) {\r\n        this.state.data[this.data.player].hand.push(card_id);\r\n      }\r\n    }\r\n  }\r\n\r\n  //51 - Book of Cheek\r\n  processEvent_51(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 3; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex((card) => card),\r\n          10,\r\n          true\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //52 - Milk of the Cheek\r\n  processEvent_52(process) {\r\n    if (process === \"handle\") {\r\n      this.state.data.board.gods[this.getGodTile()].health = Math.min(\r\n        20,\r\n        this.state.data.board.gods[this.getGodTile()].health + 5\r\n      );\r\n    }\r\n  }\r\n\r\n  //Creatures - Summon Effects\r\n\r\n  //8 - Cheek lord\r\n  processSummonEffect_8() {\r\n    const anyAdjacentOccupant = (tile) =>\r\n      this.state.data.board.tiles[tile].occupant.player === this.data.player &&\r\n      this.state.data.board.tiles[tile].occupant.land_cost.lake > 0;\r\n    if (\r\n      this.state.tiles[this.data.tile_id].adjacent.some(anyAdjacentOccupant)\r\n    ) {\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack++;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health++;\r\n    }\r\n  }\r\n\r\n  //14 - Cheekcano\r\n  processSummonEffect_14() {\r\n    Object.keys(this.state.data.board.tiles)\r\n      .filter(\r\n        (key) =>\r\n          this.state.data.board.tiles[key].occupant.player ===\r\n          this.data.opponent\r\n      )\r\n      .forEach((tile) => {\r\n        const target = this.state.data.board.tiles[tile].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 1;\r\n        }\r\n        this.state.data.board.tiles[tile].occupant =\r\n          target.health > 0 ? target : this.getRemoveOccupant(tile);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, tile);\r\n        }\r\n      });\r\n  }\r\n\r\n  //25 - Cheekflower\r\n  processSummonEffect_25() {\r\n    this.state.data[this.data.player].faeria += 2;\r\n  }\r\n\r\n  //27 - Mushroom Cheek\r\n  processSummonEffect_27() {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (tile) =>\r\n        !this.state.data.board.tiles[tile].occupant.player &&\r\n        this.state.tiles[this.data.tile_id].adjacent.includes(tile) &&\r\n        this.state.data.board.tiles[tile].type !== \"none\"\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles.splice(0, 1)].occupant =\r\n        this.getOccupantByID(28);\r\n    }\r\n  }\r\n\r\n  //30 - Cheekworld Tree\r\n  processSummonEffect_30() {\r\n    Object.keys(this.state.data.board.tiles)\r\n      .filter(\r\n        (key) =>\r\n          this.state.data.board.tiles[key].occupant.player ===\r\n            this.data.player &&\r\n          this.state.data.board.tiles[key].occupant.land_cost.forest > 0 &&\r\n          key !== this.data.tile_id\r\n      )\r\n      .forEach((tile) => {\r\n        this.state.data.board.tiles[tile].occupant.health += 9;\r\n      });\r\n  }\r\n\r\n  //36 - Cheeksphynx\r\n  processSummonEffect_36() {\r\n    this.state.currentAction = \"event_choose_occupant\";\r\n    this.state.chooseParams = {\r\n      cards: [37, 38, 39],\r\n      tile: this.data.tile_id,\r\n    };\r\n    this.setSelectStateForOccupants(false, false);\r\n    this.setSelectStateForAllTiles(false);\r\n    this.setSelectStateForGods(false);\r\n    this.setSelectStateForHand(false);\r\n    this.setSelectStateForWheel(false);\r\n  }\r\n\r\n  //37 - Cheeksphynx A\r\n  processSummonEffect_37() {\r\n    for (let i = 0; i < 3; i++) {\r\n      this.handleCustomDrawLogic(\r\n        this.state.data[this.data.player].deck.findIndex((card) => card),\r\n        9,\r\n        true\r\n      );\r\n    }\r\n    this.state.currentAction = \"\";\r\n  }\r\n\r\n  //38 - Cheeksphynx B\r\n  processSummonEffect_38() {\r\n    this.state.data[this.data.player].faeria += 3;\r\n    this.state.currentAction = \"\";\r\n  }\r\n\r\n  //Creatures - Lastword Effects\r\n\r\n  //3 - Clamcheek\r\n  processLastwordEffect_3(occupant, tile) {\r\n    this.state.data.board.tiles[tile].occupant = this.getOccupantByID(12, {\r\n      player: occupant.player,\r\n    });\r\n  }\r\n\r\n  //24 - Suncheek\r\n  processLastwordEffect_24(occupant, tile) {\r\n    this.state.tiles[tile].adjacent.forEach((adjTile) => {\r\n      if (\r\n        this.state.data.board.tiles[adjTile].occupant.player !==\r\n          occupant.player &&\r\n        this.state.data.board.tiles[adjTile].occupant.player\r\n      ) {\r\n        const target = this.state.data.board.tiles[adjTile].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 5;\r\n        }\r\n        this.state.data.board.tiles[adjTile].occupant =\r\n          target.health > 0 ? target : this.getRemoveOccupant(adjTile);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, adjTile);\r\n        }\r\n      }\r\n    });\r\n    Object.keys(this.state.gods).forEach((god) => {\r\n      if (\r\n        this.state.gods[god].adjacent.includes(tile) &&\r\n        occupant.player !== this.state.gods[god].player\r\n      ) {\r\n        this.state.data.board.gods[god].health -= 5;\r\n        if (this.state.data.board.gods[god].health <= 0) {\r\n          this.state.data.status.finished = true;\r\n          this.state.data.status.winner = occupant.player;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  //41 - Cheeksquito\r\n  processLastwordEffect_41(occupant, tile) {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (randomTile) => !this.state.data.board.tiles[randomTile].occupant.player\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles[0]].occupant =\r\n        this.getOccupantByID(41, {\r\n          player: occupant.player,\r\n        });\r\n\r\n      //Balloon Cheek\r\n      this.processSpecialEffect(43, {\r\n        action: \"gain\",\r\n        tile: availableTiles[0],\r\n        attack: 1,\r\n      });\r\n      //Balloon Cheek\r\n    }\r\n  }\r\n\r\n  //44 - Dragon Cheekrider\r\n  processLastwordEffect_44(occupant, tile) {\r\n    this.state.data.board.tiles[tile].occupant = this.getOccupantByID(45, {\r\n      player: occupant.player,\r\n    });\r\n\r\n    //Balloon Cheek\r\n    this.processSpecialEffect(43, {\r\n      action: \"gain\",\r\n      tile: tile,\r\n      attack: 1,\r\n    });\r\n    //Balloon Cheek\r\n  }\r\n\r\n  //Creatures - Gift Effects\r\n\r\n  //1 - Mercheek\r\n  processGiftEffect_1(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForConditionalOccupants(false, true, 2);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.player =\r\n          this.data.player;\r\n        this.state.data.board.tiles[\r\n          this.data.tile_id\r\n        ].occupant.canCollect = false;\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.hasMoved = true;\r\n        this.state.data.board.tiles[\r\n          this.data.tile_id\r\n        ].occupant.hasAttacked = true;\r\n      }\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n    }\r\n  }\r\n\r\n  //16 - Cheekflame\r\n  processGiftEffect_16(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 1;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0\r\n            ? target\r\n            : this.getRemoveOccupant(this.data.tile_id);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n    }\r\n  }\r\n\r\n  //22 - Ghostcheek Alchemist\r\n  processGiftEffect_22(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          this.getOccupantByID(21, {\r\n            player: this.data.opponent,\r\n          });\r\n      }\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n    }\r\n  }\r\n\r\n  //26 - Cavecheek dweller\r\n  processGiftEffect_26(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 2;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0\r\n            ? target\r\n            : this.getRemoveOccupant(this.data.tile_id);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n    }\r\n  }\r\n\r\n  //31 - Cheek Shaman\r\n  processGiftEffect_31(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health += 4;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack += 2;\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n    }\r\n  }\r\n\r\n  //39 - Cheeksphynx C\r\n  processGiftEffect_39(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.setSelectStateForGods(true);\r\n      this.setSelectStateForHand(false);\r\n      this.setSelectStateForWheel(false);\r\n      this.state.tiles[this.data.tile].occupantSelected = true;\r\n      this.state.tiles[this.data.tile].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupantsDivine(true, false);\r\n      this.setSelectStateForGods(false);\r\n      if (this.data.event === \"occupant\") {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 3;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0\r\n            ? target\r\n            : this.getRemoveOccupant(this.data.tile_id);\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      if (this.data.event === \"god\") {\r\n        this.state.data.board.gods[this.data.god].health -= 3;\r\n        if (this.state.data.board.gods[this.data.god].health <= 0) {\r\n          this.state.data.status.finished = true;\r\n          this.state.data.status.winner =\r\n            this.state.gods[this.data.god].player === this.data.opponent\r\n              ? this.data.player\r\n              : this.data.opponent;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //Creatures - Production Effects\r\n\r\n  //19 - Baby Cheekdevil\r\n  processProductionEffect_19(tile) {\r\n    this.state.data.board.tiles[tile].occupant.attack += 1;\r\n    this.state.data.board.tiles[tile].occupant.health += 1;\r\n  }\r\n\r\n  //20 - Ghostcheek Tower\r\n  processProductionEffect_20(tile) {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (tile) => !this.state.data.board.tiles[tile].occupant.player\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles[0]].occupant =\r\n        this.getOccupantByID(21, {\r\n          player: this.state.data.board.tiles[tile].occupant.player,\r\n        });\r\n\r\n      //Balloon Cheek\r\n      this.processSpecialEffect(43, {\r\n        action: \"gain\",\r\n        tile: availableTiles[0],\r\n        attack: 1,\r\n      });\r\n      //Balloon Cheek\r\n    }\r\n  }\r\n\r\n  //40 - Mummy Cheek\r\n  processProductionEffect_40(tile) {\r\n    this.state.data.board.tiles[tile].occupant.attack =\r\n      this.state.data.board.tiles[tile].occupant.base_attack;\r\n    this.state.data.board.tiles[tile].occupant.health =\r\n      this.state.data.board.tiles[tile].occupant.base_health;\r\n  }\r\n\r\n  //47 - Cheek Pyramid\r\n  processProductionEffect_47(tile) {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (randomTile) =>\r\n        !this.state.data.board.tiles[randomTile].occupant.player &&\r\n        this.state.tiles[tile].adjacent.includes(randomTile) &&\r\n        this.state.data.board.tiles[randomTile].type !== \"none\"\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles.splice(0, 1)].occupant =\r\n        this.getOccupantByID(40, {\r\n          player: this.state.data.board.tiles[tile].occupant.player,\r\n        });\r\n    }\r\n  }\r\n\r\n  //Creatures - Special Effects\r\n\r\n  //37 - Cheeksphynx A\r\n  processSpecialEffect_37(params) {\r\n    const occupant = JSON.parse(\r\n      JSON.stringify(this.state.data.board.tiles[params.tile].occupant)\r\n    );\r\n    occupant.id = this.data.id;\r\n    this.processSummonEffect(occupant);\r\n  }\r\n\r\n  //38 - Cheeksphynx B\r\n  processSpecialEffect_38(params) {\r\n    const occupant = JSON.parse(\r\n      JSON.stringify(this.state.data.board.tiles[params.tile].occupant)\r\n    );\r\n    occupant.id = this.data.id;\r\n    this.processSummonEffect(occupant);\r\n  }\r\n\r\n  //39 - Cheeksphynx C\r\n  processSpecialEffect_39(params) {\r\n    const occupant = JSON.parse(\r\n      JSON.stringify(this.state.data.board.tiles[params.tile].occupant)\r\n    );\r\n    occupant.id = this.data.id;\r\n    this.initGiftEffect(occupant);\r\n  }\r\n\r\n  //43 - Balloon Cheek\r\n  processSpecialEffect_43(params) {\r\n    if (params.action === \"summon\") {\r\n      if (this.state.data.board.tiles[params.tile].occupant.id === 43) {\r\n        Object.keys(this.state.data.board.tiles).forEach((tile) => {\r\n          if (\r\n            this.state.data.board.tiles[tile].occupant.movement.special\r\n              .flying &&\r\n            tile !== params.tile\r\n          ) {\r\n            this.state.data.board.tiles[params.tile].occupant.attack +=\r\n              params.attack;\r\n          }\r\n        });\r\n      }\r\n      if (\r\n        this.state.data.board.tiles[params.tile].occupant.movement.special\r\n          .flying\r\n      ) {\r\n        Object.keys(this.state.data.board.tiles).forEach((tile) => {\r\n          if (\r\n            this.state.data.board.tiles[tile].occupant.id === 43 &&\r\n            tile !== params.tile\r\n          ) {\r\n            this.state.data.board.tiles[tile].occupant.attack += params.attack;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    if (params.action === \"remove\" || params.action === \"gain\") {\r\n      if (\r\n        this.state.data.board.tiles[params.tile].occupant.movement.special\r\n          .flying\r\n      ) {\r\n        Object.keys(this.state.data.board.tiles).forEach((tile) => {\r\n          if (this.state.data.board.tiles[tile].occupant.id === 43) {\r\n            this.state.data.board.tiles[tile].occupant.attack += params.attack;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { initStore } from \"./store\";\r\nimport EventProcessor from \"./event-processor\";\r\nimport axios from \"axios\";\r\n\r\nconst configureStore = (loadStore) => {\r\n  const actions = {\r\n    SET_DATA: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState = data;\r\n      return updatedState;\r\n    },\r\n    SHUFFLE_DECK: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const shuffledDeck = [];\r\n      for (let i = 0; i < currentState.data[data.player].deck.length; i++) {\r\n        let random = Math.floor(\r\n          Math.random() * updatedState.data[data.player].deck.length\r\n        );\r\n        shuffledDeck.push(updatedState.data[data.player].deck[random]);\r\n        updatedState.data[data.player].deck.splice(random, 1);\r\n      }\r\n      updatedState.data[data.player].deck = shuffledDeck;\r\n      updatedState.data[data.player].shuffle = true;\r\n      const newState = JSON.parse(JSON.stringify(updatedState));\r\n      const getdata = new FormData();\r\n      getdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/getState.php\", getdata)\r\n        .then((res) => {\r\n          const prevState = JSON.parse(res.data);\r\n          newState.data[data.opponent] = prevState.data[data.opponent];\r\n          const postdata = new FormData();\r\n          postdata.append(\"react_state\", JSON.stringify(newState));\r\n          postdata.append(\"id\", data.id);\r\n          axios\r\n            .post(\"/faeria/Faeria/utils/saveState.php\", postdata)\r\n            .catch((error) => {\r\n              console.log(\"Network Error\", error.message);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    CONFIRM_MULLIGAN: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState = data;\r\n      return updatedState;\r\n    },\r\n    START_GAME: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n\r\n      updatedState.data.status.turn = 1;\r\n      updatedState.data[data.player].wheel_used = false;\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_LAND: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newWheelState = updatedState.wheelbuttons;\r\n      newWheelState[data.wheelbutton_id].selected =\r\n        !newWheelState[data.wheelbutton_id].selected;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(newWheelState).forEach((key) => {\r\n          if (key !== data.wheelbutton_id) {\r\n            newWheelState[key].selectable = !newWheelState[key].selectable;\r\n          }\r\n        });\r\n      }\r\n      if (newWheelState[data.wheelbutton_id].selected) {\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].occupantSelectable = false;\r\n        });\r\n      } else {\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = true;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n      }\r\n      updatedState.wheelbuttons = newWheelState;\r\n      const newTileState = updatedState.tiles;\r\n      const anyAdjacent = (tile) =>\r\n        updatedState.data.board.tiles[tile].owner === data.player;\r\n      const anyAdjacentFromOccupant = (tile) =>\r\n        updatedState.data.board.tiles[tile].occupant.player === data.player &&\r\n        updatedState.data.board.tiles[tile].type !== \"none\";\r\n      const god_key = Object.keys(updatedState.gods).filter(\r\n        (god) => updatedState.gods[god].player === data.player\r\n      );\r\n      if (updatedState.wheelbuttons[data.wheelbutton_id].selected) {\r\n        Object.keys(newTileState).forEach((key) => {\r\n          let tileType = updatedState.data.board.tiles[key].type;\r\n          let tileOwner = updatedState.data.board.tiles[key].owner;\r\n          if (\r\n            tileType === \"none\" ||\r\n            (tileType === \"prairie\" && tileOwner === data.player)\r\n          ) {\r\n            if (\r\n              newTileState[key].adjacent.some(anyAdjacent) ||\r\n              newTileState[key].adjacent.some(anyAdjacentFromOccupant) ||\r\n              updatedState.gods[god_key].adjacent.includes(key)\r\n            ) {\r\n              if (\r\n                !updatedState.data.board.tiles[key].occupant.movement.special\r\n                  .aquatic\r\n              ) {\r\n                newTileState[key].selectable = true;\r\n              } else if (\r\n                updatedState.wheelbuttons[data.wheelbutton_id].action === \"lake\"\r\n              ) {\r\n                newTileState[key].selectable = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        Object.keys(newTileState).forEach((key) => {\r\n          newTileState[key].selectable = false;\r\n        });\r\n      }\r\n      updatedState.tiles = newTileState;\r\n      return updatedState;\r\n    },\r\n    DRAW_CARD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const god = {\r\n        player1: \"D6\",\r\n        player2: \"D0\",\r\n      };\r\n      if (updatedState.data[data.player].deck.length > 0) {\r\n        if (updatedState.data[data.player].hand.length < 9) {\r\n          updatedState.data[data.player].hand.push(\r\n            updatedState.data[data.player].deck.splice(0, 1)[0]\r\n          );\r\n        } else {\r\n          updatedState.data[data.player].deck.splice(0, 1);\r\n        }\r\n      } else {\r\n        updatedState.data.board.gods[god[data.player]].health -= ++updatedState\r\n          .data[data.player].health_dmg;\r\n        if (updatedState.data.board.gods[god[data.player]].health <= 0) {\r\n          updatedState.data.status.finished = true;\r\n          updatedState.data.status.winner = data.opponent;\r\n        }\r\n      }\r\n      updatedState.data[data.player].wheel_used = true;\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PLUS_FAERIA: (currentState, player) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data[player].faeria++;\r\n      updatedState.data[player].wheel_used = true;\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    BUILD_TILE: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      let type = \"none\";\r\n      Object.values(updatedState.wheelbuttons).forEach((wheelbutton) => {\r\n        if (wheelbutton.selected) {\r\n          type = wheelbutton.action;\r\n        }\r\n      });\r\n      updatedState.data.board.tiles[data.tile_id].type = type;\r\n\r\n      // Cheekbloom\r\n      if (type === \"forest\") {\r\n        Object.keys(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (updatedState.data.board.tiles[tile].occupant.id === 33) {\r\n            updatedState.data.board.tiles[tile].occupant.health += 1;\r\n            updatedState.data.board.tiles[tile].occupant.attack += 1;\r\n          }\r\n        });\r\n      }\r\n      // Cheekbloom\r\n\r\n      updatedState.data.board.tiles[data.tile_id].owner = data.player;\r\n      const wheelbutton_id = Object.keys(updatedState.wheelbuttons).filter(\r\n        (key) => updatedState.wheelbuttons[key].selected\r\n      );\r\n      updatedState.wheelbuttons[wheelbutton_id].selected = false;\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      if (type === \"prairie\") {\r\n        updatedState.data[data.player].wheel_neutral_counter += 1;\r\n      }\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n        updatedState.data[data.player].wheel_used = true;\r\n        updatedState.data[data.player].wheel_neutral_counter = 0;\r\n      }\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_CARD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newHand = updatedState.hand;\r\n      newHand[data.hand_id].selected = !newHand[data.hand_id].selected;\r\n      Object.keys(newHand).forEach((key) => {\r\n        if (parseInt(key) !== data.hand_id) {\r\n          newHand[key].selectable = !newHand[key].selectable;\r\n        }\r\n      });\r\n      updatedState.hand = newHand;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          if (newHand[data.hand_id].selected) {\r\n            updatedState.wheelbuttons[key].selectable = false;\r\n          } else {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          }\r\n        });\r\n      } else {\r\n        if (newHand[data.hand_id].selected) {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n      }\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        if (newHand[data.hand_id].selected) {\r\n          updatedState.tiles[key].occupantSelectable = false;\r\n        } else {\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        }\r\n      });\r\n      const getLands = () => {\r\n        let lands = { forest: 0, lake: 0, mountain: 0, desert: 0 };\r\n        Object.values(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (tile.owner === data.player && tile.type !== \"prairie\") {\r\n            lands[tile.type] += 1;\r\n          }\r\n        });\r\n        return lands;\r\n      };\r\n      const lands = getLands();\r\n      const getLandTypes = () => {\r\n        return Object.keys(\r\n          updatedState.data[data.player].cards[data.card_id].land_cost\r\n        ).filter(\r\n          (key) =>\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n              0 && key !== \"wild\"\r\n        );\r\n      };\r\n      const landtypes = getLandTypes();\r\n      const requirementsMet = (tile) => {\r\n        const canSpawnAdjacentToFriendliesArray = {\r\n          8: \"lake\", //Cheek lord\r\n        };\r\n        const canSpawnAdjacentToFriendlies = (adjTile) => {\r\n          return (\r\n            updatedState.data.board.tiles[adjTile].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[adjTile].occupant.land_cost[\r\n              canSpawnAdjacentToFriendliesArray[\r\n                updatedState.data[data.player].cards[data.card_id].id\r\n              ]\r\n            ] > 0\r\n          );\r\n        };\r\n        if (\r\n          Object.keys(canSpawnAdjacentToFriendliesArray).includes(\r\n            String(updatedState.data[data.player].cards[data.card_id].id)\r\n          )\r\n        ) {\r\n          if (\r\n            !updatedState.tiles[tile].adjacent.some(\r\n              canSpawnAdjacentToFriendlies\r\n            ) &&\r\n            ((!landtypes.includes(updatedState.data.board.tiles[tile].type) &&\r\n              landtypes.length) ||\r\n              updatedState.data.board.tiles[tile].owner !== data.player)\r\n          ) {\r\n            console.log(\"wtf\");\r\n            return false;\r\n          }\r\n          if (\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .aquatic &&\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .flying\r\n          ) {\r\n            if (updatedState.data.board.tiles[tile].type === \"none\") {\r\n              return false;\r\n            }\r\n          }\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .aquatic &&\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .flying\r\n          ) {\r\n            if (\r\n              updatedState.data.board.tiles[tile].type !== \"none\" &&\r\n              updatedState.data.board.tiles[tile].type !== \"lake\"\r\n            ) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          if (updatedState.data.board.tiles[tile].owner !== data.player) {\r\n            return false;\r\n          }\r\n          if (\r\n            !landtypes.includes(updatedState.data.board.tiles[tile].type) &&\r\n            landtypes.length\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        if (updatedState.data.board.tiles[tile].occupant.player) {\r\n          return false;\r\n        }\r\n        let valid = true;\r\n        Object.keys(\r\n          updatedState.data[data.player].cards[data.card_id].land_cost\r\n        ).forEach((key) => {\r\n          if (key !== \"wild\") {\r\n            if (\r\n              updatedState.data[data.player].cards[data.card_id].land_cost[\r\n                key\r\n              ] > lands[key]\r\n            ) {\r\n              valid = false;\r\n            }\r\n          } else {\r\n            if (\r\n              updatedState.data[data.player].cards[data.card_id].land_cost[\r\n                key\r\n              ] >\r\n              Object.values(lands).reduce(\r\n                (sum, currentValue) => sum + currentValue\r\n              )\r\n            ) {\r\n              valid = false;\r\n            }\r\n          }\r\n        });\r\n        return valid;\r\n      };\r\n      if (newHand[data.hand_id].selected) {\r\n        updatedState.currentAction = \"summon_creature\";\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          if (requirementsMet(key)) {\r\n            updatedState.tiles[key].selectable = true;\r\n          }\r\n        });\r\n      } else {\r\n        updatedState.currentAction = \"\";\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n        });\r\n      }\r\n      return updatedState;\r\n    },\r\n    SELECT_EVENT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const getLands = () => {\r\n        let lands = { forest: 0, lake: 0, mountain: 0, desert: 0 };\r\n        Object.values(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (tile.owner === data.player && tile.type !== \"prairie\") {\r\n            lands[tile.type] += 1;\r\n          }\r\n        });\r\n        return lands;\r\n      };\r\n      const lands = getLands();\r\n      let runLogic = true;\r\n      Object.keys(\r\n        updatedState.data[data.player].cards[data.card_id].land_cost\r\n      ).forEach((key) => {\r\n        if (key !== \"wild\") {\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n            lands[key]\r\n          ) {\r\n            runLogic = false;\r\n          }\r\n        } else {\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n            Object.values(lands).reduce(\r\n              (sum, currentValue) => sum + currentValue\r\n            )\r\n          ) {\r\n            runLogic = false;\r\n          }\r\n        }\r\n      });\r\n      if (runLogic) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        if (updatedState.data[data.player].cards[data.card_id].effects.target) {\r\n          updatedState = EP.initEventLogic();\r\n        } else {\r\n          updatedState.hand[data.hand_id].selected =\r\n            !updatedState.hand[data.hand_id].selected;\r\n          updatedState = EP.handleEventLogic();\r\n          const formdata = new FormData();\r\n          formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n          formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n          axios\r\n            .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n            .catch((error) => {\r\n              console.log(\"Network Error\", error.message);\r\n            });\r\n        }\r\n      }\r\n      return updatedState;\r\n    },\r\n    PROCESS_EVENT_OCCUPANT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.handleEventLogic();\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PROCESS_EVENT_TILE: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.handleEventLogic();\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PROCESS_GIFT_OCCUPANT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.processGiftEffect(selected_occupant_id);\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    CHOOSE_CARD: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      EP.processSpecialEffect(data.id, { tile: data.tile });\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n\r\n      return updatedState;\r\n    },\r\n    SUMMON_CREATURE: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newOccupant = updatedState.data.board.tiles[data.tile_id].occupant;\r\n      newOccupant.player = data.player;\r\n      const selected_card_id = parseInt(\r\n        Object.keys(updatedState.hand).filter(\r\n          (key) => updatedState.hand[key].selected\r\n        )[0]\r\n      );\r\n      const card =\r\n        updatedState.data[data.player].cards[\r\n          updatedState.data[data.player].hand[selected_card_id - 1]\r\n        ];\r\n      newOccupant.id = card.id;\r\n      newOccupant.type = card.type;\r\n      newOccupant.faeria_cost = card.faeria_cost;\r\n      newOccupant.land_cost = card.land_cost;\r\n      newOccupant.attack = card.attack;\r\n      newOccupant.base_attack = card.base_attack;\r\n      newOccupant.health = card.health;\r\n      newOccupant.base_health = card.base_health;\r\n      newOccupant.movement = card.movement;\r\n      newOccupant.taunt = card.taunt;\r\n      newOccupant.divine = card.divine;\r\n      newOccupant.protection = card.protection;\r\n      newOccupant.ranged = card.ranged;\r\n      newOccupant.hasDashed = false;\r\n      newOccupant.effects = card.effects;\r\n      if (!card.movement.haste) {\r\n        newOccupant.hasMoved = true;\r\n        newOccupant.hasAttacked = true;\r\n        newOccupant.canCollect = false;\r\n      } else {\r\n        newOccupant.canCollect = true;\r\n        newOccupant.hasMoved = false;\r\n        newOccupant.hasAttacked = false;\r\n        if (card.movement.dash === 0) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      updatedState.data.board.tiles[data.tile_id].occupant = newOccupant;\r\n      const newHand = updatedState.hand;\r\n      newHand[selected_card_id].selected = !newHand[selected_card_id].selected;\r\n      if (newOccupant.effects.summon) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        EP.processSummonEffect(\r\n          updatedState.data.board.tiles[data.tile_id].occupant\r\n        );\r\n      }\r\n      if (newOccupant.effects.gift) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        newHand[selected_card_id].selectable = false;\r\n        EP.initGiftEffect(updatedState.data.board.tiles[data.tile_id].occupant);\r\n      } else if (\r\n        updatedState.currentAction !== \"event_choose_occupant\" &&\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash === 0\r\n      ) {\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n        Object.keys(newHand).forEach((key) => {\r\n          newHand[key].selectable = true;\r\n        });\r\n        if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n          Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          });\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n        updatedState.currentAction = \"\";\r\n      }\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash > 0\r\n      ) {\r\n        updatedState.tiles[data.tile_id].occupantSelectable = true;\r\n      }\r\n      updatedState.hand = newHand;\r\n      updatedState.data[data.player].faeria -=\r\n        updatedState.data[data.player].cards[\r\n          updatedState.data[data.player].hand[selected_card_id - 1]\r\n        ].faeria_cost;\r\n      updatedState.data[data.player].hand.splice(selected_card_id - 1, 1);\r\n\r\n      //Balloon Cheek\r\n      const EP = new EventProcessor(updatedState, data);\r\n      EP.processSpecialEffect(43, {\r\n        action: \"summon\",\r\n        tile: data.tile_id,\r\n        attack: 1,\r\n      });\r\n      //Balloon Cheek\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.tiles[data.tile_id].occupantSelected =\r\n        !updatedState.tiles[data.tile_id].occupantSelected;\r\n      const anyTaunt = (taunt_tile) =>\r\n        updatedState.data.board.tiles[taunt_tile].occupant.taunt &&\r\n        updatedState.data.board.tiles[taunt_tile].occupant.player ===\r\n          data.opponent;\r\n      const isTaunted =\r\n        updatedState.tiles[data.tile_id].adjacent.some(anyTaunt);\r\n      const jumpTiles = [];\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n          .jump\r\n      ) {\r\n        updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n          if (!jumpTiles.includes(tile) && tile !== data.tile_id) {\r\n            jumpTiles.push(tile);\r\n          }\r\n          updatedState.tiles[tile].adjacent.forEach((adjacent_tile) => {\r\n            if (\r\n              !jumpTiles.includes(adjacent_tile) &&\r\n              adjacent_tile !== data.tile_id\r\n            ) {\r\n              jumpTiles.push(adjacent_tile);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      const movementRange =\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n          0 && !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n          ? updatedState.data.board.tiles[data.tile_id].occupant.movement.dash\r\n          : updatedState.data.board.tiles[data.tile_id].occupant.movement.range;\r\n      const rangeTiles = [];\r\n      const rangeTilesHelper = {};\r\n      for (let i = 1; i <= movementRange; i++) {\r\n        if (i === 1) {\r\n          rangeTilesHelper[i] = {};\r\n          updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n            let valid = true;\r\n            if (\r\n              updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.aquatic &&\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.flying\r\n            ) {\r\n              if (\r\n                updatedState.data.board.tiles[tile].type !== \"lake\" &&\r\n                updatedState.data.board.tiles[tile].type !== \"none\"\r\n              ) {\r\n                valid = false;\r\n              }\r\n            }\r\n            if (\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.aquatic &&\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.flying\r\n            ) {\r\n              if (updatedState.data.board.tiles[tile].type === \"none\") {\r\n                valid = false;\r\n              }\r\n            }\r\n            if (valid && !updatedState.data.board.tiles[tile].occupant.player) {\r\n              rangeTiles.push(tile);\r\n              rangeTilesHelper[i][tile] = {\r\n                prevTile: data.tile_id,\r\n                currentTile: tile,\r\n              };\r\n            }\r\n          });\r\n        } else {\r\n          rangeTilesHelper[i] = {};\r\n          Object.values(rangeTilesHelper[i - 1]).forEach((rangetile) => {\r\n            updatedState.tiles[rangetile.currentTile].adjacent\r\n              .filter(\r\n                (rangetile_key) =>\r\n                  !updatedState.tiles[rangetile.prevTile].adjacent.includes(\r\n                    rangetile_key\r\n                  ) && rangetile_key !== rangetile.prevTile\r\n              )\r\n              .forEach((rangetile_adj) => {\r\n                let valid = true;\r\n                updatedState.tiles[rangetile_adj].adjacent\r\n                  .filter(\r\n                    (rangetile_adj_key) =>\r\n                      rangetile_adj_key !== rangetile.currentTile\r\n                  )\r\n                  .forEach((rangetile_adj_adj) => {\r\n                    if (\r\n                      updatedState.tiles[rangetile_adj_adj].adjacent.includes(\r\n                        rangetile.prevTile\r\n                      )\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  });\r\n                if (updatedState.tiles[rangetile_adj].adjacentNonTile) {\r\n                  if (\r\n                    updatedState.tiles[rangetile_adj].adjacentNonTile.includes(\r\n                      \"D\"\r\n                    )\r\n                  ) {\r\n                    if (\r\n                      updatedState.gods[\r\n                        updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                      ].adjacent.includes(rangetile.prevTile)\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  } else {\r\n                    if (\r\n                      updatedState.data.board.wells[\r\n                        updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                      ].adjacent.includes(rangetile.prevTile)\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  }\r\n                }\r\n                if (\r\n                  updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.aquatic &&\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.flying\r\n                ) {\r\n                  if (\r\n                    updatedState.data.board.tiles[rangetile_adj].type !==\r\n                      \"lake\" &&\r\n                    updatedState.data.board.tiles[rangetile_adj].type !== \"none\"\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n                if (\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.aquatic &&\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.flying\r\n                ) {\r\n                  if (\r\n                    updatedState.data.board.tiles[rangetile_adj].type === \"none\"\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n                if (\r\n                  valid &&\r\n                  !rangeTiles.includes(rangetile_adj) &&\r\n                  !updatedState.data.board.tiles[rangetile_adj].occupant.player\r\n                ) {\r\n                  rangeTiles.push(rangetile_adj);\r\n                  rangeTilesHelper[i][rangetile_adj] = {\r\n                    prevTile: rangetile.currentTile,\r\n                    currentTile: rangetile_adj,\r\n                  };\r\n                }\r\n              });\r\n          });\r\n        }\r\n      }\r\n      const rangeAttack = [];\r\n      const rangeAttackHelper = {};\r\n      if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n        for (let i = 1; i <= 5; i++) {\r\n          if (i === 1) {\r\n            rangeAttackHelper[i] = {};\r\n            updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n              if (!updatedState.data.board.tiles[tile].occupant.player) {\r\n                rangeAttack.push(tile);\r\n                rangeAttackHelper[i][tile] = {\r\n                  prevTile: data.tile_id,\r\n                  currentTile: tile,\r\n                };\r\n              }\r\n            });\r\n          } else {\r\n            rangeAttackHelper[i] = {};\r\n            Object.values(rangeAttackHelper[i - 1]).forEach((rangetile) => {\r\n              updatedState.tiles[rangetile.currentTile].adjacent\r\n                .filter(\r\n                  (rangetile_key) =>\r\n                    !updatedState.tiles[rangetile.prevTile].adjacent.includes(\r\n                      rangetile_key\r\n                    ) && rangetile_key !== rangetile.prevTile\r\n                )\r\n                .forEach((rangetile_adj) => {\r\n                  let valid = true;\r\n                  updatedState.tiles[rangetile_adj].adjacent\r\n                    .filter(\r\n                      (rangetile_adj_key) =>\r\n                        rangetile_adj_key !== rangetile.currentTile\r\n                    )\r\n                    .forEach((rangetile_adj_adj) => {\r\n                      if (\r\n                        updatedState.tiles[rangetile_adj_adj].adjacent.includes(\r\n                          rangetile.prevTile\r\n                        )\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    });\r\n                  if (updatedState.tiles[rangetile_adj].adjacentNonTile) {\r\n                    if (\r\n                      updatedState.tiles[\r\n                        rangetile_adj\r\n                      ].adjacentNonTile.includes(\"D\")\r\n                    ) {\r\n                      if (\r\n                        updatedState.gods[\r\n                          updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                        ].adjacent.includes(rangetile.prevTile)\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    } else {\r\n                      if (\r\n                        updatedState.data.board.wells[\r\n                          updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                        ].adjacent.includes(rangetile.prevTile)\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    }\r\n                  }\r\n                  if (\r\n                    valid &&\r\n                    !rangeAttack.includes(rangetile_adj) &&\r\n                    !updatedState.data.board.tiles[rangetile.currentTile]\r\n                      .occupant.player\r\n                  ) {\r\n                    rangeAttack.push(rangetile_adj);\r\n                    rangeAttackHelper[i][rangetile_adj] = {\r\n                      prevTile: rangetile.currentTile,\r\n                      currentTile: rangetile_adj,\r\n                    };\r\n                  }\r\n                });\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const moveRequirementsMet = (tile_id) => {\r\n        if (updatedState.data.board.tiles[tile_id].occupant.player) {\r\n          return false;\r\n        }\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n            0 &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n        ) {\r\n          if (!rangeTiles.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (updatedState.data.board.tiles[data.tile_id].occupant.hasMoved) {\r\n            return false;\r\n          }\r\n          if (isTaunted) return false;\r\n          if (\r\n            updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n              .special.jump\r\n          ) {\r\n            if (!jumpTiles.includes(tile_id) && !rangeTiles.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          } else {\r\n            if (!rangeTiles.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        if (\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .aquatic &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .flying\r\n        ) {\r\n          if (updatedState.data.board.tiles[tile_id].type === \"none\") {\r\n            return false;\r\n          }\r\n        }\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .aquatic &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .flying\r\n        ) {\r\n          if (\r\n            updatedState.data.board.tiles[tile_id].type !== \"lake\" &&\r\n            updatedState.data.board.tiles[tile_id].type !== \"none\"\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      };\r\n      const attackRequirementsMet = (tile_id) => {\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n          if (!rangeAttack.includes(tile_id)) {\r\n            if (!updatedState.tiles[data.tile_id].adjacent.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          if (!updatedState.tiles[data.tile_id].adjacent.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        }\r\n        if (\r\n          !updatedState.data.board.tiles[tile_id].occupant.player ||\r\n          updatedState.data.board.tiles[tile_id].occupant.player === data.player\r\n        ) {\r\n          return false;\r\n        }\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.hasAttacked) {\r\n          return false;\r\n        }\r\n        if (isTaunted) {\r\n          if (\r\n            !updatedState.tiles[data.tile_id].adjacent.includes(tile_id) ||\r\n            (updatedState.tiles[data.tile_id].adjacent.includes(tile_id) &&\r\n              !updatedState.data.board.tiles[tile_id].occupant.taunt)\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      };\r\n      if (updatedState.tiles[data.tile_id].occupantSelected) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          if (moveRequirementsMet(key)) {\r\n            updatedState.tiles[key].selectable = true;\r\n          }\r\n          if (attackRequirementsMet(key)) {\r\n            updatedState.tiles[key].occupantSelectable = true;\r\n          } else if (data.tile_id !== key) {\r\n            updatedState.tiles[key].occupantSelectable = false;\r\n          }\r\n        });\r\n        updatedState.currentAction = \"occupant_selected\";\r\n      } else {\r\n        if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n          Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          });\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = true;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasDashed = true;\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.haste\r\n        ) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n        updatedState.currentAction = \"\";\r\n      }\r\n      const god = data.player === \"player1\" ? \"D0\" : \"D6\";\r\n      const rangeAttackArrayHelper =\r\n        data.player === \"player1\"\r\n          ? [\"B1\", \"F1\", \"D2\", \"D3\", \"D4\", \"D5\"]\r\n          : [\"B5\", \"F5\", \"D1\", \"D2\", \"D3\", \"D4\"];\r\n      if (updatedState.tiles[data.tile_id].occupantSelected) {\r\n        if (!updatedState.data.board.tiles[data.tile_id].occupant.hasAttacked) {\r\n          if (\r\n            updatedState.data.board.tiles[data.tile_id].occupant.ranged &&\r\n            !updatedState.gods[god].adjacent.includes(data.tile_id)\r\n          ) {\r\n            const rangeAttackArray = rangeAttack.filter((attacktile) =>\r\n              updatedState.gods[god].adjacent.includes(attacktile)\r\n            );\r\n            if (\r\n              rangeAttackArray.length === 1 &&\r\n              !updatedState.data.board.tiles[rangeAttackArray[0]].occupant\r\n                .player &&\r\n              rangeAttackArrayHelper.includes(data.tile_id)\r\n            ) {\r\n              updatedState.gods[god].selectable = true;\r\n            }\r\n          } else {\r\n            if (updatedState.gods[god].adjacent.includes(data.tile_id)) {\r\n              updatedState.gods[god].selectable = true;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        updatedState.gods[god].selectable = false;\r\n      }\r\n      return updatedState;\r\n    },\r\n    MOVE_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_tile_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      updatedState.data.board.tiles[data.tile_id].occupant =\r\n        updatedState.data.board.tiles[selected_tile_id].occupant;\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        canCollect: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: {\r\n          summon: false,\r\n          gift: false,\r\n          lastword: false,\r\n          production: false,\r\n        },\r\n        effectUsed: false,\r\n      };\r\n      updatedState.data.board.tiles[selected_tile_id].occupant = removeOccupant;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_tile_id].occupantSelected = false;\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n          0 &&\r\n        !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed &&\r\n        updatedState.currentAction !== \"event_move_occupant\"\r\n      ) {\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasDashed = true;\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.haste\r\n        ) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        if (updatedState.currentAction !== \"event_move_occupant\") {\r\n          updatedState.data.board.tiles[data.tile_id].occupant.hasMoved = true;\r\n          if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n            updatedState.data.board.tiles[\r\n              data.tile_id\r\n            ].occupant.hasAttacked = true;\r\n          }\r\n        }\r\n        Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n          if (\r\n            updatedState.data.board.wells[key].adjacent.includes(\r\n              data.tile_id\r\n            ) &&\r\n            updatedState.data.board.wells[key].available &&\r\n            updatedState.data.board.tiles[data.tile_id].occupant.canCollect &&\r\n            updatedState.data.board.tiles[data.tile_id].occupant.player ===\r\n              data.player\r\n          ) {\r\n            updatedState.data.board.wells[key].available = false;\r\n            updatedState.data.board.wells[key].collected = true;\r\n            updatedState.data[data.player].faeria += 1;\r\n          }\r\n        });\r\n      }\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n      updatedState.currentAction = \"\";\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    ATTACK_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const attacker =\r\n        updatedState.data.board.tiles[selected_occupant_id].occupant;\r\n      const defender = updatedState.data.board.tiles[data.tile_id].occupant;\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        canCollect: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: {\r\n          summon: false,\r\n          gift: false,\r\n          lastword: false,\r\n          production: false,\r\n        },\r\n        effectUsed: false,\r\n      };\r\n      if (\r\n        updatedState.tiles[data.tile_id].adjacent.includes(selected_occupant_id)\r\n      ) {\r\n        attacker.health -= defender.attack;\r\n      }\r\n      if (defender.protection) {\r\n        defender.protection = false;\r\n      } else {\r\n        defender.health -= attacker.attack;\r\n      }\r\n      attacker.hasAttacked = true;\r\n      attacker.hasMoved = true;\r\n      attacker.hasDashed = true;\r\n\r\n      const EP = new EventProcessor(updatedState, data);\r\n\r\n      //Balloon Cheek\r\n      if (attacker.health <= 0) {\r\n        EP.processSpecialEffect(43, {\r\n          action: \"remove\",\r\n          tile: selected_occupant_id,\r\n          attack: -1,\r\n        });\r\n      }\r\n      if (defender.health <= 0) {\r\n        EP.processSpecialEffect(43, {\r\n          action: \"remove\",\r\n          tile: data.tile_id,\r\n          attack: -1,\r\n        });\r\n      }\r\n      //Balloon Cheek\r\n\r\n      updatedState.data.board.tiles[selected_occupant_id].occupant =\r\n        attacker.health > 0 ? attacker : removeOccupant;\r\n      updatedState.data.board.tiles[data.tile_id].occupant =\r\n        defender.health > 0 ? defender : removeOccupant;\r\n\r\n      if (attacker.health <= 0 && attacker.effects.lastword) {\r\n        EP.processLastwordEffect(attacker, selected_occupant_id);\r\n      }\r\n      if (defender.health <= 0 && defender.effects.lastword) {\r\n        EP.processLastwordEffect(defender, data.tile_id);\r\n      }\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_occupant_id].occupantSelected = false;\r\n      updatedState.currentAction = \"\";\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    ATTACK_GOD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const attacker =\r\n        updatedState.data.board.tiles[selected_occupant_id].occupant;\r\n      updatedState.data.board.gods[data.god].health -= attacker.attack;\r\n      updatedState.data.board.gods[data.god].wasHit = true;\r\n      attacker.hasAttacked = true;\r\n      attacker.hasMoved = true;\r\n      updatedState.gods[data.god].selectable = false;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_occupant_id].occupantSelected = false;\r\n      updatedState.currentAction = \"\";\r\n      if (updatedState.data.board.gods[data.god].health <= 0) {\r\n        updatedState.data.status.finished = true;\r\n        updatedState.data.status.winner = data.player;\r\n      }\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    END_TURN: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data[data.opponent].wheel_used = false;\r\n      const god = {\r\n        player1: \"D6\",\r\n        player2: \"D0\",\r\n      };\r\n      if (updatedState.data.status.turn > 1) {\r\n        updatedState.data[data.opponent].faeria += 3;\r\n        if (updatedState.data[data.opponent].deck.length > 0) {\r\n          if (updatedState.data[data.opponent].hand.length < 9) {\r\n            updatedState.data[data.opponent].hand.push(\r\n              updatedState.data[data.opponent].deck.splice(0, 1)[0]\r\n            );\r\n          } else {\r\n            updatedState.data[data.opponent].deck.splice(0, 1);\r\n          }\r\n        } else {\r\n          updatedState.data.board.gods[god[data.opponent]].health -=\r\n            ++updatedState.data[data.opponent].health_dmg;\r\n          if (updatedState.data.board.gods[god[data.opponent]].health <= 0) {\r\n            updatedState.data.status.finished = true;\r\n            updatedState.data.status.winner = data.player;\r\n          }\r\n        }\r\n      }\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        canCollect: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: {\r\n          summon: false,\r\n          gift: false,\r\n          lastword: false,\r\n          production: false,\r\n        },\r\n        effectUsed: false,\r\n      };\r\n      Object.keys(updatedState.data.board.tiles).forEach((key) => {\r\n        if (\r\n          (updatedState.data.board.tiles[key].occupant.movement.special\r\n            .aquatic &&\r\n            !updatedState.data.board.tiles[key].occupant.movement.special\r\n              .flying &&\r\n            updatedState.data.board.tiles[key].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[key].type !== \"lake\" &&\r\n            updatedState.data.board.tiles[key].type !== \"none\") ||\r\n          (!updatedState.data.board.tiles[key].occupant.movement.special\r\n            .aquatic &&\r\n            !updatedState.data.board.tiles[key].occupant.movement.special\r\n              .flying &&\r\n            updatedState.data.board.tiles[key].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[key].type === \"none\")\r\n        ) {\r\n          const occupant = updatedState.data.board.tiles[key].occupant;\r\n          updatedState.data.board.tiles[key].occupant = removeOccupant;\r\n          const EP = new EventProcessor(updatedState, data);\r\n          if (occupant.health <= 0 && occupant.effects.lastword) {\r\n            EP.processLastwordEffect(occupant, key);\r\n          }\r\n        } else {\r\n          //Cheeksquito\r\n          if (updatedState.data.board.tiles[key].occupant.id !== 41) {\r\n            updatedState.data.board.tiles[key].occupant.canCollect = true;\r\n          }\r\n          //Cheeksquito\r\n\r\n          updatedState.data.board.tiles[key].occupant.hasMoved = false;\r\n          updatedState.data.board.tiles[key].occupant.hasAttacked = false;\r\n          updatedState.data.board.tiles[key].occupant.hasDashed = true;\r\n        }\r\n\r\n        //Cheekshrooms\r\n        if (\r\n          updatedState.data.board.tiles[key].occupant.id === 28 &&\r\n          updatedState.data.status.current ===\r\n            updatedState.data.board.tiles[key].occupant.player\r\n        ) {\r\n          updatedState.tiles[key].adjacent.forEach((adjTile) => {\r\n            if (\r\n              updatedState.data.board.tiles[adjTile].occupant.player ===\r\n              data.opponent\r\n            ) {\r\n              let target = updatedState.data.board.tiles[adjTile].occupant;\r\n              if (target.protection) {\r\n                target.protection = false;\r\n              } else {\r\n                target.health -= 1;\r\n              }\r\n\r\n              const EP = new EventProcessor(updatedState, data);\r\n\r\n              //Balloon Cheek\r\n              if (target.health <= 0) {\r\n                EP.processSpecialEffect(43, {\r\n                  action: \"remove\",\r\n                  tile: adjTile,\r\n                  attack: -1,\r\n                });\r\n              }\r\n              //Balloon Cheek\r\n\r\n              updatedState.data.board.tiles[adjTile].occupant =\r\n                target.health > 0 ? target : removeOccupant;\r\n\r\n              if (target.health <= 0 && target.effects.lastword) {\r\n                EP.processLastwordEffect(target, adjTile);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        //Cheekshrooms\r\n      });\r\n\r\n      const anyAdjacent = (tile) =>\r\n        updatedState.data.board.tiles[tile].occupant.player === data.opponent &&\r\n        updatedState.data.board.tiles[tile].occupant.canCollect;\r\n      Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n        if (updatedState.data.board.wells[key].adjacent.some(anyAdjacent)) {\r\n          updatedState.data.board.wells[key].available = false;\r\n          updatedState.data.board.wells[key].collected = true;\r\n          updatedState.data[data.opponent].faeria += 1;\r\n        } else {\r\n          updatedState.data.board.wells[key].available = true;\r\n          updatedState.data.board.wells[key].collected = false;\r\n        }\r\n      });\r\n\r\n      Object.keys(updatedState.data.board.tiles).forEach((key) => {\r\n        if (\r\n          updatedState.data.board.tiles[key].occupant.effects.production &&\r\n          updatedState.data.board.tiles[key].occupant.player === data.opponent\r\n        ) {\r\n          const EP = new EventProcessor(updatedState, data);\r\n          EP.processProductionEffect(\r\n            updatedState.data.board.tiles[key].occupant,\r\n            key\r\n          );\r\n        }\r\n      });\r\n\r\n      updatedState.data.status.turn += 1;\r\n      updatedState.data.status.current = data.opponent;\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      updatedState.currentAction = \"\";\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"/faeria/Faeria/utils/saveState.php\", formdata)\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n\r\n      return updatedState;\r\n    },\r\n  };\r\n  initStore(actions, loadStore);\r\n};\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport configureStore from \"./hooks-store/global-store\";\nimport axios from \"axios\";\n\nlet loadStore = {};\nconst formdata = new FormData();\nformdata.append(\"id\", document.getElementById(\"game_id\").value);\naxios\n  .post(\"/faeria/Faeria/utils/getState.php\", formdata)\n  .then((res) => {\n    loadStore = JSON.parse(res.data);\n    axios\n      .post(\"/faeria/Faeria/utils/getCardsStore.php\")\n      .then((res) => {\n        loadStore.cardLibrary = res.data;\n        configureStore(loadStore);\n        ReactDOM.render(\n          <React.StrictMode>\n            <App />\n          </React.StrictMode>,\n          document.getElementById(\"game\")\n        );\n      })\n      .catch((error) => {\n        console.log(\"Network Error\", error.message);\n      });\n  })\n  .catch((error) => {\n    console.log(\"Network Error\", error.message);\n  });\n"],"sourceRoot":""}