{"version":3,"sources":["hooks-store/store.js","assets/images/cards/images.js","assets/images/ui/icons.js","components/Game/Board/Tile/Occupant/Occupant.js","components/Game/Board/Tile/Tile.js","components/Game/Board/Well/Well.js","components/Game/Board/God/God.js","components/Game/Board/Board.js","components/Game/Hand/Card/Card.js","components/Game/Hand/Hand.js","assets/images/ui/images_ui.js","components/Game/Wheel/WheelButton/WheelButton.js","components/UI/EndTurnButton/EndTurnButton.js","components/Game/Wheel/Wheel.js","components/Game/Faeria/Faeria.js","components/Game/Deck/Deck.js","components/UI/Hexagon/Hexagon.js","components/UI/Infobox/Infobox.js","components/UI/MulliganModal/MulliganModal.js","components/Game/Game.js","App.js","hooks-store/event-processor.js","hooks-store/global-store.js","index.js"],"names":["globalState","listeners","actions","useStore","shouldListen","setState","useState","dispatch","actionIdentifier","payload","newState","listener","useEffect","push","filter","li","images","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","icons","aquatic_enemy","aquatic_enemyhover","aquatic_friendly","aquatic_friendlyhover","flying_enemy","flying_enemyhover","flying_friendly","flying_friendlyhover","jump_enemy","jump_enemyhover","jump_friendly","jump_friendlyhover","ranged_enemy","ranged_enemyhover","ranged_friendly","ranged_friendlyhover","scoot_enemy","scoot_enemyhover","scoot_friendly","scoot_friendlyhover","taunt_enemy","taunt_enemyhover","taunt_friendly","taunt_friendlyhover","Occupant","props","state","points_divine","x","y","join","occupantClass","data","board","tiles","tile","occupant","player","user","occupantSelectable","status","current","creatureClass","occupantSelected","iconClass","icon_taunt","taunt","rx","ry","width","height","fill","icon_ranged","ranged","icon_flying","movement","special","flying","icon_aquatic","aquatic","icon_jump","jump","icon_scoot","range","divine","points","className","protection","cx","cy","onClick","event","opponent","tile_id","currentAction","id","patternContentUnits","preserveAspectRatio","href","dy","attack","health","Tile","extraclass","selectable","tileclass","owner","type","hexSize","startPosX","startPosY","Math","sqrt","Fragment","Well","wellClass","collected","r","God","gods","god","textAnchor","stroke","strokeWidth","fontSize","Board","boardTilesMap","G","F","E","D","C","B","A","wellPositions","godPositions","Object","keys","map","column","i","Array","_","j","parity","columnNr","wells","indexOf","length","boardMaxHeight","style","justifyContent","display","Card","clickAction","mulligan","hand","index","cards","faeria_cost","faeria","hand_id","card_id","imgSrc","classname","alt","src","parseInt","Hand","cardClass","selected","alignSelf","align","images_ui","WheelButton","wheelbuttons","wheelbutton_id","EndTurnButton","btnText","turn","btnClass","btnClassText","btnOnClick","Wheel","offsetX","offsetY","wheel","wheelOutput","wheel_used","strokeColor","fillColor","position","bottom","left","Faeria","Deck","border","deckcounter","handcounter","Hexagon","Infobox","landCount","lands","f","l","m","d","values","forEach","charAt","getLandCount","landCounter","info_landcounter","margin","info_faeria","info_player","textAlign","name","info","deck","MulliganModal","initialHand","setInitialHand","btnDisabled","setBtnDisabled","swapHandler","newHand","JSON","parse","stringify","target","slice","getdata","FormData","append","axios","post","then","res","prevState","prevHand","cardsToReplace","replacePool","entries","card","includes","random","floor","splice","shuffledDeck","prevDeck","deckLength","postdata","catch","error","console","log","message","Game","document","getElementById","value","shuffle","timer","setTimeout","formdata","timestamp","Date","now","clearTimeout","finished","winner","flexWrap","app","EventProcessor","this","eventLibrary","summonEffectLibrary","giftEffectLibrary","lastwordEffectLibrary","productionEffectLibrary","key","wheel_neutral_counter","selected_card_id","getSelectedCard","selected_occupant_id","friendly","enemy","playerCheck","land_cost","forest","desert","mountain","lake","wild","base_attack","base_health","haste","dash","hasMoved","hasDashed","hasAttacked","effects","summon","gift","lastword","production","effectUsed","landtype","newTileState","anyAdjacent","anyAdjacentFromOccupant","god_key","tileType","tileOwner","adjacent","some","player1","player2","randomTiles","params","process","setSelectStateForOccupants","setSelectStateForAllTiles","setSelectStateForBuildTiles","getRemoveOccupant","processLastwordEffect","handleCustomDrawLogic","findIndex","getLandCostForType","tileAvailable","availableTiles","getRandomTiles","count","getOccupantByID","getLandCostForOccupant","setSelectStateForGods","adjTile","setSelectStateForConditionalOccupants","configureStore","loadStore","userActions","initialState","SET_DATA","currentState","SHUFFLE_DECK","updatedState","CONFIRM_MULLIGAN","START_GAME","SELECT_LAND","newWheelState","action","DRAW_CARD","health_dmg","PLUS_FAERIA","BUILD_TILE","wheelbutton","SELECT_CARD","getLands","landtypes","canSpawnAdjacentToFriendliesArray","String","valid","reduce","sum","currentValue","requirementsMet","SELECT_EVENT","runLogic","EP","initEventLogic","handleEventLogic","PROCESS_EVENT_OCCUPANT","PROCESS_EVENT_TILE","PROCESS_GIFT_OCCUPANT","processGiftEffect","SUMMON_CREATURE","newOccupant","available","processSummonEffect","initGiftEffect","SELECT_OCCUPANT","isTaunted","taunt_tile","jumpTiles","adjacent_tile","movementRange","rangeTiles","rangeTilesHelper","prevTile","currentTile","rangetile","rangetile_key","rangetile_adj","rangetile_adj_key","rangetile_adj_adj","adjacentNonTile","rangeAttack","rangeAttackHelper","moveRequirementsMet","attackRequirementsMet","rangeAttackArrayHelper","rangeAttackArray","attacktile","MOVE_OCCUPANT","selected_tile_id","ATTACK_OCCUPANT","attacker","defender","removeOccupant","ATTACK_GOD","wasHit","END_TURN","processProductionEffect","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.9f06484b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nlet globalState = {};\r\nlet listeners = [];\r\nlet actions = {};\r\n\r\nexport const useStore = (shouldListen = true) => {\r\n  const setState = useState(globalState)[1];\r\n\r\n  const dispatch = (actionIdentifier, payload) => {\r\n    const newState = actions[actionIdentifier](globalState, payload);\r\n    globalState = { ...globalState, ...newState };\r\n\r\n    for (const listener of listeners) {\r\n      listener(globalState);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shouldListen) {\r\n      listeners.push(setState);\r\n    }\r\n\r\n    return () => {\r\n      if (shouldListen) {\r\n        listeners = listeners.filter((li) => li !== setState);\r\n      }\r\n    };\r\n  }, [setState, shouldListen]);\r\n\r\n  return [globalState, dispatch];\r\n};\r\n\r\nexport const initStore = (userActions, initialState) => {\r\n  if (initialState) {\r\n    globalState = { ...globalState, ...initialState };\r\n  }\r\n  actions = { ...actions, ...userActions };\r\n};\r\n","const images = {\r\n    'cardback': 'assets/images/cards/cardback.jpg',\r\n    0: 'assets/images/cards/cheeksplore.jpg',\r\n    1: 'assets/images/cards/mercheek.jpg',\r\n    2: 'assets/images/cards/dolphin_cheekrider.jpg',\r\n    3: 'assets/images/cards/clamcheek.jpg',\r\n    4: 'assets/images/cards/ninjacheek.jpg',\r\n    5: 'assets/images/cards/song_of_the_mercheek.jpg',\r\n    6: 'assets/images/cards/cheek_in_a_bottle.jpg',\r\n    7: 'assets/images/cards/cheekie_in_a_lamp.jpg',\r\n    8: 'assets/images/cards/cheeklord.jpg',\r\n    9: 'assets/images/cards/rain_of_cheek.jpg',\r\n    10: 'assets/images/cards/cheekdrop.jpg',\r\n    11: 'assets/images/cards/cheekmoon.jpg',\r\n    12: 'assets/images/cards/cheekpearl.jpg',\r\n    13: 'assets/images/cards/crabcheek.jpg',\r\n    14: 'assets/images/cards/cheekcano.jpg',\r\n    15: 'assets/images/cards/cheekdevil.jpg',\r\n    16: 'assets/images/cards/cheekflame.jpg',\r\n    17: 'assets/images/cards/cheekblast.jpg',\r\n    18: 'assets/images/cards/cheekflame_faerie.jpg',\r\n    19: 'assets/images/cards/baby_cheekdevil.jpg',\r\n    20: 'assets/images/cards/ghostcheek_tower.jpg',\r\n    21: 'assets/images/cards/ghostcheek.jpg',\r\n    22: 'assets/images/cards/ghostcheek_alchemist.jpg',\r\n    23: 'assets/images/cards/cheekruption.jpg',\r\n    24: 'assets/images/cards/suncheek.jpg',\r\n    25: 'assets/images/cards/cheekflower.jpg',\r\n    26: 'assets/images/cards/cavecheek_dweller.jpg',\r\n    27: 'assets/images/cards/mushroom_cheek.jpg',\r\n    28: 'assets/images/cards/cheekshrooms.jpg',\r\n    29: 'assets/images/cards/cheektree_giant.jpg',\r\n    30: 'assets/images/cards/cheekworld_tree.jpg',\r\n    31: 'assets/images/cards/cheek_shaman.jpg',\r\n    32: 'assets/images/cards/cheekfox.jpg',\r\n    33: 'assets/images/cards/cheekbloom_spirit.jpg',\r\n    34: 'assets/images/cards/cheekshield_spirit.jpg',\r\n    35: 'assets/images/cards/cheek_dancers.jpg',\r\n}\r\n\r\nexport default images;","const icons = {\r\n    aquatic_enemy: 'assets/images/ui/aquatic_enemy.png',\r\n    aquatic_enemyhover: 'assets/images/ui/aquatic_enemyhover.png',\r\n    aquatic_friendly: 'assets/images/ui/aquatic_friendly.png',\r\n    aquatic_friendlyhover: 'assets/images/ui/aquatic_friendlyhover.png',\r\n    flying_enemy: 'assets/images/ui/flying_enemy.png',\r\n    flying_enemyhover: 'assets/images/ui/flying_enemyhover.png',\r\n    flying_friendly: 'assets/images/ui/flying_friendly.png',\r\n    flying_friendlyhover: 'assets/images/ui/flying_friendlyhover.png',\r\n    jump_enemy: 'assets/images/ui/jump_enemy.png',\r\n    jump_enemyhover: 'assets/images/ui/jump_enemyhover.png',\r\n    jump_friendly: 'assets/images/ui/jump_friendly.png',\r\n    jump_friendlyhover: 'assets/images/ui/jump_friendlyhover.png',\r\n    ranged_enemy: 'assets/images/ui/ranged_enemy.png',\r\n    ranged_enemyhover: 'assets/images/ui/ranged_enemyhover.png',\r\n    ranged_friendly: 'assets/images/ui/ranged_friendly.png',\r\n    ranged_friendlyhover: 'assets/images/ui/ranged_friendlyhover.png',\r\n    scoot_enemy: 'assets/images/ui/scoot_enemy.png',\r\n    scoot_enemyhover: 'assets/images/ui/scoot_enemyhover.png',\r\n    scoot_friendly: 'assets/images/ui/scoot_friendly.png',\r\n    scoot_friendlyhover: 'assets/images/ui/scoot_friendlyhover.png',\r\n    taunt_enemy: 'assets/images/ui/taunt_enemy.png',\r\n    taunt_enemyhover: 'assets/images/ui/taunt_enemyhover.png',\r\n    taunt_friendly: 'assets/images/ui/taunt_friendly.png',\r\n    taunt_friendlyhover: 'assets/images/ui/taunt_friendlyhover.png',\r\n}\r\n\r\nexport default icons;","import React from \"react\";\r\nimport { useStore } from \"../../../../../hooks-store/store\";\r\nimport \"./Occupant.css\";\r\nimport images from \"../../../../../assets/images/cards/images\";\r\nimport icons from \"../../../../../assets/images/ui/icons\";\r\n\r\nconst Occupant = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const points_divine = [\r\n    [props.x + 30, props.y - 10].join(),\r\n    [props.x - 10, props.y + 60].join(),\r\n    [props.x + 70, props.y + 60].join(),\r\n  ].join(\" \");\r\n\r\n  const occupantClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? state.tiles[props.tile].occupantSelectable &&\r\n        state.data.status.current === props.user\r\n        ? \"friendly-selectable\"\r\n        : \"friendly\"\r\n      : state.tiles[props.tile].occupantSelectable\r\n      ? \"enemy-selectable\"\r\n      : \"enemy\";\r\n  const creatureClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? state.tiles[props.tile].occupantSelected\r\n        ? \"creature-selected\"\r\n        : \"creature\"\r\n      : \"creature-enemy\";\r\n  const iconClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? \"friendly\"\r\n      : \"enemy\";\r\n  const icon_taunt = state.data.board.tiles[props.tile].occupant.taunt ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y - 7}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_taunt\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_ranged = state.data.board.tiles[props.tile].occupant.ranged ? (\r\n    <rect\r\n      x={props.x + 50}\r\n      y={props.y + 30}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_ranged\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_flying = state.data.board.tiles[props.tile].occupant.movement\r\n    .special.flying ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y + 45}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_flying\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_aquatic =\r\n    !icon_flying &&\r\n    state.data.board.tiles[props.tile].occupant.movement.special.aquatic ? (\r\n      <rect\r\n        x={props.x + 20}\r\n        y={props.y + 45}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        fill={\"url(#icon_aquatic\" + props.tile + \")\"}\r\n      />\r\n    ) : null;\r\n  const icon_jump = state.data.board.tiles[props.tile].occupant.movement.special\r\n    .jump ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y + 65}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_jump\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_scoot =\r\n    !icon_jump &&\r\n    state.data.board.tiles[props.tile].occupant.movement.range > 1 ? (\r\n      <rect\r\n        x={props.x + 20}\r\n        y={props.y + 65}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        fill={\"url(#icon_scoot\" + props.tile + \")\"}\r\n      />\r\n    ) : null;\r\n  const divine = state.data.board.tiles[props.tile].occupant.divine ? (\r\n    <polygon points={points_divine} className=\"divine\" />\r\n  ) : null;\r\n  const protection = state.data.board.tiles[props.tile].occupant.protection ? (\r\n    <ellipse\r\n      cx={props.x + 30}\r\n      cy={props.y + 39}\r\n      rx=\"49\"\r\n      ry=\"49\"\r\n      className=\"protection\"\r\n    />\r\n  ) : null;\r\n\r\n  const occupantHandler = () => {\r\n    if (\r\n      state.tiles[props.tile].occupantSelectable &&\r\n      state.data.status.current === props.user\r\n    ) {\r\n      const payload = {\r\n        event: \"occupant\",\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        tile_id: props.tile,\r\n      };\r\n      if (state.currentAction === \"gift_occupant\") {\r\n        dispatch(\"PROCESS_GIFT_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"event_occupant\") {\r\n        dispatch(\"PROCESS_EVENT_OCCUPANT\", payload);\r\n      } else {\r\n        if (state.data.board.tiles[props.tile].occupant.player === props.user) {\r\n          dispatch(\"SELECT_OCCUPANT\", payload);\r\n        } else if (state.currentAction === \"occupant_selected\") {\r\n          dispatch(\"ATTACK_OCCUPANT\", payload);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const occupant = (\r\n    <g className={occupantClass} onClick={occupantHandler}>\r\n      <defs>\r\n        <pattern\r\n          id={\"creature-image\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={images[state.data.board.tiles[props.tile].occupant.id]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_aquatic\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"aquatic_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_flying\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"flying_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_jump\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"jump_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_ranged\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"ranged_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_scoot\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"scoot_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_taunt\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"taunt_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n\r\n      <rect\r\n        x={props.x}\r\n        y={props.y}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width={props.width}\r\n        height={(props.width / 3) * 4}\r\n        className={creatureClass}\r\n        fill={\"url(#creature-image\" + props.tile + \")\"}\r\n      />\r\n\r\n      {icon_taunt}\r\n      {icon_ranged}\r\n      {icon_flying}\r\n      {icon_aquatic}\r\n      {icon_jump}\r\n      {icon_scoot}\r\n\r\n      <rect\r\n        x={props.x}\r\n        y={props.y + 55}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"25\"\r\n        className=\"attack\"\r\n      />\r\n      <text x={props.x + 10} y={props.y + 70} dy=\".3em\" className=\"attack-text\">\r\n        {state.data.board.tiles[props.tile].occupant.attack}\r\n      </text>\r\n\r\n      <rect\r\n        x={props.x + 40}\r\n        y={props.y + 55}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"25\"\r\n        className=\"health\"\r\n      />\r\n      <text x={props.x + 50} y={props.y + 70} dy=\".3em\" className=\"health-text\">\r\n        {state.data.board.tiles[props.tile].occupant.health}\r\n      </text>\r\n\r\n      {divine}\r\n      {protection}\r\n    </g>\r\n  );\r\n\r\n  return state.data.board.tiles[props.tile].occupant.id > 0 ? occupant : null;\r\n};\r\n\r\nexport default Occupant;\r\n","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport Occupant from \"./Occupant/Occupant\";\r\nimport \"./Tile.css\";\r\n\r\nconst Tile = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const extraclass =\r\n    state.tiles[props.id].selectable && state.data.status.current === props.user\r\n      ? \"tile-selectable\"\r\n      : \"tile-not-selectable\";\r\n  const tileclass =\r\n    state.data.board.tiles[props.id].owner !== props.user\r\n      ? props.type + \"-opponent\"\r\n      : props.type;\r\n\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  const tileHandler = () => {\r\n    if (\r\n      state.tiles[props.id].selectable &&\r\n      state.data.status.current === props.user\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        tile_id: props.id,\r\n      };\r\n      if (state.currentAction === \"summon_creature\") {\r\n        dispatch(\"SUMMON_CREATURE\", payload);\r\n      } else if (state.currentAction === \"occupant_selected\") {\r\n        dispatch(\"MOVE_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"event_tile\") {\r\n        dispatch(\"PROCESS_EVENT_TILE\", payload);\r\n      } else {\r\n        dispatch(\"BUILD_TILE\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <polygon\r\n        className={tileclass + \" \" + extraclass}\r\n        points={points}\r\n        onClick={tileHandler}\r\n      />\r\n      <Occupant\r\n        tile={props.id}\r\n        x={startPosX + hexSize * 0.5}\r\n        y={startPosY + Math.sqrt(3) * hexSize * 0.125}\r\n        width={hexSize}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\nimport \"./Well.css\";\r\n\r\nconst Well = (props) => {\r\n  const wellClass = props.data.collected ? \"well-collected\" : \"well-available\";\r\n\r\n  return (\r\n    <circle cx={props.cx} cy={props.cy} r={props.r} className={wellClass} />\r\n  );\r\n};\r\n\r\nexport default Well;\r\n","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport \"./God.css\";\r\n\r\nconst God = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const selectable = state.gods[props.id].selectable\r\n    ? \"god-selectable\"\r\n    : \"god-not-selectable\";\r\n\r\n  const godHandler = () => {\r\n    if (state.gods[props.id].selectable) {\r\n      const payload = {\r\n        event: \"god\",\r\n        god: props.id,\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n      };\r\n      if (state.currentAction === \"event_occupant\") {\r\n        dispatch(\"PROCESS_EVENT_OCCUPANT\", payload);\r\n      } else {\r\n        dispatch(\"ATTACK_GOD\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <g className={selectable} onClick={godHandler}>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} />\r\n      <text\r\n        x={props.cx}\r\n        y={props.cy}\r\n        textAnchor=\"middle\"\r\n        stroke=\"#8B0000\"\r\n        strokeWidth=\"4px\"\r\n        fontSize=\"40px\"\r\n        dy=\".3em\"\r\n      >\r\n        {props.data.health}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default God;\r\n","import React from \"react\";\r\nimport Tile from \"./Tile/Tile\";\r\nimport Well from \"./Well/Well\";\r\nimport God from \"./God/God\";\r\n\r\nconst Board = (props) => {\r\n  const hexSize = 60;\r\n  const boardMaxHeight = 6;\r\n  const godMaxHeight = boardMaxHeight + 1;\r\n  const boardTilesMap =\r\n    props.user === \"player2\"\r\n      ? { G: 2, F: 5, E: 6, D: 5, C: 6, B: 5, A: 2 }\r\n      : { A: 2, B: 5, C: 6, D: 5, E: 6, F: 5, G: 2 };\r\n  const wellPositions =\r\n    props.user === \"player2\"\r\n      ? { G: [3, 0], A: [3, 0] }\r\n      : { A: [0, 3], G: [0, 3] };\r\n  const godPositions = props.user === \"player2\" ? { D: [6, 0] } : { D: [0, 6] };\r\n\r\n  const tiles = Object.keys(boardTilesMap).map((column, i) => {\r\n    return [...Array(boardTilesMap[column])].map((_, j) => {\r\n      let parity = i % 2 === 0;\r\n      let columnNr =\r\n        props.user === \"player2\" ? boardTilesMap[column] - j : j + 1;\r\n      return (\r\n        <Tile\r\n          key={column + columnNr}\r\n          id={column + columnNr}\r\n          type={props.data.tiles[column + columnNr].type}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 1.5}\r\n          startPosY={\r\n            parity\r\n              ? Math.sqrt(3) *\r\n                  hexSize *\r\n                  ((boardMaxHeight - boardTilesMap[column]) * 0.5 + j) +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n              : Math.sqrt(3) * hexSize * j + Math.sqrt(3) * hexSize\r\n          }\r\n          user={props.user}\r\n          opponent={props.opponent}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const wells = Object.keys(wellPositions).map((column) => {\r\n    return wellPositions[column].map((_, i) => {\r\n      let parity = Object.keys(boardTilesMap).indexOf(column) % 2 === 0;\r\n      return (\r\n        <Well\r\n          key={\"well-\" + column + wellPositions[column][i]}\r\n          id={\"well-\" + column + wellPositions[column][i]}\r\n          data={props.data.wells[column + wellPositions[column][i]]}\r\n          r={hexSize * 0.5}\r\n          cx={\r\n            hexSize * 1.5 * Object.keys(boardTilesMap).indexOf(column) + hexSize\r\n          }\r\n          cy={\r\n            parity\r\n              ? (boardMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  wellPositions[column].length +\r\n                  [0, 3][i]) *\r\n                Math.sqrt(3) *\r\n                hexSize\r\n              : (boardMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  wellPositions[column].length +\r\n                  [0, 3][i]) *\r\n                  Math.sqrt(3) *\r\n                  hexSize +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n          }\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const gods = Object.keys(godPositions).map((column) => {\r\n    return godPositions[column].map((_, i) => {\r\n      let parity = Object.keys(boardTilesMap).indexOf(column) % 2 === 0;\r\n      return (\r\n        <God\r\n          key={\"god-\" + column + godPositions[column][i]}\r\n          id={column + godPositions[column][i]}\r\n          data={props.data.gods[column + godPositions[column][i]]}\r\n          r={hexSize * 0.65}\r\n          cx={\r\n            hexSize * 1.5 * Object.keys(boardTilesMap).indexOf(column) + hexSize\r\n          }\r\n          cy={\r\n            parity\r\n              ? (godMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  godPositions[column].length +\r\n                  [0, 6][i]) *\r\n                Math.sqrt(3) *\r\n                hexSize\r\n              : (godMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  godPositions[column].length +\r\n                  [0, 6][i]) *\r\n                  Math.sqrt(3) *\r\n                  hexSize +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n          }\r\n          user={props.user}\r\n          opponent={props.opponent}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"60vw\", justifyContent: \"center\", display: \"flex\" }}>\r\n      <svg\r\n        width={\r\n          hexSize * 1.5 * Object.keys(boardTilesMap).length + hexSize * 0.5\r\n        }\r\n        height={Math.sqrt(3) * hexSize * godMaxHeight}\r\n      >\r\n        {tiles}\r\n        {wells}\r\n        {gods}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport images from \"../../../../assets/images/cards/images\";\r\nimport \"./Card.css\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\n\r\nconst Card = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const cardHandler = () => {\r\n    if (\r\n      state.hand[props.index].selectable &&\r\n      state.data[props.user].cards[props.id].faeria_cost <=\r\n        state.data[props.user].faeria\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        hand_id: props.index,\r\n        card_id: props.id,\r\n      };\r\n      if (state.data[props.user].cards[props.id].type === \"event\") {\r\n        dispatch(\"SELECT_EVENT\", payload);\r\n      } else {\r\n        dispatch(\"SELECT_CARD\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cardDisabled = () => {};\r\n\r\n  const clickAction = state.data[props.user].mulligan\r\n    ? props.clickAction\r\n    : state.data.status.current !== props.user || props.owner !== props.user\r\n    ? cardDisabled\r\n    : cardHandler;\r\n\r\n  const imgSrc =\r\n    props.owner === props.opponent ? images[\"cardback\"] : images[props.data.id];\r\n\r\n  return (\r\n    <div className={props.classname} onClick={clickAction}>\r\n      <img\r\n        id={props.index}\r\n        alt=\"\"\r\n        src={imgSrc}\r\n        width={props.width}\r\n        height={parseInt(props.height) - 6 + \"px\"}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst Hand = (props) => {\r\n  const state = useStore()[0];\r\n\r\n  const cards = props.data.hand.map((id, index) => {\r\n    const cardClass =\r\n      state.hand[index + 1].selected && props.user === props.owner\r\n        ? \"-selected\"\r\n        : \"\";\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index + 1}\r\n        data={props.data.cards[id]}\r\n        height={props.height}\r\n        width=\"120px\"\r\n        classname={\"card\" + cardClass}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.owner}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"60vw\",\r\n        height: props.height,\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        alignSelf: props.align,\r\n      }}\r\n    >\r\n      {cards}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hand;\r\n","const images_ui = {\r\n    'wheel-B3': 'assets/images/ui/pluscard.png',\r\n    'wheel-C2': 'assets/images/ui/pluscheekia.png',\r\n}\r\n\r\nexport default images_ui;","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport images_ui from \"../../../../assets/images/ui/images_ui\";\r\n\r\nconst WheelButton = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const selectable = state.wheelbuttons[props.id].selectable\r\n    ? \"\"\r\n    : \" not-selectable\";\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  const selectHandler = () => {\r\n    if (state.wheelbuttons[props.id].selectable) {\r\n      switch (props.id) {\r\n        case \"wheel-B3\":\r\n          dispatch(\"DRAW_CARD\", props.user);\r\n          break;\r\n        case \"wheel-C2\":\r\n          dispatch(\"PLUS_FAERIA\", props.user);\r\n          break;\r\n        default:\r\n          dispatch(\"SELECT_LAND\", {\r\n            player: props.user,\r\n            wheelbutton_id: props.id,\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <g>\r\n      <defs>\r\n        <pattern\r\n          id={\"buttonimage-\" + props.id}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={images_ui[props.id]}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n      <polygon\r\n        className={props.className + selectable}\r\n        fill={\"url(#buttonimage-\" + props.id + \")\"}\r\n        id={props.id}\r\n        points={points}\r\n        onClick={selectHandler}\r\n      />\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default WheelButton;\r\n","import React from \"react\";\r\nimport \"./EndTurnButton.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst EndTurnButton = (props) => {\r\n  const dispatch = useStore()[1];\r\n\r\n  const endTurnHandler = () => {\r\n    const payload = {\r\n      player: props.user,\r\n      opponent: props.opponent,\r\n      id: props.id,\r\n    };\r\n    dispatch(\"END_TURN\", payload);\r\n  };\r\n\r\n  const enemyTurnHandler = () => {};\r\n\r\n  const btnText =\r\n    props.data.turn === 0\r\n      ? \"MULLIGAN\"\r\n      : props.opponent === props.data.current\r\n      ? \"ENEMY TURN\"\r\n      : \"END TURN\";\r\n  const btnClass =\r\n    props.opponent === props.data.current\r\n      ? \"enemyturn-button\"\r\n      : \"endturn-button\";\r\n  const btnClassText =\r\n    props.opponent === props.data.current ? \"enemyturn-text\" : \"endturn-text\";\r\n  const btnOnClick =\r\n    props.data.turn === 0 || props.opponent === props.data.current\r\n      ? enemyTurnHandler\r\n      : endTurnHandler;\r\n\r\n  return (\r\n    <g onClick={btnOnClick}>\r\n      <rect\r\n        x=\"50\"\r\n        y=\"125\"\r\n        rx=\"20\"\r\n        ry=\"20\"\r\n        width=\"200\"\r\n        height=\"50\"\r\n        className={btnClass}\r\n      />\r\n      <text x=\"150\" y=\"150\" fontSize=\"25\" className={btnClassText} dy=\".3em\">\r\n        {btnText}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default EndTurnButton;\r\n","import React from \"react\";\r\nimport WheelButton from \"./WheelButton/WheelButton\";\r\nimport EndTurnButton from \"../../UI/EndTurnButton/EndTurnButton\";\r\nimport \"./Wheel.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst Wheel = (props) => {\r\n  const state = useStore()[0];\r\n\r\n  const hexSize = 40;\r\n  const boardTilesMap = { A: 2, B: 3, C: 2 };\r\n  const boardMaxHeight = 3;\r\n  const offsetX =\r\n    (300 -\r\n      (hexSize * 1.5 * Object.keys(boardTilesMap).length + hexSize * 0.5)) *\r\n    0.5;\r\n  const offsetY =\r\n    (300 - Math.sqrt(3) * hexSize * boardMaxHeight - Math.sqrt(3) * hexSize) *\r\n    0.5;\r\n\r\n  const wheel = Object.keys(boardTilesMap).map((column, i) => {\r\n    return [...Array(boardTilesMap[column])].map((_, j) => {\r\n      let parity = i % 2 !== 0;\r\n      return (\r\n        <WheelButton\r\n          key={\"wheel-\" + column + (j + 1)}\r\n          id={\"wheel-\" + column + (j + 1)}\r\n          className={\"wheel-\" + column + (j + 1)}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 1.5 + offsetX}\r\n          startPosY={\r\n            parity\r\n              ? Math.sqrt(3) *\r\n                  hexSize *\r\n                  ((boardMaxHeight - boardTilesMap[column]) * 0.5 + j) +\r\n                Math.sqrt(3) * hexSize * 0.5 +\r\n                offsetY\r\n              : Math.sqrt(3) * hexSize * j + Math.sqrt(3) * hexSize + offsetY\r\n          }\r\n          user={props.user}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const wheelOutput = !state.data[props.user].wheel_used ? (\r\n    wheel\r\n  ) : (\r\n    <EndTurnButton\r\n      data={props.data}\r\n      user={props.user}\r\n      opponent={props.opponent}\r\n      id={props.id}\r\n    />\r\n  );\r\n  const strokeColor =\r\n    props.data.current === props.opponent ? \"#962d3e\" : \"#00FA9A\";\r\n  const fillColor =\r\n    props.data.current === props.opponent ? \"#262626\" : \"#2F4F4F\";\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"300px\",\r\n        height: \"300px\",\r\n        position: \"absolute\",\r\n        bottom: \"50px\",\r\n        left: \"50px\",\r\n      }}\r\n    >\r\n      <svg width=\"300px\" height=\"300\">\r\n        <circle\r\n          cx=\"150\"\r\n          cy=\"150\"\r\n          r=\"145\"\r\n          stroke={strokeColor}\r\n          strokeWidth=\"5\"\r\n          fill={fillColor}\r\n        />\r\n        {wheelOutput}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n","import React from \"react\";\r\n\r\nconst Faeria = (props) => {\r\n  return (\r\n    <svg>\r\n      <g>\r\n        <circle\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          r=\"50\"\r\n          stroke=\"#001920\"\r\n          strokeWidth=\"5\"\r\n          fill=\"#00bae8\"\r\n        />\r\n        <text\r\n          x=\"50%\"\r\n          y=\"50%\"\r\n          stroke=\"#001920\"\r\n          strokeWidth=\"3px\"\r\n          textAnchor=\"middle\"\r\n          fontSize=\"50px\"\r\n          dy=\".3em\"\r\n        >\r\n          {props.faeria}\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Faeria;\r\n","import React from \"react\";\r\n\r\nconst Deck = (props) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div style={{ border: \"5px solid #001920\" }}>\r\n        Deck: {props.deckcounter}\r\n      </div>\r\n      <div style={{ border: \"5px solid #001920\" }}>\r\n        Hand: {props.handcounter}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\n\r\nconst Hexagon = (props) => {\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  return <polygon className={props.className} points={points} />;\r\n};\r\n\r\nexport default Hexagon;\r\n","import React from \"react\";\r\nimport Faeria from \"../../Game/Faeria/Faeria\";\r\nimport Deck from \"../../Game/Deck/Deck\";\r\nimport Hexagon from \"../Hexagon/Hexagon\";\r\nimport \"./Infobox.css\";\r\n\r\nconst Infobox = (props) => {\r\n  const landCount = getLandCount(props.tiles, props.player);\r\n  const align = props.align;\r\n  const hexSize = 20;\r\n  const landCounter = Object.keys(landCount).map((column, i) => {\r\n    return (\r\n      <g key={column} id={column}>\r\n        <Hexagon\r\n          className={column}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 2.5 + 8}\r\n          startPosY={hexSize - hexSize * Math.sqrt(3) * 0.5}\r\n        />\r\n        <text\r\n          x={hexSize * i * 2.5 + hexSize + 8}\r\n          y={\r\n            hexSize * Math.sqrt(3) * 0.5 +\r\n            (hexSize - hexSize * Math.sqrt(3) * 0.5)\r\n          }\r\n          className={column + \"-text\"}\r\n          fontSize={hexSize}\r\n          dy=\".3em\"\r\n        >\r\n          {landCount[column]}\r\n        </text>\r\n      </g>\r\n    );\r\n  });\r\n  const info_landcounter = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <svg height={hexSize * 2} width=\"208px\" display=\"block\" margin=\"auto\">\r\n        {landCounter}\r\n      </svg>\r\n    </div>\r\n  );\r\n  const info_faeria = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Faeria faeria={props.data.faeria} />\r\n    </div>\r\n  );\r\n  const info_player = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div\r\n        style={{\r\n          width: \"50%\",\r\n          border: \"5px solid #001920\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <b>{props.data.name}</b>\r\n      </div>\r\n    </div>\r\n  );\r\n  const info =\r\n    align === \"flex-end\" ? (\r\n      <React.Fragment>\r\n        {info_landcounter}\r\n        {info_faeria}\r\n        {info_player}\r\n        <Deck\r\n          deckcounter={props.data.deck.length}\r\n          handcounter={props.data.hand.length}\r\n        />\r\n      </React.Fragment>\r\n    ) : (\r\n      <React.Fragment>\r\n        <Deck\r\n          deckcounter={props.data.deck.length}\r\n          handcounter={props.data.hand.length}\r\n        />\r\n        {info_player}\r\n        {info_faeria}\r\n        {info_landcounter}\r\n      </React.Fragment>\r\n    );\r\n  return (\r\n    <div\r\n      style={{\r\n        alignSelf: align,\r\n        margin: \"25px\",\r\n      }}\r\n    >\r\n      {info}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getLandCount(tiles, player) {\r\n  let lands = { f: 0, l: 0, m: 0, d: 0 };\r\n  Object.values(tiles).forEach((tile) => {\r\n    if (tile.owner === player && tile.type.charAt(0) !== \"p\") {\r\n      lands[tile.type.charAt(0)] += 1;\r\n    }\r\n  });\r\n  return lands;\r\n}\r\n\r\nexport default Infobox;\r\n","import React, { useState } from \"react\";\r\nimport \"./MulliganModal.css\";\r\nimport Card from \"../../Game/Hand/Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\nimport axios from \"axios\";\r\n\r\nconst MulliganModal = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const [initialHand, setInitialHand] = useState({\r\n    0: false,\r\n    1: false,\r\n    2: false,\r\n  });\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n\r\n  const swapHandler = (event) => {\r\n    const newHand = JSON.parse(JSON.stringify(initialHand));\r\n    newHand[event.target.id] = !newHand[event.target.id];\r\n    setInitialHand(newHand);\r\n  };\r\n\r\n  const classname = (index) => {\r\n    return !initialHand[index] ? \"card-mulligan\" : \"card-mulligan-selected\";\r\n  };\r\n\r\n  const cards = state.data[props.user].deck.slice(0, 3).map((id, index) => {\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index}\r\n        data={state.data[props.user].cards[id]}\r\n        height=\"486px\"\r\n        width=\"360px\"\r\n        clickAction={swapHandler}\r\n        classname={classname(index)}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.user}\r\n      />\r\n    );\r\n  });\r\n\r\n  const confirmHandler = () => {\r\n    if (btnDisabled) {\r\n      return;\r\n    }\r\n    setBtnDisabled(true);\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const getdata = new FormData();\r\n    getdata.append(\"id\", props.id);\r\n    axios\r\n      .post(\"https://cheekia.loca.lt/faeria/Faeria/utils/getState.php\", getdata)\r\n      .then((res) => {\r\n        const prevState = JSON.parse(res.data);\r\n        newState.data[props.opponent] = prevState.data[props.opponent];\r\n        const prevHand = newState.data[props.user].deck.slice(0, 3);\r\n        const cardsToReplace = [];\r\n        const newHand = [];\r\n        for (let i = 0; i < prevHand.length; i++) {\r\n          if (initialHand[i]) {\r\n            cardsToReplace.push(\r\n              newState.data[props.user].cards[prevHand[i]].id\r\n            );\r\n          } else {\r\n            newHand.push(parseInt(prevHand[i]));\r\n          }\r\n        }\r\n        const replacePool = Object.entries(\r\n          newState.data[props.user].cards\r\n        ).filter(\r\n          (card) =>\r\n            !cardsToReplace.includes(card[1].id) &&\r\n            !newHand.includes(parseInt(card[0])) &&\r\n            parseInt(card[0]) !== 0\r\n        );\r\n        for (let i = 0; i < cardsToReplace.length; i++) {\r\n          let random = Math.floor(Math.random() * replacePool.length);\r\n          newHand.push(parseInt(replacePool[random][0]));\r\n          replacePool.splice(random, 1);\r\n        }\r\n        const shuffledDeck = [];\r\n        const prevDeck = newState.data[props.user].deck.filter(\r\n          (card) => !newHand.includes(card)\r\n        );\r\n        const deckLength = prevDeck.length;\r\n        for (let i = 0; i < deckLength; i++) {\r\n          let random = Math.floor(Math.random() * prevDeck.length);\r\n          shuffledDeck.push(prevDeck[random]);\r\n          prevDeck.splice(random, 1);\r\n        }\r\n        if (props.user === \"player2\") {\r\n          newHand.push(0);\r\n        }\r\n        newState.data[props.user].deck = shuffledDeck;\r\n        newState.data[props.user].hand = newHand;\r\n        newState.data[props.user].mulligan = false;\r\n        const postdata = new FormData();\r\n        postdata.append(\"react_state\", JSON.stringify(newState));\r\n        postdata.append(\"id\", props.id);\r\n        axios\r\n          .post(\r\n            \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n            postdata\r\n          )\r\n          .then(() => {\r\n            dispatch(\"CONFIRM_MULLIGAN\", newState);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Network Error\", error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Network Error\", error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div style={{ justifyContent: \"center\", display: \"flex\", height: \"75%\" }}>\r\n        {cards}\r\n      </div>\r\n      <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n        <div className=\"modal-confirm\" onClick={confirmHandler}>\r\n          CONFIRM\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MulliganModal;\r\n","import React, { useEffect } from \"react\";\r\nimport Board from \"./Board/Board\";\r\nimport Hand from \"./Hand/Hand\";\r\nimport Wheel from \"./Wheel/Wheel\";\r\nimport Infobox from \"../UI/Infobox/Infobox\";\r\nimport MulliganModal from \"../UI/MulliganModal/MulliganModal\";\r\nimport { useStore } from \"../../hooks-store/store\";\r\nimport axios from \"axios\";\r\n\r\nconst Game = () => {\r\n  const [state, dispatch] = useStore();\r\n  const user = document.getElementById(\"user\").value;\r\n  const opponent = document.getElementById(\"opponent\").value;\r\n  const id = document.getElementById(\"game_id\").value;\r\n\r\n  useEffect(() => {\r\n    const payload = { player: user, opponent: opponent, id: id };\r\n    if (!state.data[user].shuffle) {\r\n      dispatch(\"SHUFFLE_DECK\", payload);\r\n    }\r\n    if (\r\n      !state.data[user].mulligan &&\r\n      !state.data[opponent].mulligan &&\r\n      state.data.status.turn === 0 &&\r\n      user === \"player1\"\r\n    ) {\r\n      dispatch(\"START_GAME\", payload);\r\n    }\r\n    if (\r\n      (state.data.status.current === opponent && !state.data[user].mulligan ) ||\r\n      (!state.data[user].mulligan && state.data[opponent].mulligan)\r\n    ) {\r\n      const timer = setTimeout(() => {\r\n        const formdata = new FormData();\r\n        formdata.append(\"id\", id);\r\n        let timestamp = Date.now();\r\n        axios\r\n          .post(\r\n            \"https://cheekia.loca.lt/faeria/Faeria/utils/getState.php?timestamp=\" +\r\n              timestamp,\r\n            formdata\r\n          )\r\n          .then((res) => {\r\n            dispatch(\"SET_DATA\", JSON.parse(res.data));\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Network Error\", error.message);\r\n          });\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const mulligan = state.data[user].mulligan ? (\r\n    <MulliganModal user={user} opponent={opponent} id={id} />\r\n  ) : null;\r\n\r\n  const output = state.data.status.finished ? (\r\n    <h1 style={{ textAlign: \"center\" }}>\r\n      WINNER: {state.data[state.data.status.winner].name}\r\n    </h1>\r\n  ) : (\r\n    <div style={{ display: \"flex\", height: \"100vh\" }}>\r\n      {mulligan}\r\n      <div\r\n        style={{\r\n          width: \"20vw\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Infobox\r\n          align=\"flex-start\"\r\n          data={state.data[opponent]}\r\n          tiles={state.data.board.tiles}\r\n          player={opponent}\r\n        />\r\n        <Infobox\r\n          align=\"flex-end\"\r\n          data={state.data[user]}\r\n          tiles={state.data.board.tiles}\r\n          player={user}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"60vw\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Hand\r\n          data={state.data[opponent]}\r\n          owner={opponent}\r\n          height=\"36px\"\r\n          align=\"flex-start\"\r\n          user={user}\r\n          opponent={opponent}\r\n        />\r\n        <Board data={state.data.board} user={user} opponent={opponent} />\r\n        <Hand\r\n          data={state.data[user]}\r\n          owner={user}\r\n          height=\"166px\"\r\n          align=\"flex-end\"\r\n          user={user}\r\n          opponent={opponent}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"20vw\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Wheel\r\n          data={state.data.status}\r\n          user={user}\r\n          opponent={opponent}\r\n          id={id}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return output;\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\n\nconst app = () => {\n  return <Game />;\n};\n\nexport default app;\n","export default class EventProcessor {\r\n  constructor(state, data) {\r\n    this.state = state;\r\n    this.data = data;\r\n    this.eventLibrary = {\r\n      0: \"processEvent_0\",\r\n      5: \"processEvent_5\",\r\n      6: \"processEvent_6\",\r\n      7: \"processEvent_7\",\r\n      9: \"processEvent_9\",\r\n      11: \"processEvent_11\",\r\n      17: \"processEvent_17\",\r\n      23: \"processEvent_23\",\r\n      34: \"processEvent_34\",\r\n      35: \"processEvent_35\",\r\n    };\r\n    this.summonEffectLibrary = {\r\n      8: \"processSummonEffect_8\",\r\n      14: \"processSummonEffect_14\",\r\n      25: \"processSummonEffect_25\",\r\n      27: \"processSummonEffect_27\",\r\n      30: \"processSummonEffect_30\",\r\n    };\r\n    this.giftEffectLibrary = {\r\n      1: \"processGiftEffect_1\",\r\n      16: \"processGiftEffect_16\",\r\n      22: \"processGiftEffect_22\",\r\n      26: \"processGiftEffect_26\",\r\n      31: \"processGiftEffect_31\",\r\n    };\r\n    this.lastwordEffectLibrary = {\r\n      3: \"processLastwordEffect_3\",\r\n      24: \"processLastwordEffect_24\",\r\n    };\r\n    this.productionEffectLibrary = {\r\n      19: \"processProductionEffect_19\",\r\n      20: \"processProductionEffect_20\",\r\n    };\r\n  }\r\n\r\n  initEventLogic() {\r\n    const newHand = this.state.hand;\r\n    newHand[this.data.hand_id].selected = !newHand[this.data.hand_id].selected;\r\n    if (newHand[this.data.hand_id].selected) {\r\n      this[\r\n        this.eventLibrary[\r\n          this.state.data[this.data.player].cards[this.data.card_id].id\r\n        ]\r\n      ](\"init\");\r\n    } else {\r\n      this[\r\n        this.eventLibrary[\r\n          this.state.data[this.data.player].cards[this.data.card_id].id\r\n        ]\r\n      ](\"revert\");\r\n    }\r\n    Object.keys(newHand).forEach((key) => {\r\n      if (parseInt(key) !== this.data.hand_id) {\r\n        newHand[key].selectable = !newHand[key].selectable;\r\n      }\r\n    });\r\n    this.state.hand = newHand;\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        if (newHand[this.data.hand_id].selected) {\r\n          this.state.wheelbuttons[key].selectable = false;\r\n        } else {\r\n          this.state.wheelbuttons[key].selectable = true;\r\n        }\r\n      });\r\n    } else {\r\n      if (newHand[this.data.hand_id].selected) {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      } else {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n    }\r\n    return this.state;\r\n  }\r\n\r\n  handleEventLogic() {\r\n    const selected_card_id = this.getSelectedCard();\r\n    this[\r\n      this.eventLibrary[\r\n        this.state.data[this.data.player].cards[\r\n          this.state.data[this.data.player].hand[selected_card_id - 1]\r\n        ].id\r\n      ]\r\n    ](\"handle\");\r\n    const newHand = this.state.hand;\r\n    newHand[selected_card_id].selected = !newHand[selected_card_id].selected;\r\n    Object.keys(newHand).forEach((key) => {\r\n      newHand[key].selectable = true;\r\n    });\r\n    this.state.hand = newHand;\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        this.state.wheelbuttons[key].selectable = true;\r\n      });\r\n    } else {\r\n      this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n    }\r\n    this.state.currentAction = \"\";\r\n    this.state.data[this.data.player].faeria -=\r\n      this.state.data[this.data.player].cards[\r\n        this.state.data[this.data.player].hand[selected_card_id - 1]\r\n      ].faeria_cost;\r\n    this.state.data[this.data.player].hand.splice(selected_card_id - 1, 1);\r\n    return this.state;\r\n  }\r\n\r\n  processSummonEffect(occupant) {\r\n    this[this.summonEffectLibrary[occupant.id]]();\r\n    return this.state;\r\n  }\r\n\r\n  initGiftEffect(occupant) {\r\n    this[this.giftEffectLibrary[occupant.id]](\"init\", occupant);\r\n    return this.state;\r\n  }\r\n\r\n  processGiftEffect(selected_occupant_id) {\r\n    const occupant = this.state.data.board.tiles[selected_occupant_id].occupant;\r\n    this[this.giftEffectLibrary[occupant.id]](\"handle\", selected_occupant_id);\r\n    this.state.tiles[selected_occupant_id].occupantSelected = false;\r\n    this.state.currentAction = \"\";\r\n    Object.keys(this.state.hand).forEach((key) => {\r\n      this.state.hand[key].selectable = true;\r\n    });\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        this.state.wheelbuttons[key].selectable = true;\r\n      });\r\n    } else {\r\n      this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n    }\r\n    return this.state;\r\n  }\r\n\r\n  processLastwordEffect(occupant, tile) {\r\n    this[this.lastwordEffectLibrary[occupant.id]](occupant, tile);\r\n    return this.state;\r\n  }\r\n\r\n  processProductionEffect(occupant, tile) {\r\n    this[this.productionEffectLibrary[occupant.id]](tile);\r\n    return this.state;\r\n  }\r\n\r\n  //HELPERS\r\n\r\n  setSelectStateForOccupants(friendly, enemy) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(\r\n          this.state.data.board.tiles[key].occupant.player\r\n        ) &&\r\n        !this.state.data.board.tiles[key].occupant.divine\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectStateForConditionalOccupants(friendly, enemy, attack) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(\r\n          this.state.data.board.tiles[key].occupant.player\r\n        ) &&\r\n        !this.state.data.board.tiles[key].occupant.divine &&\r\n        this.state.data.board.tiles[key].occupant.attack <= attack\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getSelectedCard() {\r\n    return parseInt(\r\n      Object.keys(this.state.hand).filter(\r\n        (key) => this.state.hand[key].selected\r\n      )[0]\r\n    );\r\n  }\r\n\r\n  getRemoveOccupant() {\r\n    return {\r\n      player: \"\",\r\n      id: 0,\r\n      type: \"\",\r\n      faeria_cost: 0,\r\n      land_cost: {\r\n        forest: 0,\r\n        desert: 0,\r\n        mountain: 0,\r\n        lake: 0,\r\n        wild: 0,\r\n      },\r\n      attack: 0,\r\n      base_attack: 0,\r\n      health: 0,\r\n      base_health: 0,\r\n      movement: {\r\n        range: 1,\r\n        haste: true,\r\n        dash: 0,\r\n        special: {\r\n          aquatic: false,\r\n          flying: false,\r\n          jump: false,\r\n        },\r\n      },\r\n      taunt: false,\r\n      divine: false,\r\n      protection: false,\r\n      ranged: false,\r\n      hasMoved: false,\r\n      hasDashed: false,\r\n      hasAttacked: false,\r\n      effects: {\r\n        summon: false,\r\n        gift: false,\r\n        lastword: false,\r\n        production: false,\r\n      },\r\n      effectUsed: false,\r\n    };\r\n  }\r\n\r\n  setSelectStateForBuildTiles(landtype) {\r\n    const newTileState = this.state.tiles;\r\n    const anyAdjacent = (tile) =>\r\n      this.state.data.board.tiles[tile].owner === this.data.player;\r\n    const anyAdjacentFromOccupant = (tile) =>\r\n      this.state.data.board.tiles[tile].occupant.player === this.data.player &&\r\n      this.state.data.board.tiles[tile].type !== \"none\";\r\n    const god_key = Object.keys(this.state.gods).filter(\r\n      (god) => this.state.gods[god].player === this.data.player\r\n    );\r\n    Object.keys(newTileState).forEach((key) => {\r\n      let tileType = this.state.data.board.tiles[key].type;\r\n      let tileOwner = this.state.data.board.tiles[key].owner;\r\n      if (\r\n        tileType === \"none\" ||\r\n        (tileType === \"prairie\" && tileOwner === this.data.player)\r\n      ) {\r\n        if (\r\n          newTileState[key].adjacent.some(anyAdjacent) ||\r\n          newTileState[key].adjacent.some(anyAdjacentFromOccupant) ||\r\n          this.state.gods[god_key].adjacent.includes(key)\r\n        ) {\r\n          if (\r\n            !this.state.data.board.tiles[key].occupant.movement.special.aquatic\r\n          ) {\r\n            newTileState[key].selectable = true;\r\n          } else if (landtype === \"lake\") {\r\n            newTileState[key].selectable = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.state.tiles = newTileState;\r\n  }\r\n\r\n  setSelectStateForAllTiles(selectable) {\r\n    Object.keys(this.state.tiles).forEach((key) => {\r\n      this.state.tiles[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  setSelectStateForGods(selectable) {\r\n    Object.keys(this.state.gods).forEach((key) => {\r\n      this.state.gods[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  getGodTile() {\r\n    const god = {\r\n      player1: \"D6\",\r\n      player2: \"D0\",\r\n    };\r\n    return god[this.data.player];\r\n  }\r\n\r\n  getLandCostForType(card, type) {\r\n    return this.state.data[this.data.player].cards[card].land_cost[type];\r\n  }\r\n\r\n  getLandCostForOccupant(tile, type) {\r\n    return this.state.data.board.tiles[tile].occupant.land_cost[type];\r\n  }\r\n\r\n  handleCustomDrawLogic(index) {\r\n    if (index !== -1) {\r\n      if (this.state.data[this.data.player].hand.length < 10) {\r\n        this.state.data[this.data.player].hand.push(\r\n          this.state.data[this.data.player].deck.splice(index, 1)[0]\r\n        );\r\n      } else {\r\n        this.state.data[this.data.player].deck.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  getRandomTiles() {\r\n    const randomTiles = Object.keys(this.state.data.board.tiles);\r\n    for (let i = randomTiles.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [randomTiles[i], randomTiles[j]] = [randomTiles[j], randomTiles[i]];\r\n    }\r\n    return randomTiles;\r\n  }\r\n\r\n  getOccupantByID(id, params = {}) {\r\n    switch (id) {\r\n      case 10:\r\n        return {\r\n          player: this.data.player,\r\n          id: 10,\r\n          type: \"creature\",\r\n          faeria_cost: 1,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 1, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: true,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 12:\r\n        return {\r\n          player: params.player,\r\n          id: 12,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 2, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: true,\r\n          divine: true,\r\n          protection: true,\r\n          ranged: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 13:\r\n        return {\r\n          player: this.data.player,\r\n          id: 13,\r\n          type: \"creature\",\r\n          faeria_cost: 4,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 2, wild: 0 },\r\n          attack: 6,\r\n          base_attack: 6,\r\n          health: 4,\r\n          base_health: 4,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          hasMoved: params.hasMoved,\r\n          hasDashed: false,\r\n          hasAttacked: params.hasAttacked,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 21:\r\n        return {\r\n          player: params.player,\r\n          id: 21,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 0, mountain: 2, lake: 0, wild: 0 },\r\n          attack: 2,\r\n          base_attack: 2,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: true,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      case 28:\r\n        return {\r\n          player: this.data.player,\r\n          id: 28,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 1, desert: 0, mountain: 0, lake: 0, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 2,\r\n          base_health: 2,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: {\r\n            summon: false,\r\n            gift: false,\r\n            lastword: false,\r\n            production: false,\r\n          },\r\n          effectUsed: false,\r\n        };\r\n      default:\r\n        return {};\r\n    }\r\n  }\r\n\r\n  //EVENTS\r\n\r\n  //0 - Explore\r\n  processEvent_0(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, false);\r\n      this.setSelectStateForBuildTiles(\"prairie\");\r\n      this.state.currentAction = \"event_tile\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.data[this.data.player].faeria += 2;\r\n      this.state.data.board.tiles[this.data.tile_id].type = \"prairie\";\r\n      this.state.data.board.tiles[this.data.tile_id].owner = this.data.player;\r\n    }\r\n  }\r\n\r\n  //5 - Song of the Mercheek\r\n  processEvent_5(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n      target.health = Math.floor(target.health / 2);\r\n      target.attack =\r\n        Math.floor(target.attack / 2) >= 0 ? Math.floor(target.attack / 2) : 0;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant =\r\n        target.health > 0 ? target : this.getRemoveOccupant();\r\n      if (target.health <= 0 && target.effects.lastword) {\r\n        this.processLastwordEffect(target, this.data.tile_id);\r\n      }\r\n    }\r\n  }\r\n\r\n  //6 - Cheek in a bottle\r\n  processEvent_6(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 3; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex(\r\n            (card) => this.getLandCostForType(card, \"lake\") > 0\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //7 - Cheekie in a lamp\r\n  processEvent_7(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 2; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex(\r\n            (card) =>\r\n              this.state.data[this.data.player].cards[card].type === \"event\"\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //9 - Rain of Cheek\r\n  processEvent_9(process) {\r\n    if (process === \"handle\") {\r\n      let tileAvailable = true;\r\n      const availableTiles = this.getRandomTiles().filter(\r\n        (tile) => !this.state.data.board.tiles[tile].occupant.player\r\n      );\r\n      let count = 0;\r\n      while (tileAvailable) {\r\n        if (availableTiles.length !== 0) {\r\n          this.state.data.board.tiles[availableTiles.splice(0, 1)].occupant =\r\n            this.getOccupantByID(10);\r\n          if (++count === 6) {\r\n            tileAvailable = false;\r\n          }\r\n        } else {\r\n          tileAvailable = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //11 - Mooncheek\r\n  processEvent_11(process) {\r\n    if (process === \"handle\") {\r\n      Object.keys(this.state.data.board.tiles)\r\n        .filter(\r\n          (key) =>\r\n            this.state.data.board.tiles[key].occupant.player ===\r\n              this.data.player && this.getLandCostForOccupant(key, \"lake\") > 0\r\n        )\r\n        .forEach((tile) => {\r\n          this.state.data.board.tiles[tile].occupant = this.getOccupantByID(\r\n            13,\r\n            {\r\n              hasAttacked:\r\n                this.state.data.board.tiles[tile].occupant.hasAttacked,\r\n              hasMoved: this.state.data.board.tiles[tile].occupant.hasMoved,\r\n            }\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  //17 - Cheekblast\r\n  processEvent_17(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForGods(false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.setSelectStateForGods(true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForGods(false);\r\n      if (this.data.event === \"occupant\") {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 3;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0 ? target : this.getRemoveOccupant();\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      if (this.data.event === \"god\") {\r\n        this.state.data.board.gods[this.data.god].health -= 3;\r\n        if (this.state.data.board.gods[this.data.god].health <= 0) {\r\n          this.state.data.status.finished = true;\r\n          this.state.data.status.winner =\r\n            this.state.gods[this.data.god].player === this.data.opponent\r\n              ? this.data.player\r\n              : this.data.opponent;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //23 - Cheekruption\r\n  processEvent_23(process) {\r\n    if (process === \"handle\") {\r\n      Object.keys(this.state.data.board.tiles)\r\n        .filter(\r\n          (key) =>\r\n            this.state.data.board.tiles[key].occupant.player ===\r\n            this.data.opponent\r\n        )\r\n        .forEach((tile) => {\r\n          const target = this.state.data.board.tiles[tile].occupant;\r\n          if (target.protection) {\r\n            target.protection = false;\r\n          } else {\r\n            target.health -= 2;\r\n          }\r\n          this.state.data.board.tiles[tile].occupant =\r\n            target.health > 0 ? target : this.getRemoveOccupant();\r\n          if (target.health <= 0 && target.effects.lastword) {\r\n            this.processLastwordEffect(target, tile);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  //34 - Cheekshield Spirit\r\n  processEvent_34(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health += 4;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack += 2;\r\n    }\r\n  }\r\n\r\n  //35 - Cheek Dancers\r\n  processEvent_35(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health += 4;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.taunt = true;\r\n    }\r\n  }\r\n\r\n  //Creatures - Summon Effects\r\n\r\n  //8 - Cheek lord\r\n  processSummonEffect_8() {\r\n    const anyAdjacentOccupant = (tile) =>\r\n      this.state.data.board.tiles[tile].occupant.player === this.data.player &&\r\n      this.state.data.board.tiles[tile].occupant.land_cost.lake > 0;\r\n    if (\r\n      this.state.tiles[this.data.tile_id].adjacent.some(anyAdjacentOccupant)\r\n    ) {\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack++;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health++;\r\n    }\r\n  }\r\n\r\n  //14 - Cheekcano\r\n  processSummonEffect_14() {\r\n    Object.keys(this.state.data.board.tiles)\r\n      .filter(\r\n        (key) =>\r\n          this.state.data.board.tiles[key].occupant.player ===\r\n          this.data.opponent\r\n      )\r\n      .forEach((tile) => {\r\n        const target = this.state.data.board.tiles[tile].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 1;\r\n        }\r\n        this.state.data.board.tiles[tile].occupant =\r\n          target.health > 0 ? target : this.getRemoveOccupant();\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, tile);\r\n        }\r\n      });\r\n  }\r\n\r\n  //25 - Cheekflower\r\n  processSummonEffect_25() {\r\n    this.state.data[this.data.player].faeria += 2;\r\n  }\r\n\r\n  //27 - Mushroom Cheek\r\n  processSummonEffect_27() {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (tile) =>\r\n        !this.state.data.board.tiles[tile].occupant.player &&\r\n        this.state.tiles[this.data.tile_id].adjacent.includes(tile) &&\r\n        this.state.data.board.tiles[tile].type !== \"none\"\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles.splice(0, 1)].occupant =\r\n        this.getOccupantByID(28);\r\n    }\r\n  }\r\n\r\n  //30 - Cheekworld Tree\r\n  processSummonEffect_30() {\r\n    Object.keys(this.state.data.board.tiles)\r\n      .filter(\r\n        (key) =>\r\n          this.state.data.board.tiles[key].occupant.player ===\r\n            this.data.player &&\r\n          this.state.data.board.tiles[key].occupant.land_cost.forest > 0 &&\r\n          key !== this.data.tile_id\r\n      )\r\n      .forEach((tile) => {\r\n        this.state.data.board.tiles[tile].occupant.health += 9;\r\n      });\r\n  }\r\n\r\n  //Creatures - Lastword Effects\r\n\r\n  //3 - Clamcheek\r\n  processLastwordEffect_3(occupant, tile) {\r\n    this.state.data.board.tiles[tile].occupant = this.getOccupantByID(12, {\r\n      player: occupant.player,\r\n    });\r\n  }\r\n\r\n  //24 - Suncheek\r\n  processLastwordEffect_24(occupant, tile) {\r\n    this.state.tiles[tile].adjacent.forEach((adjTile) => {\r\n      if (\r\n        this.state.data.board.tiles[adjTile].occupant.player !==\r\n          occupant.player &&\r\n        this.state.data.board.tiles[adjTile].occupant.player\r\n      ) {\r\n        const target = this.state.data.board.tiles[adjTile].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 5;\r\n        }\r\n        this.state.data.board.tiles[adjTile].occupant =\r\n          target.health > 0 ? target : this.getRemoveOccupant();\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, adjTile);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  //Creatures - Gift Effects\r\n\r\n  //1 - Mercheek\r\n  processGiftEffect_1(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForConditionalOccupants(false, true, 2);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.player =\r\n          this.data.player;\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.hasMoved = true;\r\n        this.state.data.board.tiles[\r\n          this.data.tile_id\r\n        ].occupant.hasAttacked = true;\r\n      }\r\n      this.setSelectStateForOccupants(true, false);\r\n    }\r\n  }\r\n\r\n  //16 - Cheekflame\r\n  processGiftEffect_16(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 1;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0 ? target : this.getRemoveOccupant();\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      this.setSelectStateForOccupants(true, false);\r\n    }\r\n  }\r\n\r\n  //22 - Ghostcheek Alchemist\r\n  processGiftEffect_22(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          this.getOccupantByID(21, {\r\n            player: this.data.opponent,\r\n          });\r\n      }\r\n      this.setSelectStateForOccupants(true, false);\r\n    }\r\n  }\r\n\r\n  //26 - Cavecheek dweller\r\n  processGiftEffect_26(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, true);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n        if (target.protection) {\r\n          target.protection = false;\r\n        } else {\r\n          target.health -= 2;\r\n        }\r\n        this.state.data.board.tiles[this.data.tile_id].occupant =\r\n          target.health > 0 ? target : this.getRemoveOccupant();\r\n        if (target.health <= 0 && target.effects.lastword) {\r\n          this.processLastwordEffect(target, this.data.tile_id);\r\n        }\r\n      }\r\n      this.setSelectStateForOccupants(true, false);\r\n    }\r\n  }\r\n\r\n  //31 - Cheek Shaman\r\n  processGiftEffect_31(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health += 4;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack += 2;\r\n      this.setSelectStateForOccupants(true, false);\r\n    }\r\n  }\r\n\r\n  //Creatures - Production Effects\r\n\r\n  //19 - Baby Cheekdevil\r\n  processProductionEffect_19(tile) {\r\n    this.state.data.board.tiles[tile].occupant.attack += 1;\r\n    this.state.data.board.tiles[tile].occupant.health += 1;\r\n  }\r\n\r\n  //20 - Ghostcheek Tower\r\n  processProductionEffect_20(tile) {\r\n    const availableTiles = this.getRandomTiles().filter(\r\n      (tile) => !this.state.data.board.tiles[tile].occupant.player\r\n    );\r\n    if (availableTiles.length !== 0) {\r\n      this.state.data.board.tiles[availableTiles.splice(0, 1)].occupant =\r\n        this.getOccupantByID(21, {\r\n          player: this.state.data.board.tiles[tile].occupant.player,\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { initStore } from \"./store\";\r\nimport EventProcessor from \"./event-processor\";\r\nimport axios from \"axios\";\r\n\r\nconst configureStore = (loadStore) => {\r\n  const actions = {\r\n    SET_DATA: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState = data;\r\n      return updatedState;\r\n    },\r\n    SHUFFLE_DECK: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const shuffledDeck = [];\r\n      for (let i = 0; i < currentState.data[data.player].deck.length; i++) {\r\n        let random = Math.floor(\r\n          Math.random() * updatedState.data[data.player].deck.length\r\n        );\r\n        shuffledDeck.push(updatedState.data[data.player].deck[random]);\r\n        updatedState.data[data.player].deck.splice(random, 1);\r\n      }\r\n      updatedState.data[data.player].deck = shuffledDeck;\r\n      updatedState.data[data.player].shuffle = true;\r\n      const newState = JSON.parse(JSON.stringify(updatedState));\r\n      const getdata = new FormData();\r\n      getdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/getState.php\",\r\n          getdata\r\n        )\r\n        .then((res) => {\r\n          const prevState = JSON.parse(res.data);\r\n          newState.data[data.opponent] = prevState.data[data.opponent];\r\n          const postdata = new FormData();\r\n          postdata.append(\"react_state\", JSON.stringify(newState));\r\n          postdata.append(\"id\", data.id);\r\n          axios\r\n            .post(\r\n              \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n              postdata\r\n            )\r\n            .catch((error) => {\r\n              console.log(\"Network Error\", error.message);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    CONFIRM_MULLIGAN: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState = data;\r\n      return updatedState;\r\n    },\r\n    START_GAME: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n\r\n      updatedState.data.status.turn = 1;\r\n      updatedState.data[data.player].wheel_used = false;\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_LAND: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newWheelState = updatedState.wheelbuttons;\r\n      newWheelState[data.wheelbutton_id].selected =\r\n        !newWheelState[data.wheelbutton_id].selected;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(newWheelState).forEach((key) => {\r\n          if (key !== data.wheelbutton_id) {\r\n            newWheelState[key].selectable = !newWheelState[key].selectable;\r\n          }\r\n        });\r\n      }\r\n      if (newWheelState[data.wheelbutton_id].selected) {\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].occupantSelectable = false;\r\n        });\r\n      } else {\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = true;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n      }\r\n      updatedState.wheelbuttons = newWheelState;\r\n      const newTileState = updatedState.tiles;\r\n      const anyAdjacent = (tile) =>\r\n        updatedState.data.board.tiles[tile].owner === data.player;\r\n      const anyAdjacentFromOccupant = (tile) =>\r\n        updatedState.data.board.tiles[tile].occupant.player === data.player &&\r\n        updatedState.data.board.tiles[tile].type !== \"none\";\r\n      const god_key = Object.keys(updatedState.gods).filter(\r\n        (god) => updatedState.gods[god].player === data.player\r\n      );\r\n      if (updatedState.wheelbuttons[data.wheelbutton_id].selected) {\r\n        Object.keys(newTileState).forEach((key) => {\r\n          let tileType = updatedState.data.board.tiles[key].type;\r\n          let tileOwner = updatedState.data.board.tiles[key].owner;\r\n          if (\r\n            tileType === \"none\" ||\r\n            (tileType === \"prairie\" && tileOwner === data.player)\r\n          ) {\r\n            if (\r\n              newTileState[key].adjacent.some(anyAdjacent) ||\r\n              newTileState[key].adjacent.some(anyAdjacentFromOccupant) ||\r\n              updatedState.gods[god_key].adjacent.includes(key)\r\n            ) {\r\n              if (\r\n                !updatedState.data.board.tiles[key].occupant.movement.special\r\n                  .aquatic\r\n              ) {\r\n                newTileState[key].selectable = true;\r\n              } else if (\r\n                updatedState.wheelbuttons[data.wheelbutton_id].action === \"lake\"\r\n              ) {\r\n                newTileState[key].selectable = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        Object.keys(newTileState).forEach((key) => {\r\n          newTileState[key].selectable = false;\r\n        });\r\n      }\r\n      updatedState.tiles = newTileState;\r\n      return updatedState;\r\n    },\r\n    DRAW_CARD: (currentState, player) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const god = {\r\n        player1: \"D6\",\r\n        player2: \"D0\",\r\n      };\r\n      if (updatedState.data[player].deck.length > 0) {\r\n        if (updatedState.data[player].hand.length < 9) {\r\n          updatedState.data[player].hand.push(\r\n            updatedState.data[player].deck.splice(0, 1)[0]\r\n          );\r\n        } else {\r\n          updatedState.data[player].deck.splice(0, 1);\r\n        }\r\n      } else {\r\n        updatedState.data.board.gods[god[player]].health -= ++updatedState.data[\r\n          player\r\n        ].health_dmg;\r\n      }\r\n      updatedState.data[player].wheel_used = true;\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PLUS_FAERIA: (currentState, player) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data[player].faeria++;\r\n      updatedState.data[player].wheel_used = true;\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    BUILD_TILE: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      let type = \"none\";\r\n      Object.values(updatedState.wheelbuttons).forEach((wheelbutton) => {\r\n        if (wheelbutton.selected) {\r\n          type = wheelbutton.action;\r\n        }\r\n      });\r\n      updatedState.data.board.tiles[data.tile_id].type = type;\r\n\r\n      // Cheekbloom\r\n      if (type === \"forest\") {\r\n        Object.keys(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (updatedState.data.board.tiles[tile].occupant.id === 33) {\r\n            updatedState.data.board.tiles[tile].occupant.health += 1;\r\n            updatedState.data.board.tiles[tile].occupant.attack += 1;\r\n          }\r\n        });\r\n      }\r\n      // Cheekbloom\r\n\r\n      updatedState.data.board.tiles[data.tile_id].owner = data.player;\r\n      const wheelbutton_id = Object.keys(updatedState.wheelbuttons).filter(\r\n        (key) => updatedState.wheelbuttons[key].selected\r\n      );\r\n      updatedState.wheelbuttons[wheelbutton_id].selected = false;\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      if (type === \"prairie\") {\r\n        updatedState.data[data.player].wheel_neutral_counter += 1;\r\n      }\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n        updatedState.data[data.player].wheel_used = true;\r\n        updatedState.data[data.player].wheel_neutral_counter = 0;\r\n      }\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_CARD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newHand = updatedState.hand;\r\n      newHand[data.hand_id].selected = !newHand[data.hand_id].selected;\r\n      Object.keys(newHand).forEach((key) => {\r\n        if (parseInt(key) !== data.hand_id) {\r\n          newHand[key].selectable = !newHand[key].selectable;\r\n        }\r\n      });\r\n      updatedState.hand = newHand;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          if (newHand[data.hand_id].selected) {\r\n            updatedState.wheelbuttons[key].selectable = false;\r\n          } else {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          }\r\n        });\r\n      } else {\r\n        if (newHand[data.hand_id].selected) {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n      }\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        if (newHand[data.hand_id].selected) {\r\n          updatedState.tiles[key].occupantSelectable = false;\r\n        } else {\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        }\r\n      });\r\n      const getLands = () => {\r\n        let lands = { forest: 0, lake: 0, mountain: 0, desert: 0 };\r\n        Object.values(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (tile.owner === data.player && tile.type !== \"prairie\") {\r\n            lands[tile.type] += 1;\r\n          }\r\n        });\r\n        return lands;\r\n      };\r\n      const lands = getLands();\r\n      const getLandTypes = () => {\r\n        return Object.keys(\r\n          updatedState.data[data.player].cards[data.card_id].land_cost\r\n        ).filter(\r\n          (key) =>\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n              0 && key !== \"wild\"\r\n        );\r\n      };\r\n      const landtypes = getLandTypes();\r\n      const requirementsMet = (tile) => {\r\n        const canSpawnAdjacentToFriendliesArray = {\r\n          8: \"lake\", //Cheek lord\r\n        };\r\n        const canSpawnAdjacentToFriendlies = (adjTile) => {\r\n          return (\r\n            updatedState.data.board.tiles[adjTile].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[adjTile].occupant.land_cost[\r\n              canSpawnAdjacentToFriendliesArray[\r\n                updatedState.data[data.player].cards[data.card_id].id\r\n              ]\r\n            ] > 0\r\n          );\r\n        };\r\n        if (\r\n          Object.keys(canSpawnAdjacentToFriendliesArray).includes(\r\n            String(updatedState.data[data.player].cards[data.card_id].id)\r\n          )\r\n        ) {\r\n          if (\r\n            !updatedState.tiles[tile].adjacent.some(\r\n              canSpawnAdjacentToFriendlies\r\n            ) &&\r\n            (!landtypes.includes(updatedState.data.board.tiles[tile].type) ||\r\n              updatedState.data.board.tiles[tile].owner !== data.player)\r\n          ) {\r\n            return false;\r\n          }\r\n          if (\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .aquatic &&\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .flying\r\n          ) {\r\n            if (updatedState.data.board.tiles[tile].type === \"none\") {\r\n              return false;\r\n            }\r\n          }\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .aquatic &&\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .flying\r\n          ) {\r\n            if (\r\n              updatedState.data.board.tiles[tile].type !== \"none\" &&\r\n              updatedState.data.board.tiles[tile].type !== \"lake\"\r\n            ) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          if (updatedState.data.board.tiles[tile].owner !== data.player) {\r\n            return false;\r\n          }\r\n          if (!landtypes.includes(updatedState.data.board.tiles[tile].type)) {\r\n            return false;\r\n          }\r\n        }\r\n        if (updatedState.data.board.tiles[tile].occupant.player) {\r\n          return false;\r\n        }\r\n        let valid = true;\r\n        Object.keys(\r\n          updatedState.data[data.player].cards[data.card_id].land_cost\r\n        ).forEach((key) => {\r\n          if (key !== \"wild\") {\r\n            if (\r\n              updatedState.data[data.player].cards[data.card_id].land_cost[\r\n                key\r\n              ] > lands[key]\r\n            ) {\r\n              valid = false;\r\n            }\r\n          } else {\r\n            if (\r\n              updatedState.data[data.player].cards[data.card_id].land_cost[\r\n                key\r\n              ] >\r\n              Object.values(lands).reduce(\r\n                (sum, currentValue) => sum + currentValue\r\n              )\r\n            ) {\r\n              valid = false;\r\n            }\r\n          }\r\n        });\r\n        return valid;\r\n      };\r\n      if (newHand[data.hand_id].selected) {\r\n        updatedState.currentAction = \"summon_creature\";\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          if (requirementsMet(key)) {\r\n            updatedState.tiles[key].selectable = true;\r\n          }\r\n        });\r\n      } else {\r\n        updatedState.currentAction = \"\";\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n        });\r\n      }\r\n      return updatedState;\r\n    },\r\n    SELECT_EVENT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const getLands = () => {\r\n        let lands = { forest: 0, lake: 0, mountain: 0, desert: 0 };\r\n        Object.values(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (tile.owner === data.player && tile.type !== \"prairie\") {\r\n            lands[tile.type] += 1;\r\n          }\r\n        });\r\n        return lands;\r\n      };\r\n      const lands = getLands();\r\n      let runLogic = true;\r\n      Object.keys(\r\n        updatedState.data[data.player].cards[data.card_id].land_cost\r\n      ).forEach((key) => {\r\n        if (key !== \"wild\") {\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n            lands[key]\r\n          ) {\r\n            runLogic = false;\r\n          }\r\n        } else {\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n            Object.values(lands).reduce(\r\n              (sum, currentValue) => sum + currentValue\r\n            )\r\n          ) {\r\n            runLogic = false;\r\n          }\r\n        }\r\n      });\r\n      if (runLogic) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        if (updatedState.data[data.player].cards[data.card_id].effects.target) {\r\n          updatedState = EP.initEventLogic();\r\n        } else {\r\n          updatedState.hand[data.hand_id].selected =\r\n            !updatedState.hand[data.hand_id].selected;\r\n          updatedState = EP.handleEventLogic();\r\n          const formdata = new FormData();\r\n          formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n          formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n          axios\r\n            .post(\r\n              \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n              formdata\r\n            )\r\n            .catch((error) => {\r\n              console.log(\"Network Error\", error.message);\r\n            });\r\n        }\r\n      }\r\n      return updatedState;\r\n    },\r\n    PROCESS_EVENT_OCCUPANT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.handleEventLogic();\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PROCESS_EVENT_TILE: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.handleEventLogic();\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PROCESS_GIFT_OCCUPANT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.processGiftEffect(selected_occupant_id);\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SUMMON_CREATURE: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newOccupant = updatedState.data.board.tiles[data.tile_id].occupant;\r\n      newOccupant.player = data.player;\r\n      const selected_card_id = parseInt(\r\n        Object.keys(updatedState.hand).filter(\r\n          (key) => updatedState.hand[key].selected\r\n        )[0]\r\n      );\r\n      const card =\r\n        updatedState.data[data.player].cards[\r\n          updatedState.data[data.player].hand[selected_card_id - 1]\r\n        ];\r\n      newOccupant.id = card.id;\r\n      newOccupant.type = card.type;\r\n      newOccupant.faeria_cost = card.faeria_cost;\r\n      newOccupant.land_cost = card.land_cost;\r\n      newOccupant.attack = card.attack;\r\n      newOccupant.base_attack = card.base_attack;\r\n      newOccupant.health = card.health;\r\n      newOccupant.base_health = card.base_health;\r\n      newOccupant.movement = card.movement;\r\n      newOccupant.taunt = card.taunt;\r\n      newOccupant.divine = card.divine;\r\n      newOccupant.protection = card.protection;\r\n      newOccupant.ranged = card.ranged;\r\n      newOccupant.hasDashed = false;\r\n      newOccupant.effects = card.effects;\r\n      if (!card.movement.haste) {\r\n        newOccupant.hasMoved = true;\r\n        newOccupant.hasAttacked = true;\r\n      } else {\r\n        newOccupant.hasMoved = false;\r\n        newOccupant.hasAttacked = false;\r\n        if (card.movement.dash === 0) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      updatedState.data.board.tiles[data.tile_id].occupant = newOccupant;\r\n      const newHand = updatedState.hand;\r\n      newHand[selected_card_id].selected = !newHand[selected_card_id].selected;\r\n      if (newOccupant.effects.summon) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        EP.processSummonEffect(\r\n          updatedState.data.board.tiles[data.tile_id].occupant\r\n        );\r\n      }\r\n      if (newOccupant.effects.gift) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        newHand[selected_card_id].selectable = false;\r\n        EP.initGiftEffect(updatedState.data.board.tiles[data.tile_id].occupant);\r\n      } else {\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n        Object.keys(newHand).forEach((key) => {\r\n          newHand[key].selectable = true;\r\n        });\r\n        if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n          Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          });\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n        updatedState.currentAction = \"\";\r\n      }\r\n      updatedState.hand = newHand;\r\n      updatedState.data[data.player].faeria -=\r\n        updatedState.data[data.player].cards[\r\n          updatedState.data[data.player].hand[selected_card_id - 1]\r\n        ].faeria_cost;\r\n      updatedState.data[data.player].hand.splice(selected_card_id - 1, 1);\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.tiles[data.tile_id].occupantSelected =\r\n        !updatedState.tiles[data.tile_id].occupantSelected;\r\n      const anyTaunt = (taunt_tile) =>\r\n        updatedState.data.board.tiles[taunt_tile].occupant.taunt &&\r\n        updatedState.data.board.tiles[taunt_tile].occupant.player ===\r\n          data.opponent;\r\n      const isTaunted =\r\n        updatedState.tiles[data.tile_id].adjacent.some(anyTaunt);\r\n      const jumpTiles = [];\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n          .jump\r\n      ) {\r\n        updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n          if (!jumpTiles.includes(tile) && tile !== data.tile_id) {\r\n            jumpTiles.push(tile);\r\n          }\r\n          updatedState.tiles[tile].adjacent.forEach((adjacent_tile) => {\r\n            if (\r\n              !jumpTiles.includes(adjacent_tile) &&\r\n              adjacent_tile !== data.tile_id\r\n            ) {\r\n              jumpTiles.push(adjacent_tile);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      const movementRange =\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n          0 && !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n          ? updatedState.data.board.tiles[data.tile_id].occupant.movement.dash\r\n          : updatedState.data.board.tiles[data.tile_id].occupant.movement.range;\r\n      const rangeTiles = [];\r\n      const rangeTilesHelper = {};\r\n      for (let i = 1; i <= movementRange; i++) {\r\n        if (i === 1) {\r\n          rangeTilesHelper[i] = {};\r\n          updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n            let valid = true;\r\n            if (\r\n              updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.aquatic &&\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.flying\r\n            ) {\r\n              if (\r\n                updatedState.data.board.tiles[tile].type !== \"lake\" &&\r\n                updatedState.data.board.tiles[tile].type !== \"none\"\r\n              ) {\r\n                valid = false;\r\n              }\r\n            }\r\n            if (\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.aquatic &&\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.flying\r\n            ) {\r\n              if (updatedState.data.board.tiles[tile].type === \"none\") {\r\n                valid = false;\r\n              }\r\n            }\r\n            if (valid && !updatedState.data.board.tiles[tile].occupant.player) {\r\n              rangeTiles.push(tile);\r\n              rangeTilesHelper[i][tile] = {\r\n                prevTile: data.tile_id,\r\n                currentTile: tile,\r\n              };\r\n            }\r\n          });\r\n        } else {\r\n          rangeTilesHelper[i] = {};\r\n          Object.values(rangeTilesHelper[i - 1]).forEach((rangetile) => {\r\n            updatedState.tiles[rangetile.currentTile].adjacent\r\n              .filter(\r\n                (rangetile_key) =>\r\n                  !updatedState.tiles[rangetile.prevTile].adjacent.includes(\r\n                    rangetile_key\r\n                  ) && rangetile_key !== rangetile.prevTile\r\n              )\r\n              .forEach((rangetile_adj) => {\r\n                let valid = true;\r\n                updatedState.tiles[rangetile_adj].adjacent\r\n                  .filter(\r\n                    (rangetile_adj_key) =>\r\n                      rangetile_adj_key !== rangetile.currentTile\r\n                  )\r\n                  .forEach((rangetile_adj_adj) => {\r\n                    if (\r\n                      updatedState.tiles[rangetile_adj_adj].adjacent.includes(\r\n                        rangetile.prevTile\r\n                      )\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  });\r\n                if (updatedState.tiles[rangetile_adj].adjacentNonTile) {\r\n                  if (\r\n                    updatedState.tiles[rangetile_adj].adjacentNonTile.includes(\r\n                      \"D\"\r\n                    )\r\n                  ) {\r\n                    if (\r\n                      updatedState.gods[\r\n                        updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                      ].adjacent.includes(rangetile.prevTile)\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  } else {\r\n                    if (\r\n                      updatedState.data.board.wells[\r\n                        updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                      ].adjacent.includes(rangetile.prevTile)\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  }\r\n                }\r\n                if (\r\n                  updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.aquatic &&\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.flying\r\n                ) {\r\n                  if (\r\n                    updatedState.data.board.tiles[rangetile_adj].type !==\r\n                      \"lake\" &&\r\n                    updatedState.data.board.tiles[rangetile_adj].type !== \"none\"\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n                if (\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.aquatic &&\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.flying\r\n                ) {\r\n                  if (\r\n                    updatedState.data.board.tiles[rangetile_adj].type === \"none\"\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n                if (\r\n                  valid &&\r\n                  !rangeTiles.includes(rangetile_adj) &&\r\n                  !updatedState.data.board.tiles[rangetile_adj].occupant.player\r\n                ) {\r\n                  rangeTiles.push(rangetile_adj);\r\n                  rangeTilesHelper[i][rangetile_adj] = {\r\n                    prevTile: rangetile.currentTile,\r\n                    currentTile: rangetile_adj,\r\n                  };\r\n                }\r\n              });\r\n          });\r\n        }\r\n      }\r\n      const rangeAttack = [];\r\n      const rangeAttackHelper = {};\r\n      if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n        for (let i = 1; i <= 5; i++) {\r\n          if (i === 1) {\r\n            rangeAttackHelper[i] = {};\r\n            updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n              if (!updatedState.data.board.tiles[tile].occupant.player) {\r\n                rangeAttack.push(tile);\r\n                rangeAttackHelper[i][tile] = {\r\n                  prevTile: data.tile_id,\r\n                  currentTile: tile,\r\n                };\r\n              }\r\n            });\r\n          } else {\r\n            rangeAttackHelper[i] = {};\r\n            Object.values(rangeAttackHelper[i - 1]).forEach((rangetile) => {\r\n              updatedState.tiles[rangetile.currentTile].adjacent\r\n                .filter(\r\n                  (rangetile_key) =>\r\n                    !updatedState.tiles[rangetile.prevTile].adjacent.includes(\r\n                      rangetile_key\r\n                    ) && rangetile_key !== rangetile.prevTile\r\n                )\r\n                .forEach((rangetile_adj) => {\r\n                  let valid = true;\r\n                  updatedState.tiles[rangetile_adj].adjacent\r\n                    .filter(\r\n                      (rangetile_adj_key) =>\r\n                        rangetile_adj_key !== rangetile.currentTile\r\n                    )\r\n                    .forEach((rangetile_adj_adj) => {\r\n                      if (\r\n                        updatedState.tiles[rangetile_adj_adj].adjacent.includes(\r\n                          rangetile.prevTile\r\n                        )\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    });\r\n                  if (updatedState.tiles[rangetile_adj].adjacentNonTile) {\r\n                    if (\r\n                      updatedState.tiles[\r\n                        rangetile_adj\r\n                      ].adjacentNonTile.includes(\"D\")\r\n                    ) {\r\n                      if (\r\n                        updatedState.gods[\r\n                          updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                        ].adjacent.includes(rangetile.prevTile)\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    } else {\r\n                      if (\r\n                        updatedState.data.board.wells[\r\n                          updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                        ].adjacent.includes(rangetile.prevTile)\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    }\r\n                  }\r\n                  if (\r\n                    valid &&\r\n                    !rangeAttack.includes(rangetile_adj) &&\r\n                    !updatedState.data.board.tiles[rangetile.currentTile]\r\n                      .occupant.player\r\n                  ) {\r\n                    rangeAttack.push(rangetile_adj);\r\n                    rangeAttackHelper[i][rangetile_adj] = {\r\n                      prevTile: rangetile.currentTile,\r\n                      currentTile: rangetile_adj,\r\n                    };\r\n                  }\r\n                });\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const moveRequirementsMet = (tile_id) => {\r\n        if (updatedState.data.board.tiles[tile_id].occupant.player) {\r\n          return false;\r\n        }\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n            0 &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n        ) {\r\n          if (!rangeTiles.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (updatedState.data.board.tiles[data.tile_id].occupant.hasMoved) {\r\n            return false;\r\n          }\r\n          if (isTaunted) return false;\r\n          if (\r\n            updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n              .special.jump\r\n          ) {\r\n            if (!jumpTiles.includes(tile_id) && !rangeTiles.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          } else {\r\n            if (!rangeTiles.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        if (\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .aquatic &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .flying\r\n        ) {\r\n          if (updatedState.data.board.tiles[tile_id].type === \"none\") {\r\n            return false;\r\n          }\r\n        }\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .aquatic &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .flying\r\n        ) {\r\n          if (\r\n            updatedState.data.board.tiles[tile_id].type !== \"lake\" &&\r\n            updatedState.data.board.tiles[tile_id].type !== \"none\"\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      };\r\n      const attackRequirementsMet = (tile_id) => {\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n          if (!rangeAttack.includes(tile_id)) {\r\n            if (!updatedState.tiles[data.tile_id].adjacent.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          if (!updatedState.tiles[data.tile_id].adjacent.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        }\r\n        if (\r\n          !updatedState.data.board.tiles[tile_id].occupant.player ||\r\n          updatedState.data.board.tiles[tile_id].occupant.player === data.player\r\n        ) {\r\n          return false;\r\n        }\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.hasAttacked) {\r\n          return false;\r\n        }\r\n        return true;\r\n      };\r\n      if (updatedState.tiles[data.tile_id].occupantSelected) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          if (moveRequirementsMet(key)) {\r\n            updatedState.tiles[key].selectable = true;\r\n          }\r\n          if (attackRequirementsMet(key)) {\r\n            updatedState.tiles[key].occupantSelectable = true;\r\n          } else if (data.tile_id !== key) {\r\n            updatedState.tiles[key].occupantSelectable = false;\r\n          }\r\n        });\r\n        updatedState.currentAction = \"occupant_selected\";\r\n      } else {\r\n        if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n          Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          });\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = true;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasDashed = true;\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.haste\r\n        ) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n        updatedState.currentAction = \"\";\r\n      }\r\n      const god = data.player === \"player1\" ? \"D0\" : \"D6\";\r\n      const rangeAttackArrayHelper =\r\n        data.player === \"player1\"\r\n          ? [\"B1\", \"F1\", \"D2\", \"D3\", \"D4\", \"D5\"]\r\n          : [\"B5\", \"F5\", \"D1\", \"D2\", \"D3\", \"D4\"];\r\n      if (updatedState.tiles[data.tile_id].occupantSelected) {\r\n        if (!updatedState.data.board.tiles[data.tile_id].occupant.hasAttacked) {\r\n          if (\r\n            updatedState.data.board.tiles[data.tile_id].occupant.ranged &&\r\n            !updatedState.gods[god].adjacent.includes(data.tile_id)\r\n          ) {\r\n            const rangeAttackArray = rangeAttack.filter((attacktile) =>\r\n              updatedState.gods[god].adjacent.includes(attacktile)\r\n            );\r\n            if (\r\n              rangeAttackArray.length === 1 &&\r\n              !updatedState.data.board.tiles[rangeAttackArray[0]].occupant\r\n                .player &&\r\n              rangeAttackArrayHelper.includes(data.tile_id)\r\n            ) {\r\n              updatedState.gods[god].selectable = true;\r\n            }\r\n          } else {\r\n            if (updatedState.gods[god].adjacent.includes(data.tile_id)) {\r\n              updatedState.gods[god].selectable = true;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        updatedState.gods[god].selectable = false;\r\n      }\r\n      return updatedState;\r\n    },\r\n    MOVE_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_tile_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      updatedState.data.board.tiles[data.tile_id].occupant =\r\n        updatedState.data.board.tiles[selected_tile_id].occupant;\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: {\r\n          summon: false,\r\n          gift: false,\r\n          lastword: false,\r\n          production: false,\r\n        },\r\n        effectUsed: false,\r\n      };\r\n      updatedState.data.board.tiles[selected_tile_id].occupant = removeOccupant;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_tile_id].occupantSelected = false;\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n          0 &&\r\n        !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n      ) {\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasDashed = true;\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.haste\r\n        ) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasMoved = true;\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n          updatedState.data.board.tiles[\r\n            data.tile_id\r\n          ].occupant.hasAttacked = true;\r\n        }\r\n        Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n          if (\r\n            updatedState.data.board.wells[key].adjacent.includes(\r\n              data.tile_id\r\n            ) &&\r\n            updatedState.data.board.wells[key].available\r\n          ) {\r\n            updatedState.data.board.wells[key].available = false;\r\n            updatedState.data.board.wells[key].collected = true;\r\n            updatedState.data[data.player].faeria += 1;\r\n          }\r\n        });\r\n      }\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n      updatedState.currentAction = \"\";\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    ATTACK_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const attacker =\r\n        updatedState.data.board.tiles[selected_occupant_id].occupant;\r\n      const defender = updatedState.data.board.tiles[data.tile_id].occupant;\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: {\r\n          summon: false,\r\n          gift: false,\r\n          lastword: false,\r\n          production: false,\r\n        },\r\n        effectUsed: false,\r\n      };\r\n      if (\r\n        updatedState.tiles[data.tile_id].adjacent.includes(selected_occupant_id)\r\n      ) {\r\n        attacker.health -= defender.attack;\r\n      }\r\n      if (defender.protection) {\r\n        defender.protection = false;\r\n      } else {\r\n        defender.health -= attacker.attack;\r\n      }\r\n      attacker.hasAttacked = true;\r\n      attacker.hasMoved = true;\r\n      attacker.hasDashed = true;\r\n      updatedState.data.board.tiles[selected_occupant_id].occupant =\r\n        attacker.health > 0 ? attacker : removeOccupant;\r\n      updatedState.data.board.tiles[data.tile_id].occupant =\r\n        defender.health > 0 ? defender : removeOccupant;\r\n      const EP = new EventProcessor(updatedState, data);\r\n      if (attacker.health <= 0 && attacker.effects.lastword) {\r\n        EP.processLastwordEffect(attacker, selected_occupant_id);\r\n      }\r\n      if (defender.health <= 0 && defender.effects.lastword) {\r\n        EP.processLastwordEffect(defender, data.tile_id);\r\n      }\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_occupant_id].occupantSelected = false;\r\n      updatedState.currentAction = \"\";\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    ATTACK_GOD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const attacker =\r\n        updatedState.data.board.tiles[selected_occupant_id].occupant;\r\n      updatedState.data.board.gods[data.god].health -= attacker.attack;\r\n      updatedState.data.board.gods[data.god].wasHit = true;\r\n      attacker.hasAttacked = true;\r\n      attacker.hasMoved = true;\r\n      updatedState.gods[data.god].selectable = false;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_occupant_id].occupantSelected = false;\r\n      updatedState.currentAction = \"\";\r\n      if (updatedState.data.board.gods[data.god].health <= 0) {\r\n        updatedState.data.status.finished = true;\r\n        updatedState.data.status.winner = data.player;\r\n      }\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    END_TURN: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data[data.opponent].wheel_used = false;\r\n      const god = {\r\n        player1: \"D6\",\r\n        player2: \"D0\",\r\n      };\r\n      if (updatedState.data.status.turn > 1) {\r\n        updatedState.data[data.opponent].faeria += 3;\r\n        if (updatedState.data[data.opponent].deck.length > 0) {\r\n          if (updatedState.data[data.opponent].hand.length < 9) {\r\n            updatedState.data[data.opponent].hand.push(\r\n              updatedState.data[data.opponent].deck.splice(0, 1)[0]\r\n            );\r\n          } else {\r\n            updatedState.data[data.opponent].deck.splice(0, 1);\r\n          }\r\n        } else {\r\n          updatedState.data.board.gods[god[data.opponent]].health -=\r\n            ++updatedState.data[data.opponent].health_dmg;\r\n          if (updatedState.data.board.gods[god[data.opponent]].health <= 0) {\r\n            updatedState.data.status.finished = true;\r\n            updatedState.data.status.winner = data.player;\r\n          }\r\n        }\r\n      }\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: {\r\n          summon: false,\r\n          gift: false,\r\n          lastword: false,\r\n          production: false,\r\n        },\r\n        effectUsed: false,\r\n      };\r\n      Object.keys(updatedState.data.board.tiles).forEach((key) => {\r\n        if (\r\n          (updatedState.data.board.tiles[key].occupant.movement.special\r\n            .aquatic &&\r\n            !updatedState.data.board.tiles[key].occupant.movement.special\r\n              .flying &&\r\n            updatedState.data.board.tiles[key].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[key].type !== \"lake\" &&\r\n            updatedState.data.board.tiles[key].type !== \"none\") ||\r\n          (!updatedState.data.board.tiles[key].occupant.movement.special\r\n            .aquatic &&\r\n            !updatedState.data.board.tiles[key].occupant.movement.special\r\n              .flying &&\r\n            updatedState.data.board.tiles[key].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[key].type === \"none\")\r\n        ) {\r\n          const occupant = updatedState.data.board.tiles[key].occupant;\r\n          updatedState.data.board.tiles[key].occupant = removeOccupant;\r\n          const EP = new EventProcessor(updatedState, data);\r\n          if (occupant.health <= 0 && occupant.effects.lastword) {\r\n            EP.processLastwordEffect(occupant, key);\r\n          }\r\n        } else {\r\n          updatedState.data.board.tiles[key].occupant.hasMoved = false;\r\n          updatedState.data.board.tiles[key].occupant.hasAttacked = false;\r\n        }\r\n\r\n        //Cheekshrooms\r\n        if (\r\n          updatedState.data.board.tiles[key].occupant.id === 28 &&\r\n          updatedState.data.status.current ===\r\n            updatedState.data.board.tiles[key].occupant.player\r\n        ) {\r\n          updatedState.tiles[key].adjacent.forEach((adjTile) => {\r\n            if (\r\n              updatedState.data.board.tiles[adjTile].occupant.player ===\r\n              data.opponent\r\n            ) {\r\n              let target = updatedState.data.board.tiles[adjTile].occupant;\r\n              if (target.protection) {\r\n                target.protection = false;\r\n              } else {\r\n                target.health -= 1;\r\n              }\r\n              updatedState.data.board.tiles[adjTile].occupant =\r\n                target.health > 0 ? target : removeOccupant;\r\n              const EP = new EventProcessor(updatedState, data);\r\n              if (target.health <= 0 && target.effects.lastword) {\r\n                EP.processLastwordEffect(target, adjTile);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        //Cheekshrooms\r\n      });\r\n\r\n      const anyAdjacent = (tile) =>\r\n        updatedState.data.board.tiles[tile].occupant.player === data.opponent;\r\n      Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n        if (updatedState.data.board.wells[key].adjacent.some(anyAdjacent)) {\r\n          updatedState.data.board.wells[key].available = false;\r\n          updatedState.data.board.wells[key].collected = true;\r\n          updatedState.data[data.opponent].faeria += 1;\r\n        } else {\r\n          updatedState.data.board.wells[key].available = true;\r\n          updatedState.data.board.wells[key].collected = false;\r\n        }\r\n      });\r\n\r\n      Object.keys(updatedState.data.board.tiles).forEach((key) => {\r\n        if (\r\n          updatedState.data.board.tiles[key].occupant.effects.production &&\r\n          updatedState.data.board.tiles[key].occupant.player === data.opponent\r\n        ) {\r\n          const EP = new EventProcessor(updatedState, data);\r\n          EP.processProductionEffect(\r\n            updatedState.data.board.tiles[key].occupant,\r\n            key\r\n          );\r\n        }\r\n      });\r\n\r\n      updatedState.data.status.turn += 1;\r\n      updatedState.data.status.current = data.opponent;\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      updatedState.currentAction = \"\";\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n\r\n      return updatedState;\r\n    },\r\n  };\r\n  initStore(actions, loadStore);\r\n};\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport configureStore from \"./hooks-store/global-store\";\nimport axios from \"axios\";\n\nlet loadStore = {};\nconst formdata = new FormData();\nformdata.append(\"id\", document.getElementById(\"game_id\").value);\naxios\n  .post(\"https://cheekia.loca.lt/faeria/Faeria/utils/getState.php\", formdata)\n  .then((res) => {\n    loadStore = JSON.parse(res.data);\n    configureStore(loadStore);\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"game\")\n    );\n  })\n  .catch((error) => {\n    console.log(\"Network Error\", error.message);\n  });\n"],"sourceRoot":""}