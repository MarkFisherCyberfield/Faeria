{"version":3,"sources":["hooks-store/store.js","assets/images/cards/images.js","assets/images/ui/icons.js","components/Game/Board/Tile/Occupant/Occupant.js","components/Game/Board/Tile/Tile.js","components/Game/Board/Well/Well.js","components/Game/Board/God/God.js","components/Game/Board/Board.js","components/Game/Hand/Card/Card.js","components/Game/Hand/Hand.js","assets/images/ui/images_ui.js","components/Game/Wheel/WheelButton/WheelButton.js","components/UI/EndTurnButton/EndTurnButton.js","components/Game/Wheel/Wheel.js","components/Game/Faeria/Faeria.js","components/Game/Deck/Deck.js","components/UI/Hexagon/Hexagon.js","components/UI/Infobox/Infobox.js","components/UI/MulliganModal/MulliganModal.js","components/Game/Game.js","App.js","hooks-store/event-processor.js","hooks-store/global-store.js","index.js"],"names":["globalState","listeners","actions","useStore","shouldListen","setState","useState","dispatch","actionIdentifier","payload","newState","listener","useEffect","push","filter","li","images","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","icons","aquatic_enemy","aquatic_enemyhover","aquatic_friendly","aquatic_friendlyhover","flying_enemy","flying_enemyhover","flying_friendly","flying_friendlyhover","jump_enemy","jump_enemyhover","jump_friendly","jump_friendlyhover","ranged_enemy","ranged_enemyhover","ranged_friendly","ranged_friendlyhover","scoot_enemy","scoot_enemyhover","scoot_friendly","scoot_friendlyhover","taunt_enemy","taunt_enemyhover","taunt_friendly","taunt_friendlyhover","Occupant","props","state","points_divine","x","y","join","occupantClass","data","board","tiles","tile","occupant","player","user","occupantSelectable","status","current","creatureClass","occupantSelected","iconClass","icon_taunt","taunt","rx","ry","width","height","fill","icon_ranged","ranged","icon_flying","movement","special","flying","icon_aquatic","aquatic","icon_jump","jump","icon_scoot","range","divine","points","className","protection","cx","cy","onClick","opponent","tile_id","currentAction","id","patternContentUnits","preserveAspectRatio","href","dy","attack","health","Tile","extraclass","selectable","tileclass","owner","type","hexSize","startPosX","startPosY","Math","sqrt","Fragment","Well","wellClass","collected","r","God","gods","god","textAnchor","stroke","strokeWidth","fontSize","Board","boardTilesMap","G","F","E","D","C","B","A","wellPositions","godPositions","Object","keys","map","column","i","Array","_","j","parity","columnNr","wells","indexOf","length","boardMaxHeight","style","justifyContent","display","Card","clickAction","mulligan","hand","index","cards","faeria_cost","faeria","hand_id","card_id","imgSrc","classname","alt","src","parseInt","Hand","cardClass","selected","alignSelf","align","images_ui","WheelButton","wheelbuttons","wheelbutton_id","EndTurnButton","btnText","btnClass","btnClassText","btnOnClick","Wheel","offsetX","offsetY","wheel","wheelOutput","wheel_used","strokeColor","fillColor","position","bottom","left","Faeria","Deck","border","deckcounter","handcounter","Hexagon","Infobox","landCount","lands","f","l","m","d","values","forEach","charAt","getLandCount","landCounter","info_landcounter","margin","info_faeria","info_player","textAlign","name","info","deck","MulliganModal","initialHand","setInitialHand","swapHandler","event","newHand","JSON","parse","stringify","target","slice","Game","document","getElementById","value","shuffle","timer","setTimeout","formdata","FormData","append","timestamp","Date","now","axios","post","then","res","clearTimeout","finished","winner","flexWrap","app","EventProcessor","this","eventLibrary","summonEffectLibrary","giftEffectLibrary","lastwordEffectLibrary","key","wheel_neutral_counter","selected_card_id","getSelectedCard","splice","selected_occupant_id","friendly","enemy","playerCheck","includes","land_cost","forest","desert","mountain","lake","wild","base_attack","base_health","haste","dash","hasMoved","hasDashed","hasAttacked","effects","summon","gift","lastword","effectUsed","landtype","newTileState","anyAdjacent","anyAdjacentFromOccupant","god_key","tileType","tileOwner","adjacent","some","player1","player2","card","randomTiles","floor","random","params","process","setSelectStateForOccupants","setSelectStateForAllTiles","setSelectStateForBuildTiles","getRemoveOccupant","processLastwordEffect","handleCustomDrawLogic","findIndex","getLandCostForType","tileAvailable","availableTiles","getRandomTiles","count","getOccupantByID","getLandCostForOccupant","setSelectStateForConditionalOccupants","configureStore","loadStore","userActions","initialState","SET_DATA","currentState","SHUFFLE_DECK","updatedState","shuffledDeck","getdata","prevState","postdata","CONFIRM_MULLIGAN","prevHand","cardsToReplace","replacePool","entries","prevDeck","deckLength","SELECT_LAND","newWheelState","action","DRAW_CARD","health_dmg","PLUS_FAERIA","BUILD_TILE","wheelbutton","SELECT_CARD","getLands","landtypes","canSpawnAdjacentToFriendliesArray","String","adjTile","reduce","sum","currentValue","requirementsMet","SELECT_EVENT","runLogic","EP","initEventLogic","handleEventLogic","PROCESS_EVENT_OCCUPANT","PROCESS_EVENT_TILE","PROCESS_GIFT_OCCUPANT","processGiftEffect","SUMMON_CREATURE","newOccupant","available","processSummonEffect","initGiftEffect","SELECT_OCCUPANT","isTaunted","taunt_tile","jumpTiles","adjacent_tile","movementRange","rangeTiles","rangeTilesHelper","valid","prevTile","currentTile","rangetile","rangetile_key","rangetile_adj","rangetile_adj_key","rangetile_adj_adj","adjacentNonTile","rangeAttack","rangeAttackHelper","moveRequirementsMet","attackRequirementsMet","rangeAttackArrayHelper","rangeAttackArray","attacktile","MOVE_OCCUPANT","selected_tile_id","ATTACK_OCCUPANT","attacker","defender","removeOccupant","ATTACK_GOD","wasHit","END_TURN","turn","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.d02dcb38.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nlet globalState = {};\r\nlet listeners = [];\r\nlet actions = {};\r\n\r\nexport const useStore = (shouldListen = true) => {\r\n  const setState = useState(globalState)[1];\r\n\r\n  const dispatch = (actionIdentifier, payload) => {\r\n    const newState = actions[actionIdentifier](globalState, payload);\r\n    globalState = { ...globalState, ...newState };\r\n\r\n    for (const listener of listeners) {\r\n      listener(globalState);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shouldListen) {\r\n      listeners.push(setState);\r\n    }\r\n\r\n    return () => {\r\n      if (shouldListen) {\r\n        listeners = listeners.filter((li) => li !== setState);\r\n      }\r\n    };\r\n  }, [setState, shouldListen]);\r\n\r\n  return [globalState, dispatch];\r\n};\r\n\r\nexport const initStore = (userActions, initialState) => {\r\n  if (initialState) {\r\n    globalState = { ...globalState, ...initialState };\r\n  }\r\n  actions = { ...actions, ...userActions };\r\n};\r\n","const images = {\r\n    'cardback': 'assets/images/cards/cardback.jpg',\r\n    0: 'assets/images/cards/cheeksplore.jpg',\r\n    1: 'assets/images/cards/mercheek.jpg',\r\n    2: 'assets/images/cards/dolphin_cheekrider.jpg',\r\n    3: 'assets/images/cards/clamcheek.jpg',\r\n    4: 'assets/images/cards/ninjacheek.jpg',\r\n    5: 'assets/images/cards/song_of_the_mercheek.jpg',\r\n    6: 'assets/images/cards/cheek_in_a_bottle.jpg',\r\n    7: 'assets/images/cards/cheekie_in_a_lamp.jpg',\r\n    8: 'assets/images/cards/cheeklord.jpg',\r\n    9: 'assets/images/cards/rain_of_cheek.jpg',\r\n    10: 'assets/images/cards/cheekdrop.jpg',\r\n    11: 'assets/images/cards/cheekmoon.jpg',\r\n    12: 'assets/images/cards/cheekpearl.jpg',\r\n    13: 'assets/images/cards/crabcheek.jpg',\r\n    14: 'assets/images/cards/cheekcano.jpg',\r\n    15: 'assets/images/cards/cheekdevil.jpg',\r\n    16: 'assets/images/cards/cheekflame.jpg',\r\n    17: 'assets/images/cards/cheekblast.jpg',\r\n    18: 'assets/images/cards/cheekflame_faerie.jpg',\r\n    19: 'assets/images/cards/baby_cheekdevil.jpg',\r\n    20: 'assets/images/cards/ghostcheek_tower.jpg',\r\n    21: 'assets/images/cards/ghostcheek.jpg',\r\n    22: 'assets/images/cards/ghostcheek_alchemist.jpg',\r\n    23: 'assets/images/cards/cheekruption.jpg',\r\n    24: 'assets/images/cards/suncheek.jpg',\r\n    25: 'assets/images/cards/cheekflower.jpg',\r\n    26: 'assets/images/cards/cavecheek_dweller.jpg',\r\n    27: 'assets/images/cards/mushroom_cheek.jpg',\r\n    28: 'assets/images/cards/cheekshrooms.jpg',\r\n    29: 'assets/images/cards/cheektree_giant.jpg',\r\n    30: 'assets/images/cards/cheekworld_tree.jpg',\r\n    31: 'assets/images/cards/cheek_shaman.jpg',\r\n    32: 'assets/images/cards/cheekfox.jpg',\r\n    33: 'assets/images/cards/cheekbloom_spirit.jpg',\r\n    34: 'assets/images/cards/cheekshield_spirit.jpg',\r\n    35: 'assets/images/cards/cheek_dancers.jpg',\r\n}\r\n\r\nexport default images;","const icons = {\r\n    aquatic_enemy: 'assets/images/ui/aquatic_enemy.png',\r\n    aquatic_enemyhover: 'assets/images/ui/aquatic_enemyhover.png',\r\n    aquatic_friendly: 'assets/images/ui/aquatic_friendly.png',\r\n    aquatic_friendlyhover: 'assets/images/ui/aquatic_friendlyhover.png',\r\n    flying_enemy: 'assets/images/ui/flying_enemy.png',\r\n    flying_enemyhover: 'assets/images/ui/flying_enemyhover.png',\r\n    flying_friendly: 'assets/images/ui/flying_friendly.png',\r\n    flying_friendlyhover: 'assets/images/ui/flying_friendlyhover.png',\r\n    jump_enemy: 'assets/images/ui/jump_enemy.png',\r\n    jump_enemyhover: 'assets/images/ui/jump_enemyhover.png',\r\n    jump_friendly: 'assets/images/ui/jump_friendly.png',\r\n    jump_friendlyhover: 'assets/images/ui/jump_friendlyhover.png',\r\n    ranged_enemy: 'assets/images/ui/ranged_enemy.png',\r\n    ranged_enemyhover: 'assets/images/ui/ranged_enemyhover.png',\r\n    ranged_friendly: 'assets/images/ui/ranged_friendly.png',\r\n    ranged_friendlyhover: 'assets/images/ui/ranged_friendlyhover.png',\r\n    scoot_enemy: 'assets/images/ui/scoot_enemy.png',\r\n    scoot_enemyhover: 'assets/images/ui/scoot_enemyhover.png',\r\n    scoot_friendly: 'assets/images/ui/scoot_friendly.png',\r\n    scoot_friendlyhover: 'assets/images/ui/scoot_friendlyhover.png',\r\n    taunt_enemy: 'assets/images/ui/taunt_enemy.png',\r\n    taunt_enemyhover: 'assets/images/ui/taunt_enemyhover.png',\r\n    taunt_friendly: 'assets/images/ui/taunt_friendly.png',\r\n    taunt_friendlyhover: 'assets/images/ui/taunt_friendlyhover.png',\r\n}\r\n\r\nexport default icons;","import React from \"react\";\r\nimport { useStore } from \"../../../../../hooks-store/store\";\r\nimport \"./Occupant.css\";\r\nimport images from \"../../../../../assets/images/cards/images\";\r\nimport icons from \"../../../../../assets/images/ui/icons\";\r\n\r\nconst Occupant = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const points_divine = [\r\n    [props.x + 30, props.y - 10].join(),\r\n    [props.x - 10, props.y + 60].join(),\r\n    [props.x + 70, props.y + 60].join(),\r\n  ].join(\" \");\r\n\r\n  const occupantClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? state.tiles[props.tile].occupantSelectable &&\r\n        state.data.status.current === props.user\r\n        ? \"friendly-selectable\"\r\n        : \"friendly\"\r\n      : state.tiles[props.tile].occupantSelectable\r\n      ? \"enemy-selectable\"\r\n      : \"enemy\";\r\n  const creatureClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? state.tiles[props.tile].occupantSelected\r\n        ? \"creature-selected\"\r\n        : \"creature\"\r\n      : \"creature-enemy\";\r\n  const iconClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? \"friendly\"\r\n      : \"enemy\";\r\n  const icon_taunt = state.data.board.tiles[props.tile].occupant.taunt ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y - 7}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_taunt\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_ranged = state.data.board.tiles[props.tile].occupant.ranged ? (\r\n    <rect\r\n      x={props.x + 50}\r\n      y={props.y + 30}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_ranged\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_flying = state.data.board.tiles[props.tile].occupant.movement\r\n    .special.flying ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y + 45}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_flying\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_aquatic =\r\n    !icon_flying &&\r\n    state.data.board.tiles[props.tile].occupant.movement.special.aquatic ? (\r\n      <rect\r\n        x={props.x + 20}\r\n        y={props.y + 45}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        fill={\"url(#icon_aquatic\" + props.tile + \")\"}\r\n      />\r\n    ) : null;\r\n  const icon_jump = state.data.board.tiles[props.tile].occupant.movement.special\r\n    .jump ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y + 65}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_jump\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_scoot =\r\n    !icon_jump &&\r\n    state.data.board.tiles[props.tile].occupant.movement.range > 1 ? (\r\n      <rect\r\n        x={props.x + 20}\r\n        y={props.y + 65}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        fill={\"url(#icon_scoot\" + props.tile + \")\"}\r\n      />\r\n    ) : null;\r\n  const divine = state.data.board.tiles[props.tile].occupant.divine ? (\r\n    <polygon points={points_divine} className=\"divine\" />\r\n  ) : null;\r\n  const protection = state.data.board.tiles[props.tile].occupant.protection ? (\r\n    <ellipse\r\n      cx={props.x + 30}\r\n      cy={props.y + 39}\r\n      rx=\"49\"\r\n      ry=\"49\"\r\n      className=\"protection\"\r\n    />\r\n  ) : null;\r\n\r\n  const occupantHandler = () => {\r\n    if (\r\n      state.tiles[props.tile].occupantSelectable &&\r\n      state.data.status.current === props.user\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        tile_id: props.tile,\r\n      };\r\n      if (state.currentAction === \"gift_occupant\") {\r\n        dispatch(\"PROCESS_GIFT_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"event_occupant\") {\r\n        dispatch(\"PROCESS_EVENT_OCCUPANT\", payload);\r\n      } else {\r\n        if (state.data.board.tiles[props.tile].occupant.player === props.user) {\r\n          dispatch(\"SELECT_OCCUPANT\", payload);\r\n        } else if (state.currentAction === \"occupant_selected\") {\r\n          dispatch(\"ATTACK_OCCUPANT\", payload);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const occupant = (\r\n    <g className={occupantClass} onClick={occupantHandler}>\r\n      <defs>\r\n        <pattern\r\n          id={\"creature-image\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={images[state.data.board.tiles[props.tile].occupant.id]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_aquatic\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"aquatic_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_flying\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"flying_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_jump\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"jump_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_ranged\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"ranged_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_scoot\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"scoot_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_taunt\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"taunt_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n\r\n      <rect\r\n        x={props.x}\r\n        y={props.y}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width={props.width}\r\n        height={(props.width / 3) * 4}\r\n        className={creatureClass}\r\n        fill={\"url(#creature-image\" + props.tile + \")\"}\r\n      />\r\n\r\n      {icon_taunt}\r\n      {icon_ranged}\r\n      {icon_flying}\r\n      {icon_aquatic}\r\n      {icon_jump}\r\n      {icon_scoot}\r\n\r\n      <rect\r\n        x={props.x}\r\n        y={props.y + 55}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"25\"\r\n        className=\"attack\"\r\n      />\r\n      <text x={props.x + 10} y={props.y + 70} dy=\".3em\" className=\"attack-text\">\r\n        {state.data.board.tiles[props.tile].occupant.attack}\r\n      </text>\r\n\r\n      <rect\r\n        x={props.x + 40}\r\n        y={props.y + 55}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"25\"\r\n        className=\"health\"\r\n      />\r\n      <text x={props.x + 50} y={props.y + 70} dy=\".3em\" className=\"health-text\">\r\n        {state.data.board.tiles[props.tile].occupant.health}\r\n      </text>\r\n\r\n      {divine}\r\n      {protection}\r\n    </g>\r\n  );\r\n\r\n  return state.data.board.tiles[props.tile].occupant.id > 0 ? occupant : null;\r\n};\r\n\r\nexport default Occupant;\r\n","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport Occupant from \"./Occupant/Occupant\";\r\nimport \"./Tile.css\";\r\n\r\nconst Tile = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const extraclass =\r\n    state.tiles[props.id].selectable && state.data.status.current === props.user\r\n      ? \"tile-selectable\"\r\n      : \"tile-not-selectable\";\r\n  const tileclass =\r\n    state.data.board.tiles[props.id].owner !== props.user\r\n      ? props.type + \"-opponent\"\r\n      : props.type;\r\n\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  const tileHandler = () => {\r\n    if (\r\n      state.tiles[props.id].selectable &&\r\n      state.data.status.current === props.user\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        tile_id: props.id,\r\n      };\r\n      if (state.currentAction === \"summon_creature\") {\r\n        dispatch(\"SUMMON_CREATURE\", payload);\r\n      } else if (state.currentAction === \"occupant_selected\") {\r\n        dispatch(\"MOVE_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"event_tile\") {\r\n        dispatch(\"PROCESS_EVENT_TILE\", payload);\r\n      } else {\r\n        dispatch(\"BUILD_TILE\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <polygon\r\n        className={tileclass + \" \" + extraclass}\r\n        points={points}\r\n        onClick={tileHandler}\r\n      />\r\n      <Occupant\r\n        tile={props.id}\r\n        x={startPosX + hexSize * 0.5}\r\n        y={startPosY + Math.sqrt(3) * hexSize * 0.125}\r\n        width={hexSize}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\nimport \"./Well.css\";\r\n\r\nconst Well = (props) => {\r\n  const wellClass = props.data.collected ? \"well-collected\" : \"well-available\";\r\n\r\n  return (\r\n    <circle cx={props.cx} cy={props.cy} r={props.r} className={wellClass} />\r\n  );\r\n};\r\n\r\nexport default Well;\r\n","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport \"./God.css\";\r\n\r\nconst God = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const selectable = state.gods[props.id].selectable\r\n    ? \"god-selectable\"\r\n    : \"god-not-selectable\";\r\n\r\n  const godHandler = () => {\r\n    if (state.gods[props.id].selectable) {\r\n      const payload = { god: props.id, player: props.user };\r\n      dispatch(\"ATTACK_GOD\", payload);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <g className={selectable} onClick={godHandler}>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} />\r\n      <text\r\n        x={props.cx}\r\n        y={props.cy}\r\n        textAnchor=\"middle\"\r\n        stroke=\"#8B0000\"\r\n        strokeWidth=\"4px\"\r\n        fontSize=\"40px\"\r\n        dy=\".3em\"\r\n      >\r\n        {props.data.health}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default God;\r\n","import React from \"react\";\r\nimport Tile from \"./Tile/Tile\";\r\nimport Well from \"./Well/Well\";\r\nimport God from \"./God/God\";\r\n\r\nconst Board = (props) => {\r\n  const hexSize = 60;\r\n  const boardMaxHeight = 6;\r\n  const godMaxHeight = boardMaxHeight + 1;\r\n  const boardTilesMap =\r\n    props.user === \"player2\"\r\n      ? { G: 2, F: 5, E: 6, D: 5, C: 6, B: 5, A: 2 }\r\n      : { A: 2, B: 5, C: 6, D: 5, E: 6, F: 5, G: 2 };\r\n  const wellPositions =\r\n    props.user === \"player2\"\r\n      ? { G: [3, 0], A: [3, 0] }\r\n      : { A: [0, 3], G: [0, 3] };\r\n  const godPositions = props.user === \"player2\" ? { D: [6, 0] } : { D: [0, 6] };\r\n\r\n  const tiles = Object.keys(boardTilesMap).map((column, i) => {\r\n    return [...Array(boardTilesMap[column])].map((_, j) => {\r\n      let parity = i % 2 === 0;\r\n      let columnNr =\r\n        props.user === \"player2\" ? boardTilesMap[column] - j : j + 1;\r\n      return (\r\n        <Tile\r\n          key={column + columnNr}\r\n          id={column + columnNr}\r\n          type={props.data.tiles[column + columnNr].type}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 1.5}\r\n          startPosY={\r\n            parity\r\n              ? Math.sqrt(3) *\r\n                  hexSize *\r\n                  ((boardMaxHeight - boardTilesMap[column]) * 0.5 + j) +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n              : Math.sqrt(3) * hexSize * j + Math.sqrt(3) * hexSize\r\n          }\r\n          user={props.user}\r\n          opponent={props.opponent}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const wells = Object.keys(wellPositions).map((column) => {\r\n    return wellPositions[column].map((_, i) => {\r\n      let parity = Object.keys(boardTilesMap).indexOf(column) % 2 === 0;\r\n      return (\r\n        <Well\r\n          key={\"well-\" + column + wellPositions[column][i]}\r\n          id={\"well-\" + column + wellPositions[column][i]}\r\n          data={props.data.wells[column + wellPositions[column][i]]}\r\n          r={hexSize * 0.5}\r\n          cx={\r\n            hexSize * 1.5 * Object.keys(boardTilesMap).indexOf(column) + hexSize\r\n          }\r\n          cy={\r\n            parity\r\n              ? (boardMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  wellPositions[column].length +\r\n                  [0, 3][i]) *\r\n                Math.sqrt(3) *\r\n                hexSize\r\n              : (boardMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  wellPositions[column].length +\r\n                  [0, 3][i]) *\r\n                  Math.sqrt(3) *\r\n                  hexSize +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n          }\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const gods = Object.keys(godPositions).map((column) => {\r\n    return godPositions[column].map((_, i) => {\r\n      let parity = Object.keys(boardTilesMap).indexOf(column) % 2 === 0;\r\n      return (\r\n        <God\r\n          key={\"god-\" + column + godPositions[column][i]}\r\n          id={column + godPositions[column][i]}\r\n          data={props.data.gods[column + godPositions[column][i]]}\r\n          r={hexSize * 0.65}\r\n          cx={\r\n            hexSize * 1.5 * Object.keys(boardTilesMap).indexOf(column) + hexSize\r\n          }\r\n          cy={\r\n            parity\r\n              ? (godMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  godPositions[column].length +\r\n                  [0, 6][i]) *\r\n                Math.sqrt(3) *\r\n                hexSize\r\n              : (godMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  godPositions[column].length +\r\n                  [0, 6][i]) *\r\n                  Math.sqrt(3) *\r\n                  hexSize +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n          }\r\n          user={props.user}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"60vw\", justifyContent: \"center\", display: \"flex\" }}>\r\n      <svg\r\n        width={\r\n          hexSize * 1.5 * Object.keys(boardTilesMap).length + hexSize * 0.5\r\n        }\r\n        height={Math.sqrt(3) * hexSize * godMaxHeight}\r\n      >\r\n        {tiles}\r\n        {wells}\r\n        {gods}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport images from \"../../../../assets/images/cards/images\";\r\nimport \"./Card.css\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\n\r\nconst Card = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const cardHandler = () => {\r\n    if (\r\n      state.hand[props.index].selectable &&\r\n      state.data[props.user].cards[props.id].faeria_cost <=\r\n        state.data[props.user].faeria\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        hand_id: props.index,\r\n        card_id: props.id,\r\n      };\r\n      if (state.data[props.user].cards[props.id].type === \"event\") {\r\n        dispatch(\"SELECT_EVENT\", payload);\r\n      } else {\r\n        dispatch(\"SELECT_CARD\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cardDisabled = () => {};\r\n\r\n  const clickAction = state.data[props.user].mulligan\r\n    ? props.clickAction\r\n    : state.data.status.current !== props.user || props.owner !== props.user\r\n    ? cardDisabled\r\n    : cardHandler;\r\n\r\n  const imgSrc =\r\n    props.owner === props.opponent ? images[\"cardback\"] : images[props.data.id];\r\n\r\n  return (\r\n    <div className={props.classname} onClick={clickAction}>\r\n      <img\r\n        id={props.index}\r\n        alt=\"\"\r\n        src={imgSrc}\r\n        width={props.width}\r\n        height={parseInt(props.height) - 6 + \"px\"}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst Hand = (props) => {\r\n  const state = useStore()[0];\r\n\r\n  const cards = props.data.hand.map((id, index) => {\r\n    const cardClass =\r\n      state.hand[index + 1].selected && props.user === props.owner\r\n        ? \"-selected\"\r\n        : \"\";\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index + 1}\r\n        data={props.data.cards[id]}\r\n        height={props.height}\r\n        width=\"120px\"\r\n        classname={\"card\" + cardClass}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.owner}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"60vw\",\r\n        height: props.height,\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        alignSelf: props.align,\r\n      }}\r\n    >\r\n      {cards}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hand;\r\n","const images_ui = {\r\n    'wheel-B3': 'assets/images/ui/pluscard.png',\r\n    'wheel-C2': 'assets/images/ui/pluscheekia.png',\r\n}\r\n\r\nexport default images_ui;","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport images_ui from \"../../../../assets/images/ui/images_ui\";\r\n\r\nconst WheelButton = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const selectable = state.wheelbuttons[props.id].selectable\r\n    ? \"\"\r\n    : \" not-selectable\";\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  const selectHandler = () => {\r\n    if (state.wheelbuttons[props.id].selectable) {\r\n      switch (props.id) {\r\n        case \"wheel-B3\":\r\n          dispatch(\"DRAW_CARD\", props.user);\r\n          break;\r\n        case \"wheel-C2\":\r\n          dispatch(\"PLUS_FAERIA\", props.user);\r\n          break;\r\n        default:\r\n          dispatch(\"SELECT_LAND\", {\r\n            player: props.user,\r\n            wheelbutton_id: props.id,\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <g>\r\n      <defs>\r\n        <pattern\r\n          id={\"buttonimage-\" + props.id}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={images_ui[props.id]}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n      <polygon\r\n        className={props.className + selectable}\r\n        fill={\"url(#buttonimage-\" + props.id + \")\"}\r\n        id={props.id}\r\n        points={points}\r\n        onClick={selectHandler}\r\n      />\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default WheelButton;\r\n","import React from \"react\";\r\nimport \"./EndTurnButton.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst EndTurnButton = (props) => {\r\n  const dispatch = useStore()[1];\r\n\r\n  const endTurnHandler = () => {\r\n    const payload = {\r\n      player: props.user,\r\n      opponent: props.opponent,\r\n      id: props.id,\r\n    };\r\n    dispatch(\"END_TURN\", payload);\r\n  };\r\n\r\n  const enemyTurnHandler = () => {};\r\n\r\n  const btnText =\r\n    props.opponent === props.data.current ? \"ENEMY TURN\" : \"END TURN\";\r\n  const btnClass =\r\n    props.opponent === props.data.current\r\n      ? \"enemyturn-button\"\r\n      : \"endturn-button\";\r\n  const btnClassText =\r\n    props.opponent === props.data.current ? \"enemyturn-text\" : \"endturn-text\";\r\n  const btnOnClick =\r\n    props.opponent === props.data.current ? enemyTurnHandler : endTurnHandler;\r\n\r\n  return (\r\n    <g onClick={btnOnClick}>\r\n      <rect\r\n        x=\"50\"\r\n        y=\"125\"\r\n        rx=\"20\"\r\n        ry=\"20\"\r\n        width=\"200\"\r\n        height=\"50\"\r\n        className={btnClass}\r\n      />\r\n      <text x=\"150\" y=\"150\" fontSize=\"25\" className={btnClassText} dy=\".3em\">\r\n        {btnText}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default EndTurnButton;\r\n","import React from \"react\";\r\nimport WheelButton from \"./WheelButton/WheelButton\";\r\nimport EndTurnButton from \"../../UI/EndTurnButton/EndTurnButton\";\r\nimport \"./Wheel.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst Wheel = (props) => {\r\n  const state = useStore()[0];\r\n\r\n  const hexSize = 40;\r\n  const boardTilesMap = { A: 2, B: 3, C: 2 };\r\n  const boardMaxHeight = 3;\r\n  const offsetX =\r\n    (300 -\r\n      (hexSize * 1.5 * Object.keys(boardTilesMap).length + hexSize * 0.5)) *\r\n    0.5;\r\n  const offsetY =\r\n    (300 - Math.sqrt(3) * hexSize * boardMaxHeight - Math.sqrt(3) * hexSize) *\r\n    0.5;\r\n\r\n  const wheel = Object.keys(boardTilesMap).map((column, i) => {\r\n    return [...Array(boardTilesMap[column])].map((_, j) => {\r\n      let parity = i % 2 !== 0;\r\n      return (\r\n        <WheelButton\r\n          key={\"wheel-\" + column + (j + 1)}\r\n          id={\"wheel-\" + column + (j + 1)}\r\n          className={\"wheel-\" + column + (j + 1)}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 1.5 + offsetX}\r\n          startPosY={\r\n            parity\r\n              ? Math.sqrt(3) *\r\n                  hexSize *\r\n                  ((boardMaxHeight - boardTilesMap[column]) * 0.5 + j) +\r\n                Math.sqrt(3) * hexSize * 0.5 +\r\n                offsetY\r\n              : Math.sqrt(3) * hexSize * j + Math.sqrt(3) * hexSize + offsetY\r\n          }\r\n          user={props.user}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const wheelOutput = !state.data[props.user].wheel_used ? (\r\n    wheel\r\n  ) : (\r\n    <EndTurnButton\r\n      data={props.data}\r\n      user={props.user}\r\n      opponent={props.opponent}\r\n      id={props.id}\r\n    />\r\n  );\r\n  const strokeColor =\r\n    props.data.current === props.opponent ? \"#962d3e\" : \"#00FA9A\";\r\n  const fillColor =\r\n    props.data.current === props.opponent ? \"#262626\" : \"#2F4F4F\";\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"300px\",\r\n        height: \"300px\",\r\n        position: \"absolute\",\r\n        bottom: \"50px\",\r\n        left: \"50px\",\r\n      }}\r\n    >\r\n      <svg width=\"300px\" height=\"300\">\r\n        <circle\r\n          cx=\"150\"\r\n          cy=\"150\"\r\n          r=\"145\"\r\n          stroke={strokeColor}\r\n          strokeWidth=\"5\"\r\n          fill={fillColor}\r\n        />\r\n        {wheelOutput}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n","import React from \"react\";\r\n\r\nconst Faeria = (props) => {\r\n  return (\r\n    <svg>\r\n      <g>\r\n        <circle\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          r=\"50\"\r\n          stroke=\"#001920\"\r\n          strokeWidth=\"5\"\r\n          fill=\"#00bae8\"\r\n        />\r\n        <text\r\n          x=\"50%\"\r\n          y=\"50%\"\r\n          stroke=\"#001920\"\r\n          strokeWidth=\"3px\"\r\n          textAnchor=\"middle\"\r\n          fontSize=\"50px\"\r\n          dy=\".3em\"\r\n        >\r\n          {props.faeria}\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Faeria;\r\n","import React from \"react\";\r\n\r\nconst Deck = (props) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div style={{ border: \"5px solid #001920\" }}>\r\n        Deck: {props.deckcounter}\r\n      </div>\r\n      <div style={{ border: \"5px solid #001920\" }}>\r\n        Hand: {props.handcounter}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\n\r\nconst Hexagon = (props) => {\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  return <polygon className={props.className} points={points} />;\r\n};\r\n\r\nexport default Hexagon;\r\n","import React from \"react\";\r\nimport Faeria from \"../../Game/Faeria/Faeria\";\r\nimport Deck from \"../../Game/Deck/Deck\";\r\nimport Hexagon from \"../Hexagon/Hexagon\";\r\nimport \"./Infobox.css\";\r\n\r\nconst Infobox = (props) => {\r\n  const landCount = getLandCount(props.tiles, props.player);\r\n  const align = props.align;\r\n  const hexSize = 20;\r\n  const landCounter = Object.keys(landCount).map((column, i) => {\r\n    return (\r\n      <g key={column} id={column}>\r\n        <Hexagon\r\n          className={column}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 2.5 + 8}\r\n          startPosY={hexSize - hexSize * Math.sqrt(3) * 0.5}\r\n        />\r\n        <text\r\n          x={hexSize * i * 2.5 + hexSize + 8}\r\n          y={\r\n            hexSize * Math.sqrt(3) * 0.5 +\r\n            (hexSize - hexSize * Math.sqrt(3) * 0.5)\r\n          }\r\n          className={column + \"-text\"}\r\n          fontSize={hexSize}\r\n          dy=\".3em\"\r\n        >\r\n          {landCount[column]}\r\n        </text>\r\n      </g>\r\n    );\r\n  });\r\n  const info_landcounter = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <svg height={hexSize * 2} width=\"208px\" display=\"block\" margin=\"auto\">\r\n        {landCounter}\r\n      </svg>\r\n    </div>\r\n  );\r\n  const info_faeria = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Faeria faeria={props.data.faeria} />\r\n    </div>\r\n  );\r\n  const info_player = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div\r\n        style={{\r\n          width: \"50%\",\r\n          border: \"5px solid #001920\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <b>{props.data.name}</b>\r\n      </div>\r\n    </div>\r\n  );\r\n  const info =\r\n    align === \"flex-end\" ? (\r\n      <React.Fragment>\r\n        {info_landcounter}\r\n        {info_faeria}\r\n        {info_player}\r\n        <Deck\r\n          deckcounter={props.data.deck.length}\r\n          handcounter={props.data.hand.length}\r\n        />\r\n      </React.Fragment>\r\n    ) : (\r\n      <React.Fragment>\r\n        <Deck\r\n          deckcounter={props.data.deck.length}\r\n          handcounter={props.data.hand.length}\r\n        />\r\n        {info_player}\r\n        {info_faeria}\r\n        {info_landcounter}\r\n      </React.Fragment>\r\n    );\r\n  return (\r\n    <div\r\n      style={{\r\n        alignSelf: align,\r\n        margin: \"25px\",\r\n      }}\r\n    >\r\n      {info}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getLandCount(tiles, player) {\r\n  let lands = { f: 0, l: 0, m: 0, d: 0 };\r\n  Object.values(tiles).forEach((tile) => {\r\n    if (tile.owner === player && tile.type.charAt(0) !== \"p\") {\r\n      lands[tile.type.charAt(0)] += 1;\r\n    }\r\n  });\r\n  return lands;\r\n}\r\n\r\nexport default Infobox;\r\n","import React, { useState } from \"react\";\r\nimport \"./MulliganModal.css\";\r\nimport Card from \"../../Game/Hand/Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst MulliganModal = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const [initialHand, setInitialHand] = useState({\r\n    0: false,\r\n    1: false,\r\n    2: false,\r\n  });\r\n\r\n  const swapHandler = (event) => {\r\n    const newHand = JSON.parse(JSON.stringify(initialHand));\r\n    newHand[event.target.id] = !newHand[event.target.id];\r\n    setInitialHand(newHand);\r\n  };\r\n\r\n  const classname = (index) => {\r\n    return !initialHand[index] ? \"card-mulligan\" : \"card-mulligan-selected\";\r\n  };\r\n\r\n  const cards = state.data[props.user].deck.slice(0, 3).map((id, index) => {\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index}\r\n        data={state.data[props.user].cards[id]}\r\n        height=\"486px\"\r\n        width=\"360px\"\r\n        clickAction={swapHandler}\r\n        classname={classname(index)}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.user}\r\n      />\r\n    );\r\n  });\r\n\r\n  const confirmHandler = () => {\r\n    const payload = {\r\n      player: props.user,\r\n      opponent: props.opponent,\r\n      initialHand: initialHand,\r\n      id: props.id,\r\n    };\r\n    dispatch(\"CONFIRM_MULLIGAN\", payload);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div style={{ justifyContent: \"center\", display: \"flex\", height: \"75%\" }}>\r\n        {cards}\r\n      </div>\r\n      <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n        <div className=\"modal-confirm\" onClick={confirmHandler}>\r\n          CONFIRM\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MulliganModal;\r\n","import React, { useEffect } from \"react\";\r\nimport Board from \"./Board/Board\";\r\nimport Hand from \"./Hand/Hand\";\r\nimport Wheel from \"./Wheel/Wheel\";\r\nimport Infobox from \"../UI/Infobox/Infobox\";\r\nimport MulliganModal from \"../UI/MulliganModal/MulliganModal\";\r\nimport { useStore } from \"../../hooks-store/store\";\r\nimport axios from \"axios\";\r\n\r\nconst Game = () => {\r\n  const [state, dispatch] = useStore();\r\n  const user = document.getElementById(\"user\").value;\r\n  const opponent = document.getElementById(\"opponent\").value;\r\n  const id = document.getElementById(\"game_id\").value;\r\n\r\n  useEffect(() => {\r\n    if (!state.data[user].shuffle) {\r\n      const payload = { player: user, opponent: opponent, id: id };\r\n      dispatch(\"SHUFFLE_DECK\", payload);\r\n    }\r\n    if (\r\n      (state.data.status.current === opponent && !state.data[user].mulligan) ||\r\n      (!state.data[user].mulligan && state.data[opponent].mulligan)\r\n    ) {\r\n      const timer = setTimeout(() => {\r\n        const formdata = new FormData();\r\n        formdata.append(\"id\", id);\r\n        let timestamp = Date.now();\r\n        axios\r\n          .post(\r\n            \"http://localhost/faeria/Faeria/utils/getState.php?timestamp=\" +\r\n              timestamp,\r\n            formdata\r\n          )\r\n          .then((res) => {\r\n            dispatch(\"SET_DATA\", JSON.parse(res.data));\r\n          });\r\n      }, 500);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const mulligan = state.data[user].mulligan ? (\r\n    <MulliganModal user={user} opponent={opponent} id={id} />\r\n  ) : null;\r\n\r\n  const output = state.data.status.finished ? (\r\n    <h1 style={{ textAlign: \"center\" }}>\r\n      WINNER: {state.data[state.data.status.winner].name}\r\n    </h1>\r\n  ) : (\r\n    <div style={{ display: \"flex\", height: \"100vh\" }}>\r\n      {mulligan}\r\n      <div\r\n        style={{\r\n          width: \"20vw\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Infobox\r\n          align=\"flex-start\"\r\n          data={state.data[opponent]}\r\n          tiles={state.data.board.tiles}\r\n          player={opponent}\r\n        />\r\n        <Infobox\r\n          align=\"flex-end\"\r\n          data={state.data[user]}\r\n          tiles={state.data.board.tiles}\r\n          player={user}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"60vw\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Hand\r\n          data={state.data[opponent]}\r\n          owner={opponent}\r\n          height=\"36px\"\r\n          align=\"flex-start\"\r\n          user={user}\r\n          opponent={opponent}\r\n        />\r\n        <Board data={state.data.board} user={user} opponent={opponent} />\r\n        <Hand\r\n          data={state.data[user]}\r\n          owner={user}\r\n          height=\"166px\"\r\n          align=\"flex-end\"\r\n          user={user}\r\n          opponent={opponent}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"20vw\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Wheel\r\n          data={state.data.status}\r\n          user={user}\r\n          opponent={opponent}\r\n          id={id}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return output;\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\n\nconst app = () => {\n  return <Game />;\n};\n\nexport default app;\n","export default class EventProcessor {\r\n  constructor(state, data) {\r\n    this.state = state;\r\n    this.data = data;\r\n    this.eventLibrary = {\r\n      0: \"processEvent_0\",\r\n      5: \"processEvent_5\",\r\n      6: \"processEvent_6\",\r\n      7: \"processEvent_7\",\r\n      9: \"processEvent_9\",\r\n      11: \"processEvent_11\",\r\n    };\r\n    this.summonEffectLibrary = {\r\n      8: \"processSummonEffect_8\",\r\n    };\r\n    this.giftEffectLibrary = {\r\n      1: \"processGiftEffect_1\",\r\n    };\r\n    this.lastwordEffectLibrary = {\r\n      3: \"processLastwordEffect_3\",\r\n    };\r\n  }\r\n  initEventLogic() {\r\n    const newHand = this.state.hand;\r\n    newHand[this.data.hand_id].selected = !newHand[this.data.hand_id].selected;\r\n    if (newHand[this.data.hand_id].selected) {\r\n      this[\r\n        this.eventLibrary[\r\n          this.state.data[this.data.player].cards[this.data.card_id].id\r\n        ]\r\n      ](\"init\");\r\n    } else {\r\n      this[\r\n        this.eventLibrary[\r\n          this.state.data[this.data.player].cards[this.data.card_id].id\r\n        ]\r\n      ](\"revert\");\r\n    }\r\n    Object.keys(newHand).forEach((key) => {\r\n      if (parseInt(key) !== this.data.hand_id) {\r\n        newHand[key].selectable = !newHand[key].selectable;\r\n      }\r\n    });\r\n    this.state.hand = newHand;\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        if (newHand[this.data.hand_id].selected) {\r\n          this.state.wheelbuttons[key].selectable = false;\r\n        } else {\r\n          this.state.wheelbuttons[key].selectable = true;\r\n        }\r\n      });\r\n    } else {\r\n      if (newHand[this.data.hand_id].selected) {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      } else {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n    }\r\n    return this.state;\r\n  }\r\n  handleEventLogic() {\r\n    const selected_card_id = this.getSelectedCard();\r\n    this[\r\n      this.eventLibrary[\r\n        this.state.data[this.data.player].cards[\r\n          this.state.data[this.data.player].hand[selected_card_id - 1]\r\n        ].id\r\n      ]\r\n    ](\"handle\");\r\n    const newHand = this.state.hand;\r\n    newHand[selected_card_id].selected = !newHand[selected_card_id].selected;\r\n    Object.keys(newHand).forEach((key) => {\r\n      newHand[key].selectable = true;\r\n    });\r\n    this.state.hand = newHand;\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        this.state.wheelbuttons[key].selectable = true;\r\n      });\r\n    } else {\r\n      this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n    }\r\n    this.state.currentAction = \"\";\r\n    this.state.data[this.data.player].faeria -= this.state.data[\r\n      this.data.player\r\n    ].cards[\r\n      this.state.data[this.data.player].hand[selected_card_id - 1]\r\n    ].faeria_cost;\r\n    this.state.data[this.data.player].hand.splice(selected_card_id - 1, 1);\r\n    return this.state;\r\n  }\r\n  processSummonEffect(occupant) {\r\n    this[this.summonEffectLibrary[occupant.id]]();\r\n    return this.state;\r\n  }\r\n  initGiftEffect(occupant) {\r\n    this[this.giftEffectLibrary[occupant.id]](\"init\", occupant);\r\n    return this.state;\r\n  }\r\n  processGiftEffect(selected_occupant_id) {\r\n    const occupant = this.state.data.board.tiles[selected_occupant_id].occupant;\r\n    this[this.giftEffectLibrary[occupant.id]](\"handle\", selected_occupant_id);\r\n    this.state.tiles[selected_occupant_id].occupantSelected = false;\r\n    this.state.currentAction = \"\";\r\n    Object.keys(this.state.hand).forEach((key) => {\r\n      this.state.hand[key].selectable = true;\r\n    });\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        this.state.wheelbuttons[key].selectable = true;\r\n      });\r\n    } else {\r\n      this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n    }\r\n    return this.state;\r\n  }\r\n  processLastwordEffect(occupant, tile) {\r\n    this[this.lastwordEffectLibrary[occupant.id]](occupant, tile);\r\n    return this.state;\r\n  }\r\n\r\n  //HELPERS\r\n\r\n  setSelectStateForOccupants(friendly, enemy) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(\r\n          this.state.data.board.tiles[key].occupant.player\r\n        ) &&\r\n        !this.state.data.board.tiles[key].occupant.divine\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectStateForConditionalOccupants(friendly, enemy, attack) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(\r\n          this.state.data.board.tiles[key].occupant.player\r\n        ) &&\r\n        !this.state.data.board.tiles[key].occupant.divine &&\r\n        this.state.data.board.tiles[key].occupant.attack <= attack\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n  getSelectedCard() {\r\n    return parseInt(\r\n      Object.keys(this.state.hand).filter(\r\n        (key) => this.state.hand[key].selected\r\n      )[0]\r\n    );\r\n  }\r\n  getRemoveOccupant() {\r\n    return {\r\n      player: \"\",\r\n      id: 0,\r\n      type: \"\",\r\n      faeria_cost: 0,\r\n      land_cost: {\r\n        forest: 0,\r\n        desert: 0,\r\n        mountain: 0,\r\n        lake: 0,\r\n        wild: 0,\r\n      },\r\n      attack: 0,\r\n      base_attack: 0,\r\n      health: 0,\r\n      base_health: 0,\r\n      movement: {\r\n        range: 1,\r\n        haste: true,\r\n        dash: 0,\r\n        special: {\r\n          aquatic: false,\r\n          flying: false,\r\n          jump: false,\r\n        },\r\n      },\r\n      taunt: false,\r\n      divine: false,\r\n      protection: false,\r\n      ranged: false,\r\n      hasMoved: false,\r\n      hasDashed: false,\r\n      hasAttacked: false,\r\n      effects: { summon: false, gift: false, lastword: false },\r\n      effectUsed: false,\r\n    };\r\n  }\r\n  setSelectStateForBuildTiles(landtype) {\r\n    const newTileState = this.state.tiles;\r\n    const anyAdjacent = (tile) =>\r\n      this.state.data.board.tiles[tile].owner === this.data.player;\r\n    const anyAdjacentFromOccupant = (tile) =>\r\n      this.state.data.board.tiles[tile].occupant.player === this.data.player &&\r\n      this.state.data.board.tiles[tile].type !== \"none\";\r\n    const god_key = Object.keys(this.state.gods).filter(\r\n      (god) => this.state.gods[god].player === this.data.player\r\n    );\r\n    Object.keys(newTileState).forEach((key) => {\r\n      let tileType = this.state.data.board.tiles[key].type;\r\n      let tileOwner = this.state.data.board.tiles[key].owner;\r\n      if (\r\n        tileType === \"none\" ||\r\n        (tileType === \"prairie\" && tileOwner === this.data.player)\r\n      ) {\r\n        if (\r\n          newTileState[key].adjacent.some(anyAdjacent) ||\r\n          newTileState[key].adjacent.some(anyAdjacentFromOccupant) ||\r\n          this.state.gods[god_key].adjacent.includes(key)\r\n        ) {\r\n          if (\r\n            !this.state.data.board.tiles[key].occupant.movement.special.aquatic\r\n          ) {\r\n            newTileState[key].selectable = true;\r\n          } else if (landtype === \"lake\") {\r\n            newTileState[key].selectable = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.state.tiles = newTileState;\r\n  }\r\n\r\n  setSelectStateForAllTiles(selectable) {\r\n    Object.keys(this.state.tiles).forEach((key) => {\r\n      this.state.tiles[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  getGodTile() {\r\n    const god = {\r\n      player1: \"D6\",\r\n      player2: \"D0\",\r\n    };\r\n    return god[this.data.player];\r\n  }\r\n\r\n  getLandCostForType(card, type) {\r\n    return this.state.data[this.data.player].cards[card].land_cost[type];\r\n  }\r\n\r\n  getLandCostForOccupant(tile, type) {\r\n    return this.state.data.board.tiles[tile].occupant.land_cost[type];\r\n  }\r\n\r\n  handleCustomDrawLogic(index) {\r\n    if (index !== -1) {\r\n      if (this.state.data[this.data.player].hand.length < 10) {\r\n        this.state.data[this.data.player].hand.push(\r\n          this.state.data[this.data.player].deck.splice(index, 1)[0]\r\n        );\r\n      } else {\r\n        this.state.data[this.data.player].deck.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  getRandomTiles() {\r\n    const randomTiles = Object.keys(this.state.data.board.tiles);\r\n    for (let i = randomTiles.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [randomTiles[i], randomTiles[j]] = [randomTiles[j], randomTiles[i]];\r\n    }\r\n    return randomTiles;\r\n  }\r\n\r\n  getOccupantByID(id, params = {}) {\r\n    switch (id) {\r\n      case 10:\r\n        return {\r\n          player: this.data.player,\r\n          id: 10,\r\n          type: \"creature\",\r\n          faeria_cost: 1,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 1, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: true,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: { summon: false, gift: false, lastword: false },\r\n          effectUsed: false,\r\n        };\r\n      case 12:\r\n        return {\r\n          player: params.player,\r\n          id: 12,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 2, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: true,\r\n          divine: true,\r\n          protection: true,\r\n          ranged: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: { summon: false, gift: false, lastword: false },\r\n          effectUsed: false,\r\n        };\r\n      case 13:\r\n        return {\r\n          player: this.data.player,\r\n          id: 13,\r\n          type: \"creature\",\r\n          faeria_cost: 4,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 2, wild: 0 },\r\n          attack: 6,\r\n          base_attack: 6,\r\n          health: 4,\r\n          base_health: 4,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          hasMoved: params.hasMoved,\r\n          hasDashed: false,\r\n          hasAttacked: params.hasAttacked,\r\n          effects: { summon: false, gift: false, lastword: false },\r\n          effectUsed: false,\r\n        };\r\n      default:\r\n        return {};\r\n    }\r\n  }\r\n\r\n  //EVENTS\r\n\r\n  //0 - Explore\r\n  processEvent_0(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, false);\r\n      this.setSelectStateForBuildTiles(\"prairie\");\r\n      this.state.currentAction = \"event_tile\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.data[this.data.player].faeria += 2;\r\n      this.state.data.board.tiles[this.data.tile_id].type = \"prairie\";\r\n      this.state.data.board.tiles[this.data.tile_id].owner = this.data.player;\r\n    }\r\n  }\r\n\r\n  //5 - Song of the Mercheek\r\n  processEvent_5(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n      target.health = Math.floor(target.health / 2);\r\n      target.attack =\r\n        Math.floor(target.attack / 2) >= 0 ? Math.floor(target.attack / 2) : 0;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant =\r\n        target.health > 0 ? target : this.getRemoveOccupant();\r\n      if (target.health <= 0 && target.effects.lastword) {\r\n        this.processLastwordEffect(target, this.data.tile_id);\r\n      }\r\n    }\r\n  }\r\n\r\n  //6 - Cheek in a bottle\r\n  processEvent_6(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 3; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex(\r\n            (card) => this.getLandCostForType(card, \"lake\") > 0\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //7 - Cheekie in a lamp\r\n  processEvent_7(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 2; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex(\r\n            (card) =>\r\n              this.state.data[this.data.player].cards[card].type === \"event\"\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //9 - Rain of Cheek\r\n  processEvent_9(process) {\r\n    if (process === \"handle\") {\r\n      let tileAvailable = true;\r\n      const availableTiles = this.getRandomTiles().filter(\r\n        (tile) => !this.state.data.board.tiles[tile].occupant.player\r\n      );\r\n      let count = 0;\r\n      while (tileAvailable) {\r\n        if (availableTiles.length !== 0) {\r\n          this.state.data.board.tiles[\r\n            availableTiles.splice(0, 1)\r\n          ].occupant = this.getOccupantByID(10);\r\n          if (++count === 6) {\r\n            tileAvailable = false;\r\n          }\r\n        } else {\r\n          tileAvailable = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //11 - Mooncheek\r\n  processEvent_11(process) {\r\n    if (process === \"handle\") {\r\n      Object.keys(this.state.data.board.tiles)\r\n        .filter(\r\n          (key) =>\r\n            this.state.data.board.tiles[key].occupant.player ===\r\n              this.data.player && this.getLandCostForOccupant(key, \"lake\") > 0\r\n        )\r\n        .forEach((tile) => {\r\n          this.state.data.board.tiles[tile].occupant = this.getOccupantByID(\r\n            13,\r\n            {\r\n              hasAttacked: this.state.data.board.tiles[tile].occupant\r\n                .hasAttacked,\r\n              hasMoved: this.state.data.board.tiles[tile].occupant.hasMoved,\r\n            }\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  //Creatures - Summon Effects\r\n\r\n  //8 - Cheek lord\r\n  processSummonEffect_8() {\r\n    const anyAdjacentOccupant = (tile) =>\r\n      this.state.data.board.tiles[tile].occupant.player === this.data.player &&\r\n      this.state.data.board.tiles[tile].occupant.land_cost.lake > 0;\r\n    if (\r\n      this.state.tiles[this.data.tile_id].adjacent.some(anyAdjacentOccupant)\r\n    ) {\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack++;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health++;\r\n    }\r\n  }\r\n\r\n  //Creatures - Lastword Effects\r\n\r\n  //3 - Clamcheek\r\n  processLastwordEffect_3(occupant, tile) {\r\n    this.state.data.board.tiles[tile].occupant = this.getOccupantByID(12, {\r\n      player: occupant.player,\r\n    });\r\n  }\r\n\r\n  //Creatures - Gift Effects\r\n\r\n  //1 - Mercheek\r\n  processGiftEffect_1(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForConditionalOccupants(false, true, 2);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        this.state.data.board.tiles[\r\n          this.data.tile_id\r\n        ].occupant.player = this.data.player;\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.hasMoved = true;\r\n        this.state.data.board.tiles[\r\n          this.data.tile_id\r\n        ].occupant.hasAttacked = true;\r\n      }\r\n      this.setSelectStateForOccupants(true, false);\r\n    }\r\n  }\r\n}\r\n","import { initStore } from \"./store\";\r\nimport EventProcessor from \"./event-processor\";\r\nimport axios from \"axios\";\r\n\r\nconst configureStore = (loadStore) => {\r\n  const actions = {\r\n    SET_DATA: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState = data;\r\n      return updatedState;\r\n    },\r\n    SHUFFLE_DECK: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.currentAction = \"mulligan\";\r\n      const shuffledDeck = [];\r\n      for (let i = 0; i < currentState.data[data.player].deck.length; i++) {\r\n        let random = Math.floor(\r\n          Math.random() * updatedState.data[data.player].deck.length\r\n        );\r\n        shuffledDeck.push(updatedState.data[data.player].deck[random]);\r\n        updatedState.data[data.player].deck.splice(random, 1);\r\n      }\r\n      updatedState.data[data.player].deck = shuffledDeck;\r\n      updatedState.data[data.player].shuffle = true;\r\n      const newState = JSON.parse(JSON.stringify(updatedState));\r\n      const getdata = new FormData();\r\n      getdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"http://localhost/faeria/Faeria/utils/getState.php\", getdata)\r\n        .then((res) => {\r\n          const prevState = JSON.parse(res.data);\r\n          newState.data[data.opponent] = prevState.data[data.opponent];\r\n          const postdata = new FormData();\r\n          postdata.append(\"react_state\", JSON.stringify(newState));\r\n          postdata.append(\"id\", data.id);\r\n          axios.post(\r\n            \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n            postdata\r\n          );\r\n        });\r\n      return updatedState;\r\n    },\r\n    CONFIRM_MULLIGAN: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.currentAction = \"\";\r\n      const prevHand = updatedState.data[data.player].deck.slice(0, 3);\r\n      const cardsToReplace = [];\r\n      const newHand = [];\r\n      for (let i = 0; i < prevHand.length; i++) {\r\n        if (data.initialHand[i]) {\r\n          cardsToReplace.push(\r\n            updatedState.data[data.player].cards[prevHand[i]].id\r\n          );\r\n        } else {\r\n          newHand.push(parseInt(prevHand[i]));\r\n        }\r\n      }\r\n      const replacePool = Object.entries(\r\n        updatedState.data[data.player].cards\r\n      ).filter(\r\n        (card) =>\r\n          !cardsToReplace.includes(card[1].id) &&\r\n          !newHand.includes(parseInt(card[0])) &&\r\n          parseInt(card[0]) !== 0\r\n      );\r\n      for (let i = 0; i < cardsToReplace.length; i++) {\r\n        let random = Math.floor(Math.random() * replacePool.length);\r\n        newHand.push(parseInt(replacePool[random][0]));\r\n        replacePool.splice(random, 1);\r\n      }\r\n      const shuffledDeck = [];\r\n      const prevDeck = updatedState.data[data.player].deck.filter(\r\n        (card) => !newHand.includes(card)\r\n      );\r\n      const deckLength = prevDeck.length;\r\n      for (let i = 0; i < deckLength; i++) {\r\n        let random = Math.floor(Math.random() * prevDeck.length);\r\n        shuffledDeck.push(prevDeck[random]);\r\n        prevDeck.splice(random, 1);\r\n      }\r\n      if (data.player === \"player2\") {\r\n        newHand.push(0);\r\n      }\r\n      updatedState.data[data.player].deck = shuffledDeck;\r\n      updatedState.data[data.player].hand = newHand;\r\n      updatedState.data[data.player].mulligan = false;\r\n      const newState = JSON.parse(JSON.stringify(updatedState));\r\n      const getdata = new FormData();\r\n      getdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\"http://localhost/faeria/Faeria/utils/getState.php\", getdata)\r\n        .then((res) => {\r\n          const prevState = JSON.parse(res.data);\r\n          newState.data[data.opponent] = prevState.data[data.opponent];\r\n          const postdata = new FormData();\r\n          postdata.append(\"react_state\", JSON.stringify(newState));\r\n          postdata.append(\"id\", data.id);\r\n          axios.post(\r\n            \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n            postdata\r\n          );\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_LAND: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newWheelState = updatedState.wheelbuttons;\r\n      newWheelState[data.wheelbutton_id].selected = !newWheelState[\r\n        data.wheelbutton_id\r\n      ].selected;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(newWheelState).forEach((key) => {\r\n          if (key !== data.wheelbutton_id) {\r\n            newWheelState[key].selectable = !newWheelState[key].selectable;\r\n          }\r\n        });\r\n      }\r\n      if (newWheelState[data.wheelbutton_id].selected) {\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].occupantSelectable = false;\r\n        });\r\n      } else {\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = true;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n      }\r\n      updatedState.wheelbuttons = newWheelState;\r\n      const newTileState = updatedState.tiles;\r\n      const anyAdjacent = (tile) =>\r\n        updatedState.data.board.tiles[tile].owner === data.player;\r\n      const anyAdjacentFromOccupant = (tile) =>\r\n        updatedState.data.board.tiles[tile].occupant.player === data.player &&\r\n        updatedState.data.board.tiles[tile].type !== \"none\";\r\n      const god_key = Object.keys(updatedState.gods).filter(\r\n        (god) => updatedState.gods[god].player === data.player\r\n      );\r\n      if (updatedState.wheelbuttons[data.wheelbutton_id].selected) {\r\n        Object.keys(newTileState).forEach((key) => {\r\n          let tileType = updatedState.data.board.tiles[key].type;\r\n          let tileOwner = updatedState.data.board.tiles[key].owner;\r\n          if (\r\n            tileType === \"none\" ||\r\n            (tileType === \"prairie\" && tileOwner === data.player)\r\n          ) {\r\n            if (\r\n              newTileState[key].adjacent.some(anyAdjacent) ||\r\n              newTileState[key].adjacent.some(anyAdjacentFromOccupant) ||\r\n              updatedState.gods[god_key].adjacent.includes(key)\r\n            ) {\r\n              if (\r\n                !updatedState.data.board.tiles[key].occupant.movement.special\r\n                  .aquatic\r\n              ) {\r\n                newTileState[key].selectable = true;\r\n              } else if (\r\n                updatedState.wheelbuttons[data.wheelbutton_id].action === \"lake\"\r\n              ) {\r\n                newTileState[key].selectable = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        Object.keys(newTileState).forEach((key) => {\r\n          newTileState[key].selectable = false;\r\n        });\r\n      }\r\n      updatedState.tiles = newTileState;\r\n      return updatedState;\r\n    },\r\n    DRAW_CARD: (currentState, player) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const god = {\r\n        player1: \"D6\",\r\n        player2: \"D0\",\r\n      };\r\n      if (updatedState.data[player].deck.length > 0) {\r\n        if (updatedState.data[player].hand.length < 9) {\r\n          updatedState.data[player].hand.push(\r\n            updatedState.data[player].deck.splice(0, 1)[0]\r\n          );\r\n        } else {\r\n          updatedState.data[player].deck.splice(0, 1);\r\n        }\r\n      } else {\r\n        updatedState.data.board.gods[god[player]].health -= ++updatedState.data[\r\n          player\r\n        ].health_dmg;\r\n      }\r\n      updatedState.data[player].wheel_used = true;\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n      return updatedState;\r\n    },\r\n    PLUS_FAERIA: (currentState, player) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data[player].faeria++;\r\n      updatedState.data[player].wheel_used = true;\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n      return updatedState;\r\n    },\r\n    BUILD_TILE: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      let type = \"none\";\r\n      Object.values(updatedState.wheelbuttons).forEach((wheelbutton) => {\r\n        if (wheelbutton.selected) {\r\n          type = wheelbutton.action;\r\n        }\r\n      });\r\n      updatedState.data.board.tiles[data.tile_id].type = type;\r\n      updatedState.data.board.tiles[data.tile_id].owner = data.player;\r\n      const wheelbutton_id = Object.keys(updatedState.wheelbuttons).filter(\r\n        (key) => updatedState.wheelbuttons[key].selected\r\n      );\r\n      updatedState.wheelbuttons[wheelbutton_id].selected = false;\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      if (type === \"prairie\") {\r\n        updatedState.data[data.player].wheel_neutral_counter += 1;\r\n      }\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n        updatedState.data[data.player].wheel_used = true;\r\n        updatedState.data[data.player].wheel_neutral_counter = 0;\r\n      }\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n      return updatedState;\r\n    },\r\n    SELECT_CARD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newHand = updatedState.hand;\r\n      newHand[data.hand_id].selected = !newHand[data.hand_id].selected;\r\n      Object.keys(newHand).forEach((key) => {\r\n        if (parseInt(key) !== data.hand_id) {\r\n          newHand[key].selectable = !newHand[key].selectable;\r\n        }\r\n      });\r\n      updatedState.hand = newHand;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          if (newHand[data.hand_id].selected) {\r\n            updatedState.wheelbuttons[key].selectable = false;\r\n          } else {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          }\r\n        });\r\n      } else {\r\n        if (newHand[data.hand_id].selected) {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n      }\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        if (newHand[data.hand_id].selected) {\r\n          updatedState.tiles[key].occupantSelectable = false;\r\n        } else {\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        }\r\n      });\r\n      const getLands = () => {\r\n        let lands = { forest: 0, lake: 0, mountain: 0, desert: 0 };\r\n        Object.values(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (tile.owner === data.player && tile.type !== \"prairie\") {\r\n            lands[tile.type] += 1;\r\n          }\r\n        });\r\n        return lands;\r\n      };\r\n      const lands = getLands();\r\n      const getLandTypes = () => {\r\n        return Object.keys(\r\n          updatedState.data[data.player].cards[data.card_id].land_cost\r\n        ).filter(\r\n          (key) =>\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n              0 && key !== \"wild\"\r\n        );\r\n      };\r\n      const landtypes = getLandTypes();\r\n      const requirementsMet = (tile) => {\r\n        const canSpawnAdjacentToFriendliesArray = {\r\n          8: \"lake\", //Cheek lord\r\n        };\r\n        const canSpawnAdjacentToFriendlies = (adjTile) => {\r\n          return (\r\n            updatedState.data.board.tiles[adjTile].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[adjTile].occupant.land_cost[\r\n              canSpawnAdjacentToFriendliesArray[\r\n                updatedState.data[data.player].cards[data.card_id].id\r\n              ]\r\n            ] > 0\r\n          );\r\n        };\r\n        if (\r\n          Object.keys(canSpawnAdjacentToFriendliesArray).includes(\r\n            String(updatedState.data[data.player].cards[data.card_id].id)\r\n          )\r\n        ) {\r\n          if (\r\n            !updatedState.tiles[tile].adjacent.some(\r\n              canSpawnAdjacentToFriendlies\r\n            )\r\n          ) {\r\n            return false;\r\n          }\r\n          if (\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .aquatic &&\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .flying\r\n          ) {\r\n            if (updatedState.data.board.tiles[tile].type === \"none\") {\r\n              return false;\r\n            }\r\n          }\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .aquatic &&\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .flying\r\n          ) {\r\n            if (\r\n              updatedState.data.board.tiles[tile].type !== \"none\" &&\r\n              updatedState.data.board.tiles[tile].type !== \"lake\"\r\n            ) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          if (updatedState.data.board.tiles[tile].owner !== data.player) {\r\n            return false;\r\n          }\r\n          if (!landtypes.includes(updatedState.data.board.tiles[tile].type)) {\r\n            return false;\r\n          }\r\n        }\r\n        if (updatedState.data.board.tiles[tile].occupant.player) {\r\n          return false;\r\n        }\r\n        Object.keys(\r\n          updatedState.data[data.player].cards[data.card_id].land_cost\r\n        ).forEach((key) => {\r\n          if (key !== \"wild\") {\r\n            if (\r\n              updatedState.data[data.player].cards[data.card_id].land_cost[\r\n                key\r\n              ] > lands[key]\r\n            ) {\r\n              return false;\r\n            }\r\n          } else {\r\n            if (\r\n              updatedState.data[data.player].cards[data.card_id].land_cost[\r\n                key\r\n              ] >\r\n              Object.values(lands).reduce(\r\n                (sum, currentValue) => sum + currentValue\r\n              )\r\n            ) {\r\n              return false;\r\n            }\r\n          }\r\n        });\r\n        return true;\r\n      };\r\n      if (newHand[data.hand_id].selected) {\r\n        updatedState.currentAction = \"summon_creature\";\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          if (requirementsMet(key)) {\r\n            updatedState.tiles[key].selectable = true;\r\n          }\r\n        });\r\n      } else {\r\n        updatedState.currentAction = \"\";\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n        });\r\n      }\r\n      return updatedState;\r\n    },\r\n    SELECT_EVENT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const getLands = () => {\r\n        let lands = { forest: 0, lake: 0, mountain: 0, desert: 0 };\r\n        Object.values(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (tile.owner === data.player && tile.type !== \"prairie\") {\r\n            lands[tile.type] += 1;\r\n          }\r\n        });\r\n        return lands;\r\n      };\r\n      const lands = getLands();\r\n      let runLogic = true;\r\n      Object.keys(\r\n        updatedState.data[data.player].cards[data.card_id].land_cost\r\n      ).forEach((key) => {\r\n        if (key !== \"wild\") {\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n            lands[key]\r\n          ) {\r\n            runLogic = false;\r\n          }\r\n        } else {\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n            Object.values(lands).reduce(\r\n              (sum, currentValue) => sum + currentValue\r\n            )\r\n          ) {\r\n            runLogic = false;\r\n          }\r\n        }\r\n      });\r\n      if (runLogic) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        if (updatedState.data[data.player].cards[data.card_id].effects.target) {\r\n          updatedState = EP.initEventLogic();\r\n        } else {\r\n          updatedState.hand[data.hand_id].selected = !updatedState.hand[\r\n            data.hand_id\r\n          ].selected;\r\n          updatedState = EP.handleEventLogic();\r\n        }\r\n      }\r\n      return updatedState;\r\n    },\r\n    PROCESS_EVENT_OCCUPANT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.handleEventLogic();\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n      return updatedState;\r\n    },\r\n    PROCESS_EVENT_TILE: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.handleEventLogic();\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n      return updatedState;\r\n    },\r\n    PROCESS_GIFT_OCCUPANT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.processGiftEffect(selected_occupant_id);\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n      return updatedState;\r\n    },\r\n    SUMMON_CREATURE: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newOccupant = updatedState.data.board.tiles[data.tile_id].occupant;\r\n      newOccupant.player = data.player;\r\n      const selected_card_id = parseInt(\r\n        Object.keys(updatedState.hand).filter(\r\n          (key) => updatedState.hand[key].selected\r\n        )[0]\r\n      );\r\n      const card =\r\n        updatedState.data[data.player].cards[\r\n          updatedState.data[data.player].hand[selected_card_id - 1]\r\n        ];\r\n      newOccupant.id = card.id;\r\n      newOccupant.type = card.type;\r\n      newOccupant.faeria_cost = card.faeria_cost;\r\n      newOccupant.land_cost = card.land_cost;\r\n      newOccupant.attack = card.attack;\r\n      newOccupant.base_attack = card.base_attack;\r\n      newOccupant.health = card.health;\r\n      newOccupant.base_health = card.base_health;\r\n      newOccupant.movement = card.movement;\r\n      newOccupant.taunt = card.taunt;\r\n      newOccupant.divine = card.divine;\r\n      newOccupant.protection = card.protection;\r\n      newOccupant.ranged = card.ranged;\r\n      newOccupant.hasDashed = false;\r\n      newOccupant.effects = card.effects;\r\n      if (!card.movement.haste) {\r\n        newOccupant.hasMoved = true;\r\n        newOccupant.hasAttacked = true;\r\n      } else {\r\n        newOccupant.hasMoved = false;\r\n        newOccupant.hasAttacked = false;\r\n        if (card.movement.dash === 0) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      updatedState.data.board.tiles[data.tile_id].occupant = newOccupant;\r\n      const newHand = updatedState.hand;\r\n      newHand[selected_card_id].selected = !newHand[selected_card_id].selected;\r\n      if (newOccupant.effects.summon) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        EP.processSummonEffect(\r\n          updatedState.data.board.tiles[data.tile_id].occupant\r\n        );\r\n      }\r\n      if (newOccupant.effects.gift) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        newHand[selected_card_id].selectable = false;\r\n        EP.initGiftEffect(updatedState.data.board.tiles[data.tile_id].occupant);\r\n      } else {\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n        Object.keys(newHand).forEach((key) => {\r\n          newHand[key].selectable = true;\r\n        });\r\n        if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n          Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          });\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n        updatedState.currentAction = \"\";\r\n      }\r\n      updatedState.hand = newHand;\r\n      updatedState.data[data.player].faeria -=\r\n        updatedState.data[data.player].cards[\r\n          updatedState.data[data.player].hand[selected_card_id - 1]\r\n        ].faeria_cost;\r\n      updatedState.data[data.player].hand.splice(selected_card_id - 1, 1);\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n      return updatedState;\r\n    },\r\n    SELECT_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.tiles[data.tile_id].occupantSelected = !updatedState.tiles[\r\n        data.tile_id\r\n      ].occupantSelected;\r\n      const anyTaunt = (taunt_tile) =>\r\n        updatedState.data.board.tiles[taunt_tile].occupant.taunt &&\r\n        updatedState.data.board.tiles[taunt_tile].occupant.player ===\r\n          data.opponent;\r\n      const isTaunted = updatedState.tiles[data.tile_id].adjacent.some(\r\n        anyTaunt\r\n      );\r\n      const jumpTiles = [];\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n          .jump\r\n      ) {\r\n        updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n          if (!jumpTiles.includes(tile) && tile !== data.tile_id) {\r\n            jumpTiles.push(tile);\r\n          }\r\n          updatedState.tiles[tile].adjacent.forEach((adjacent_tile) => {\r\n            if (\r\n              !jumpTiles.includes(adjacent_tile) &&\r\n              adjacent_tile !== data.tile_id\r\n            ) {\r\n              jumpTiles.push(adjacent_tile);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      const movementRange =\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n          0 && !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n          ? updatedState.data.board.tiles[data.tile_id].occupant.movement.dash\r\n          : updatedState.data.board.tiles[data.tile_id].occupant.movement.range;\r\n      const rangeTiles = [];\r\n      const rangeTilesHelper = {};\r\n      for (let i = 1; i <= movementRange; i++) {\r\n        if (i === 1) {\r\n          rangeTilesHelper[i] = {};\r\n          updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n            let valid = true;\r\n            if (\r\n              updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.aquatic &&\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.flying\r\n            ) {\r\n              if (\r\n                updatedState.data.board.tiles[tile].type !== \"lake\" &&\r\n                updatedState.data.board.tiles[tile].type !== \"none\"\r\n              ) {\r\n                valid = false;\r\n              }\r\n            }\r\n            if (\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.aquatic &&\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.flying\r\n            ) {\r\n              if (updatedState.data.board.tiles[tile].type === \"none\") {\r\n                valid = false;\r\n              }\r\n            }\r\n            if (valid && !updatedState.data.board.tiles[tile].occupant.player) {\r\n              rangeTiles.push(tile);\r\n              rangeTilesHelper[i][tile] = {\r\n                prevTile: data.tile_id,\r\n                currentTile: tile,\r\n              };\r\n            }\r\n          });\r\n        } else {\r\n          rangeTilesHelper[i] = {};\r\n          Object.values(rangeTilesHelper[i - 1]).forEach((rangetile) => {\r\n            updatedState.tiles[rangetile.currentTile].adjacent\r\n              .filter(\r\n                (rangetile_key) =>\r\n                  !updatedState.tiles[rangetile.prevTile].adjacent.includes(\r\n                    rangetile_key\r\n                  ) && rangetile_key !== rangetile.prevTile\r\n              )\r\n              .forEach((rangetile_adj) => {\r\n                let valid = true;\r\n                updatedState.tiles[rangetile_adj].adjacent\r\n                  .filter(\r\n                    (rangetile_adj_key) =>\r\n                      rangetile_adj_key !== rangetile.currentTile\r\n                  )\r\n                  .forEach((rangetile_adj_adj) => {\r\n                    if (\r\n                      updatedState.tiles[rangetile_adj_adj].adjacent.includes(\r\n                        rangetile.prevTile\r\n                      )\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  });\r\n                if (updatedState.tiles[rangetile_adj].adjacentNonTile) {\r\n                  if (\r\n                    updatedState.tiles[rangetile_adj].adjacentNonTile.includes(\r\n                      \"D\"\r\n                    )\r\n                  ) {\r\n                    if (\r\n                      updatedState.gods[\r\n                        updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                      ].adjacent.includes(rangetile.prevTile)\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  } else {\r\n                    if (\r\n                      updatedState.data.board.wells[\r\n                        updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                      ].adjacent.includes(rangetile.prevTile)\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  }\r\n                }\r\n                if (\r\n                  updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.aquatic &&\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.flying\r\n                ) {\r\n                  if (\r\n                    updatedState.data.board.tiles[rangetile_adj].type !==\r\n                      \"lake\" &&\r\n                    updatedState.data.board.tiles[rangetile_adj].type !== \"none\"\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n                if (\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.aquatic &&\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.flying\r\n                ) {\r\n                  if (\r\n                    updatedState.data.board.tiles[rangetile_adj].type === \"none\"\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n                if (\r\n                  valid &&\r\n                  !rangeTiles.includes(rangetile_adj) &&\r\n                  !updatedState.data.board.tiles[rangetile_adj].occupant.player\r\n                ) {\r\n                  rangeTiles.push(rangetile_adj);\r\n                  rangeTilesHelper[i][rangetile_adj] = {\r\n                    prevTile: rangetile.currentTile,\r\n                    currentTile: rangetile_adj,\r\n                  };\r\n                }\r\n              });\r\n          });\r\n        }\r\n      }\r\n      const rangeAttack = [];\r\n      const rangeAttackHelper = {};\r\n      if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n        for (let i = 1; i <= 5; i++) {\r\n          if (i === 1) {\r\n            rangeAttackHelper[i] = {};\r\n            updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n              if (!updatedState.data.board.tiles[tile].occupant.player) {\r\n                rangeAttack.push(tile);\r\n                rangeAttackHelper[i][tile] = {\r\n                  prevTile: data.tile_id,\r\n                  currentTile: tile,\r\n                };\r\n              }\r\n            });\r\n          } else {\r\n            rangeAttackHelper[i] = {};\r\n            Object.values(rangeAttackHelper[i - 1]).forEach((rangetile) => {\r\n              updatedState.tiles[rangetile.currentTile].adjacent\r\n                .filter(\r\n                  (rangetile_key) =>\r\n                    !updatedState.tiles[rangetile.prevTile].adjacent.includes(\r\n                      rangetile_key\r\n                    ) && rangetile_key !== rangetile.prevTile\r\n                )\r\n                .forEach((rangetile_adj) => {\r\n                  let valid = true;\r\n                  updatedState.tiles[rangetile_adj].adjacent\r\n                    .filter(\r\n                      (rangetile_adj_key) =>\r\n                        rangetile_adj_key !== rangetile.currentTile\r\n                    )\r\n                    .forEach((rangetile_adj_adj) => {\r\n                      if (\r\n                        updatedState.tiles[rangetile_adj_adj].adjacent.includes(\r\n                          rangetile.prevTile\r\n                        )\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    });\r\n                  if (updatedState.tiles[rangetile_adj].adjacentNonTile) {\r\n                    if (\r\n                      updatedState.tiles[\r\n                        rangetile_adj\r\n                      ].adjacentNonTile.includes(\"D\")\r\n                    ) {\r\n                      if (\r\n                        updatedState.gods[\r\n                          updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                        ].adjacent.includes(rangetile.prevTile)\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    } else {\r\n                      if (\r\n                        updatedState.data.board.wells[\r\n                          updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                        ].adjacent.includes(rangetile.prevTile)\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    }\r\n                  }\r\n                  if (\r\n                    valid &&\r\n                    !rangeAttack.includes(rangetile_adj) &&\r\n                    !updatedState.data.board.tiles[rangetile.currentTile]\r\n                      .occupant.player\r\n                  ) {\r\n                    rangeAttack.push(rangetile_adj);\r\n                    rangeAttackHelper[i][rangetile_adj] = {\r\n                      prevTile: rangetile.currentTile,\r\n                      currentTile: rangetile_adj,\r\n                    };\r\n                  }\r\n                });\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const moveRequirementsMet = (tile_id) => {\r\n        if (updatedState.data.board.tiles[tile_id].occupant.player) {\r\n          return false;\r\n        }\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n            0 &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n        ) {\r\n          if (!rangeTiles.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (updatedState.data.board.tiles[data.tile_id].occupant.hasMoved) {\r\n            return false;\r\n          }\r\n          if (isTaunted) return false;\r\n          if (\r\n            updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n              .special.jump\r\n          ) {\r\n            if (!jumpTiles.includes(tile_id) && !rangeTiles.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          } else {\r\n            if (!rangeTiles.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        if (\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .aquatic &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .flying\r\n        ) {\r\n          if (updatedState.data.board.tiles[tile_id].type === \"none\") {\r\n            return false;\r\n          }\r\n        }\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .aquatic &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .flying\r\n        ) {\r\n          if (\r\n            updatedState.data.board.tiles[tile_id].type !== \"lake\" &&\r\n            updatedState.data.board.tiles[tile_id].type !== \"none\"\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      };\r\n      const attackRequirementsMet = (tile_id) => {\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n          if (!rangeAttack.includes(tile_id)) {\r\n            if (!updatedState.tiles[data.tile_id].adjacent.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          if (!updatedState.tiles[data.tile_id].adjacent.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        }\r\n        if (\r\n          !updatedState.data.board.tiles[tile_id].occupant.player ||\r\n          updatedState.data.board.tiles[tile_id].occupant.player === data.player\r\n        ) {\r\n          return false;\r\n        }\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.hasAttacked) {\r\n          return false;\r\n        }\r\n        return true;\r\n      };\r\n      if (updatedState.tiles[data.tile_id].occupantSelected) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          if (moveRequirementsMet(key)) {\r\n            updatedState.tiles[key].selectable = true;\r\n          }\r\n          if (attackRequirementsMet(key)) {\r\n            updatedState.tiles[key].occupantSelectable = true;\r\n          } else if (data.tile_id !== key) {\r\n            updatedState.tiles[key].occupantSelectable = false;\r\n          }\r\n        });\r\n        updatedState.currentAction = \"occupant_selected\";\r\n      } else {\r\n        if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n          Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          });\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = true;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasDashed = true;\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.haste\r\n        ) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n        updatedState.currentAction = \"\";\r\n      }\r\n      const god = data.player === \"player1\" ? \"D0\" : \"D6\";\r\n      const rangeAttackArrayHelper =\r\n        data.player === \"player1\"\r\n          ? [\"B1\", \"F1\", \"D2\", \"D3\", \"D4\", \"D5\"]\r\n          : [\"B5\", \"F5\", \"D1\", \"D2\", \"D3\", \"D4\"];\r\n      if (updatedState.tiles[data.tile_id].occupantSelected) {\r\n        if (!updatedState.data.board.tiles[data.tile_id].occupant.hasAttacked) {\r\n          if (\r\n            updatedState.data.board.tiles[data.tile_id].occupant.ranged &&\r\n            !updatedState.gods[god].adjacent.includes(data.tile_id)\r\n          ) {\r\n            const rangeAttackArray = rangeAttack.filter((attacktile) =>\r\n              updatedState.gods[god].adjacent.includes(attacktile)\r\n            );\r\n            if (\r\n              rangeAttackArray.length === 1 &&\r\n              !updatedState.data.board.tiles[rangeAttackArray[0]].occupant\r\n                .player &&\r\n              rangeAttackArrayHelper.includes(data.tile_id)\r\n            ) {\r\n              updatedState.gods[god].selectable = true;\r\n            }\r\n          } else {\r\n            if (updatedState.gods[god].adjacent.includes(data.tile_id)) {\r\n              updatedState.gods[god].selectable = true;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        updatedState.gods[god].selectable = false;\r\n      }\r\n      return updatedState;\r\n    },\r\n    MOVE_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_tile_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      updatedState.data.board.tiles[data.tile_id].occupant =\r\n        updatedState.data.board.tiles[selected_tile_id].occupant;\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: { summon: false, gift: false, lastword: false },\r\n        effectUsed: false,\r\n      };\r\n      updatedState.data.board.tiles[selected_tile_id].occupant = removeOccupant;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_tile_id].occupantSelected = false;\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n          0 &&\r\n        !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n      ) {\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasDashed = true;\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.haste\r\n        ) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasMoved = true;\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n          updatedState.data.board.tiles[\r\n            data.tile_id\r\n          ].occupant.hasAttacked = true;\r\n        }\r\n        Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n          if (\r\n            updatedState.data.board.wells[key].adjacent.includes(\r\n              data.tile_id\r\n            ) &&\r\n            updatedState.data.board.wells[key].available\r\n          ) {\r\n            updatedState.data.board.wells[key].available = false;\r\n            updatedState.data.board.wells[key].collected = true;\r\n            updatedState.data[data.player].faeria += 1;\r\n          }\r\n        });\r\n      }\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n      updatedState.currentAction = \"\";\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n      return updatedState;\r\n    },\r\n    ATTACK_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const attacker =\r\n        updatedState.data.board.tiles[selected_occupant_id].occupant;\r\n      const defender = updatedState.data.board.tiles[data.tile_id].occupant;\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: { summon: false, gift: false, lastword: false },\r\n        effectUsed: false,\r\n      };\r\n      if (\r\n        updatedState.tiles[data.tile_id].adjacent.includes(selected_occupant_id)\r\n      ) {\r\n        attacker.health -= defender.attack;\r\n      }\r\n      if (defender.protection) {\r\n        defender.protection = false;\r\n      } else {\r\n        defender.health -= attacker.attack;\r\n      }\r\n      attacker.hasAttacked = true;\r\n      attacker.hasMoved = true;\r\n      attacker.hasDashed = true;\r\n      updatedState.data.board.tiles[selected_occupant_id].occupant =\r\n        attacker.health > 0 ? attacker : removeOccupant;\r\n      updatedState.data.board.tiles[data.tile_id].occupant =\r\n        defender.health > 0 ? defender : removeOccupant;\r\n      const EP = new EventProcessor(updatedState, data);\r\n      if (attacker.health <= 0 && attacker.effects.lastword) {\r\n        EP.processLastwordEffect(attacker, selected_occupant_id);\r\n      }\r\n      if (defender.health <= 0 && defender.effects.lastword) {\r\n        EP.processLastwordEffect(defender, data.tile_id);\r\n      }\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_occupant_id].occupantSelected = false;\r\n      updatedState.currentAction = \"\";\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n      return updatedState;\r\n    },\r\n    ATTACK_GOD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const attacker =\r\n        updatedState.data.board.tiles[selected_occupant_id].occupant;\r\n      updatedState.data.board.gods[data.god].health -= attacker.attack;\r\n      updatedState.data.board.gods[data.god].wasHit = true;\r\n      attacker.hasAttacked = true;\r\n      attacker.hasMoved = true;\r\n      updatedState.gods[data.god].selectable = false;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_occupant_id].occupantSelected = false;\r\n      updatedState.currentAction = \"\";\r\n      if (updatedState.data.board.gods[data.god].health <= 0) {\r\n        updatedState.data.status.finished = true;\r\n        updatedState.data.status.winner = data.player;\r\n      }\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n      return updatedState;\r\n    },\r\n    END_TURN: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data[data.opponent].wheel_used = false;\r\n      updatedState.data[data.opponent].faeria += 3;\r\n      const god = {\r\n        player1: \"D6\",\r\n        player2: \"D0\",\r\n      };\r\n      if (updatedState.data[data.opponent].deck.length > 0) {\r\n        if (updatedState.data[data.opponent].hand.length < 9) {\r\n          updatedState.data[data.opponent].hand.push(\r\n            updatedState.data[data.opponent].deck.splice(0, 1)[0]\r\n          );\r\n        } else {\r\n          updatedState.data[data.opponent].deck.splice(0, 1);\r\n        }\r\n      } else {\r\n        updatedState.data.board.gods[\r\n          god[data.opponent]\r\n        ].health -= ++updatedState.data[data.opponent].health_dmg;\r\n      }\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: { summon: false, gift: false, lastword: false },\r\n        effectUsed: false,\r\n      };\r\n      Object.keys(updatedState.data.board.tiles).forEach((key) => {\r\n        if (\r\n          (updatedState.data.board.tiles[key].occupant.movement.special\r\n            .aquatic &&\r\n            !updatedState.data.board.tiles[key].occupant.movement.special\r\n              .flying &&\r\n            updatedState.data.board.tiles[key].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[key].type !== \"lake\" &&\r\n            updatedState.data.board.tiles[key].type !== \"none\") ||\r\n          (!updatedState.data.board.tiles[key].occupant.movement.special\r\n            .aquatic &&\r\n            !updatedState.data.board.tiles[key].occupant.movement.special\r\n              .flying &&\r\n            updatedState.data.board.tiles[key].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[key].type === \"none\")\r\n        ) {\r\n          updatedState.data.board.tiles[key].occupant = removeOccupant;\r\n        } else {\r\n          updatedState.data.board.tiles[key].occupant.hasMoved = false;\r\n          updatedState.data.board.tiles[key].occupant.hasAttacked = false;\r\n        }\r\n      });\r\n      const anyAdjacent = (tile) =>\r\n        updatedState.data.board.tiles[tile].occupant.player === data.opponent;\r\n      Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n        if (updatedState.data.board.wells[key].adjacent.some(anyAdjacent)) {\r\n          updatedState.data.board.wells[key].available = false;\r\n          updatedState.data.board.wells[key].collected = true;\r\n          updatedState.data[data.opponent].faeria += 1;\r\n        } else {\r\n          updatedState.data.board.wells[key].available = true;\r\n          updatedState.data.board.wells[key].collected = false;\r\n        }\r\n      });\r\n      updatedState.data.status.turn += 1;\r\n      updatedState.data.status.current = data.opponent;\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      updatedState.currentAction = \"\";\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios.post(\r\n        \"http://localhost/faeria/Faeria/utils/saveState.php\",\r\n        formdata\r\n      );\r\n\r\n      return updatedState;\r\n    },\r\n  };\r\n  initStore(actions, loadStore);\r\n};\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport configureStore from \"./hooks-store/global-store\";\nimport axios from \"axios\";\n\nlet loadStore = {};\nconst formdata = new FormData();\nformdata.append(\"id\", document.getElementById(\"game_id\").value);\naxios\n  .post(\"http://localhost/faeria/Faeria/utils/getState.php\", formdata)\n  .then((res) => {\n    loadStore = JSON.parse(res.data);\n    configureStore(loadStore);\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"game\")\n    );\n  });\n"],"sourceRoot":""}