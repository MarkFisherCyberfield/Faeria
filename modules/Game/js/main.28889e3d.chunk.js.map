{"version":3,"sources":["hooks-store/store.js","assets/images/cards/images.js","assets/images/ui/icons.js","components/Game/Board/Tile/Occupant/Occupant.js","components/Game/Board/Tile/Tile.js","components/Game/Board/Well/Well.js","components/Game/Board/God/God.js","components/Game/Board/Board.js","components/Game/Hand/Card/Card.js","components/Game/Hand/Hand.js","assets/images/ui/images_ui.js","components/Game/Wheel/WheelButton/WheelButton.js","components/UI/EndTurnButton/EndTurnButton.js","components/Game/Wheel/Wheel.js","components/Game/Faeria/Faeria.js","components/Game/Deck/Deck.js","components/UI/Hexagon/Hexagon.js","components/UI/Infobox/Infobox.js","components/UI/MulliganModal/MulliganModal.js","components/Game/Game.js","App.js","hooks-store/event-processor.js","hooks-store/global-store.js","index.js"],"names":["globalState","listeners","actions","useStore","shouldListen","setState","useState","dispatch","actionIdentifier","payload","newState","listener","useEffect","push","filter","li","images","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","icons","aquatic_enemy","aquatic_enemyhover","aquatic_friendly","aquatic_friendlyhover","flying_enemy","flying_enemyhover","flying_friendly","flying_friendlyhover","jump_enemy","jump_enemyhover","jump_friendly","jump_friendlyhover","ranged_enemy","ranged_enemyhover","ranged_friendly","ranged_friendlyhover","scoot_enemy","scoot_enemyhover","scoot_friendly","scoot_friendlyhover","taunt_enemy","taunt_enemyhover","taunt_friendly","taunt_friendlyhover","Occupant","props","state","points_divine","x","y","join","occupantClass","data","board","tiles","tile","occupant","player","user","occupantSelectable","status","current","creatureClass","occupantSelected","iconClass","icon_taunt","taunt","rx","ry","width","height","fill","icon_ranged","ranged","icon_flying","movement","special","flying","icon_aquatic","aquatic","icon_jump","jump","icon_scoot","range","divine","points","className","protection","cx","cy","onClick","opponent","tile_id","currentAction","id","patternContentUnits","preserveAspectRatio","href","dy","attack","health","Tile","extraclass","selectable","tileclass","owner","type","hexSize","startPosX","startPosY","Math","sqrt","Fragment","Well","wellClass","collected","r","God","gods","god","textAnchor","stroke","strokeWidth","fontSize","Board","boardTilesMap","G","F","E","D","C","B","A","wellPositions","godPositions","Object","keys","map","column","i","Array","_","j","parity","columnNr","wells","indexOf","length","boardMaxHeight","style","justifyContent","display","Card","clickAction","mulligan","hand","index","cards","faeria_cost","faeria","hand_id","card_id","imgSrc","classname","alt","src","parseInt","Hand","cardClass","selected","alignSelf","align","images_ui","WheelButton","wheelbuttons","wheelbutton_id","EndTurnButton","btnText","turn","btnClass","btnClassText","btnOnClick","Wheel","offsetX","offsetY","wheel","wheelOutput","wheel_used","strokeColor","fillColor","position","bottom","left","Faeria","Deck","border","deckcounter","handcounter","Hexagon","Infobox","landCount","lands","f","l","m","d","values","forEach","charAt","getLandCount","landCounter","info_landcounter","margin","info_faeria","info_player","textAlign","name","info","deck","MulliganModal","initialHand","setInitialHand","btnDisabled","setBtnDisabled","swapHandler","event","newHand","JSON","parse","stringify","target","slice","getdata","FormData","append","axios","post","then","res","prevState","prevHand","cardsToReplace","replacePool","entries","card","includes","random","floor","splice","shuffledDeck","prevDeck","deckLength","postdata","catch","error","console","log","message","Game","document","getElementById","value","shuffle","timer","setTimeout","formdata","timestamp","Date","now","clearTimeout","finished","winner","flexWrap","app","EventProcessor","this","eventLibrary","summonEffectLibrary","giftEffectLibrary","lastwordEffectLibrary","key","wheel_neutral_counter","selected_card_id","getSelectedCard","selected_occupant_id","friendly","enemy","playerCheck","land_cost","forest","desert","mountain","lake","wild","base_attack","base_health","haste","dash","hasMoved","hasDashed","hasAttacked","effects","summon","gift","lastword","effectUsed","landtype","newTileState","anyAdjacent","anyAdjacentFromOccupant","god_key","tileType","tileOwner","adjacent","some","player1","player2","randomTiles","params","process","setSelectStateForOccupants","setSelectStateForAllTiles","setSelectStateForBuildTiles","getRemoveOccupant","processLastwordEffect","handleCustomDrawLogic","findIndex","getLandCostForType","tileAvailable","availableTiles","getRandomTiles","count","getOccupantByID","getLandCostForOccupant","setSelectStateForConditionalOccupants","configureStore","loadStore","userActions","initialState","SET_DATA","currentState","SHUFFLE_DECK","updatedState","CONFIRM_MULLIGAN","START_GAME","SELECT_LAND","newWheelState","action","DRAW_CARD","health_dmg","PLUS_FAERIA","BUILD_TILE","wheelbutton","SELECT_CARD","getLands","landtypes","canSpawnAdjacentToFriendliesArray","String","adjTile","valid","reduce","sum","currentValue","requirementsMet","SELECT_EVENT","runLogic","EP","initEventLogic","handleEventLogic","PROCESS_EVENT_OCCUPANT","PROCESS_EVENT_TILE","PROCESS_GIFT_OCCUPANT","processGiftEffect","SUMMON_CREATURE","newOccupant","available","processSummonEffect","initGiftEffect","SELECT_OCCUPANT","isTaunted","taunt_tile","jumpTiles","adjacent_tile","movementRange","rangeTiles","rangeTilesHelper","prevTile","currentTile","rangetile","rangetile_key","rangetile_adj","rangetile_adj_key","rangetile_adj_adj","adjacentNonTile","rangeAttack","rangeAttackHelper","moveRequirementsMet","attackRequirementsMet","rangeAttackArrayHelper","rangeAttackArray","attacktile","MOVE_OCCUPANT","selected_tile_id","ATTACK_OCCUPANT","attacker","defender","removeOccupant","ATTACK_GOD","wasHit","END_TURN","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.28889e3d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nlet globalState = {};\r\nlet listeners = [];\r\nlet actions = {};\r\n\r\nexport const useStore = (shouldListen = true) => {\r\n  const setState = useState(globalState)[1];\r\n\r\n  const dispatch = (actionIdentifier, payload) => {\r\n    const newState = actions[actionIdentifier](globalState, payload);\r\n    globalState = { ...globalState, ...newState };\r\n\r\n    for (const listener of listeners) {\r\n      listener(globalState);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shouldListen) {\r\n      listeners.push(setState);\r\n    }\r\n\r\n    return () => {\r\n      if (shouldListen) {\r\n        listeners = listeners.filter((li) => li !== setState);\r\n      }\r\n    };\r\n  }, [setState, shouldListen]);\r\n\r\n  return [globalState, dispatch];\r\n};\r\n\r\nexport const initStore = (userActions, initialState) => {\r\n  if (initialState) {\r\n    globalState = { ...globalState, ...initialState };\r\n  }\r\n  actions = { ...actions, ...userActions };\r\n};\r\n","const images = {\r\n    'cardback': 'assets/images/cards/cardback.jpg',\r\n    0: 'assets/images/cards/cheeksplore.jpg',\r\n    1: 'assets/images/cards/mercheek.jpg',\r\n    2: 'assets/images/cards/dolphin_cheekrider.jpg',\r\n    3: 'assets/images/cards/clamcheek.jpg',\r\n    4: 'assets/images/cards/ninjacheek.jpg',\r\n    5: 'assets/images/cards/song_of_the_mercheek.jpg',\r\n    6: 'assets/images/cards/cheek_in_a_bottle.jpg',\r\n    7: 'assets/images/cards/cheekie_in_a_lamp.jpg',\r\n    8: 'assets/images/cards/cheeklord.jpg',\r\n    9: 'assets/images/cards/rain_of_cheek.jpg',\r\n    10: 'assets/images/cards/cheekdrop.jpg',\r\n    11: 'assets/images/cards/cheekmoon.jpg',\r\n    12: 'assets/images/cards/cheekpearl.jpg',\r\n    13: 'assets/images/cards/crabcheek.jpg',\r\n    14: 'assets/images/cards/cheekcano.jpg',\r\n    15: 'assets/images/cards/cheekdevil.jpg',\r\n    16: 'assets/images/cards/cheekflame.jpg',\r\n    17: 'assets/images/cards/cheekblast.jpg',\r\n    18: 'assets/images/cards/cheekflame_faerie.jpg',\r\n    19: 'assets/images/cards/baby_cheekdevil.jpg',\r\n    20: 'assets/images/cards/ghostcheek_tower.jpg',\r\n    21: 'assets/images/cards/ghostcheek.jpg',\r\n    22: 'assets/images/cards/ghostcheek_alchemist.jpg',\r\n    23: 'assets/images/cards/cheekruption.jpg',\r\n    24: 'assets/images/cards/suncheek.jpg',\r\n    25: 'assets/images/cards/cheekflower.jpg',\r\n    26: 'assets/images/cards/cavecheek_dweller.jpg',\r\n    27: 'assets/images/cards/mushroom_cheek.jpg',\r\n    28: 'assets/images/cards/cheekshrooms.jpg',\r\n    29: 'assets/images/cards/cheektree_giant.jpg',\r\n    30: 'assets/images/cards/cheekworld_tree.jpg',\r\n    31: 'assets/images/cards/cheek_shaman.jpg',\r\n    32: 'assets/images/cards/cheekfox.jpg',\r\n    33: 'assets/images/cards/cheekbloom_spirit.jpg',\r\n    34: 'assets/images/cards/cheekshield_spirit.jpg',\r\n    35: 'assets/images/cards/cheek_dancers.jpg',\r\n}\r\n\r\nexport default images;","const icons = {\r\n    aquatic_enemy: 'assets/images/ui/aquatic_enemy.png',\r\n    aquatic_enemyhover: 'assets/images/ui/aquatic_enemyhover.png',\r\n    aquatic_friendly: 'assets/images/ui/aquatic_friendly.png',\r\n    aquatic_friendlyhover: 'assets/images/ui/aquatic_friendlyhover.png',\r\n    flying_enemy: 'assets/images/ui/flying_enemy.png',\r\n    flying_enemyhover: 'assets/images/ui/flying_enemyhover.png',\r\n    flying_friendly: 'assets/images/ui/flying_friendly.png',\r\n    flying_friendlyhover: 'assets/images/ui/flying_friendlyhover.png',\r\n    jump_enemy: 'assets/images/ui/jump_enemy.png',\r\n    jump_enemyhover: 'assets/images/ui/jump_enemyhover.png',\r\n    jump_friendly: 'assets/images/ui/jump_friendly.png',\r\n    jump_friendlyhover: 'assets/images/ui/jump_friendlyhover.png',\r\n    ranged_enemy: 'assets/images/ui/ranged_enemy.png',\r\n    ranged_enemyhover: 'assets/images/ui/ranged_enemyhover.png',\r\n    ranged_friendly: 'assets/images/ui/ranged_friendly.png',\r\n    ranged_friendlyhover: 'assets/images/ui/ranged_friendlyhover.png',\r\n    scoot_enemy: 'assets/images/ui/scoot_enemy.png',\r\n    scoot_enemyhover: 'assets/images/ui/scoot_enemyhover.png',\r\n    scoot_friendly: 'assets/images/ui/scoot_friendly.png',\r\n    scoot_friendlyhover: 'assets/images/ui/scoot_friendlyhover.png',\r\n    taunt_enemy: 'assets/images/ui/taunt_enemy.png',\r\n    taunt_enemyhover: 'assets/images/ui/taunt_enemyhover.png',\r\n    taunt_friendly: 'assets/images/ui/taunt_friendly.png',\r\n    taunt_friendlyhover: 'assets/images/ui/taunt_friendlyhover.png',\r\n}\r\n\r\nexport default icons;","import React from \"react\";\r\nimport { useStore } from \"../../../../../hooks-store/store\";\r\nimport \"./Occupant.css\";\r\nimport images from \"../../../../../assets/images/cards/images\";\r\nimport icons from \"../../../../../assets/images/ui/icons\";\r\n\r\nconst Occupant = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const points_divine = [\r\n    [props.x + 30, props.y - 10].join(),\r\n    [props.x - 10, props.y + 60].join(),\r\n    [props.x + 70, props.y + 60].join(),\r\n  ].join(\" \");\r\n\r\n  const occupantClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? state.tiles[props.tile].occupantSelectable &&\r\n        state.data.status.current === props.user\r\n        ? \"friendly-selectable\"\r\n        : \"friendly\"\r\n      : state.tiles[props.tile].occupantSelectable\r\n      ? \"enemy-selectable\"\r\n      : \"enemy\";\r\n  const creatureClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? state.tiles[props.tile].occupantSelected\r\n        ? \"creature-selected\"\r\n        : \"creature\"\r\n      : \"creature-enemy\";\r\n  const iconClass =\r\n    state.data.board.tiles[props.tile].occupant.player === props.user\r\n      ? \"friendly\"\r\n      : \"enemy\";\r\n  const icon_taunt = state.data.board.tiles[props.tile].occupant.taunt ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y - 7}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_taunt\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_ranged = state.data.board.tiles[props.tile].occupant.ranged ? (\r\n    <rect\r\n      x={props.x + 50}\r\n      y={props.y + 30}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_ranged\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_flying = state.data.board.tiles[props.tile].occupant.movement\r\n    .special.flying ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y + 45}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_flying\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_aquatic =\r\n    !icon_flying &&\r\n    state.data.board.tiles[props.tile].occupant.movement.special.aquatic ? (\r\n      <rect\r\n        x={props.x + 20}\r\n        y={props.y + 45}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        fill={\"url(#icon_aquatic\" + props.tile + \")\"}\r\n      />\r\n    ) : null;\r\n  const icon_jump = state.data.board.tiles[props.tile].occupant.movement.special\r\n    .jump ? (\r\n    <rect\r\n      x={props.x + 20}\r\n      y={props.y + 65}\r\n      rx=\"5\"\r\n      ry=\"5\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill={\"url(#icon_jump\" + props.tile + \")\"}\r\n    />\r\n  ) : null;\r\n  const icon_scoot =\r\n    !icon_jump &&\r\n    state.data.board.tiles[props.tile].occupant.movement.range > 1 ? (\r\n      <rect\r\n        x={props.x + 20}\r\n        y={props.y + 65}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        fill={\"url(#icon_scoot\" + props.tile + \")\"}\r\n      />\r\n    ) : null;\r\n  const divine = state.data.board.tiles[props.tile].occupant.divine ? (\r\n    <polygon points={points_divine} className=\"divine\" />\r\n  ) : null;\r\n  const protection = state.data.board.tiles[props.tile].occupant.protection ? (\r\n    <ellipse\r\n      cx={props.x + 30}\r\n      cy={props.y + 39}\r\n      rx=\"49\"\r\n      ry=\"49\"\r\n      className=\"protection\"\r\n    />\r\n  ) : null;\r\n\r\n  const occupantHandler = () => {\r\n    if (\r\n      state.tiles[props.tile].occupantSelectable &&\r\n      state.data.status.current === props.user\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        tile_id: props.tile,\r\n      };\r\n      if (state.currentAction === \"gift_occupant\") {\r\n        dispatch(\"PROCESS_GIFT_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"event_occupant\") {\r\n        dispatch(\"PROCESS_EVENT_OCCUPANT\", payload);\r\n      } else {\r\n        if (state.data.board.tiles[props.tile].occupant.player === props.user) {\r\n          dispatch(\"SELECT_OCCUPANT\", payload);\r\n        } else if (state.currentAction === \"occupant_selected\") {\r\n          dispatch(\"ATTACK_OCCUPANT\", payload);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const occupant = (\r\n    <g className={occupantClass} onClick={occupantHandler}>\r\n      <defs>\r\n        <pattern\r\n          id={\"creature-image\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={images[state.data.board.tiles[props.tile].occupant.id]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_aquatic\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"aquatic_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_flying\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"flying_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_jump\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"jump_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_ranged\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"ranged_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_scoot\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"scoot_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n        <pattern\r\n          id={\"icon_taunt\" + props.tile}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={icons[\"taunt_\" + iconClass]}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n\r\n      <rect\r\n        x={props.x}\r\n        y={props.y}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width={props.width}\r\n        height={(props.width / 3) * 4}\r\n        className={creatureClass}\r\n        fill={\"url(#creature-image\" + props.tile + \")\"}\r\n      />\r\n\r\n      {icon_taunt}\r\n      {icon_ranged}\r\n      {icon_flying}\r\n      {icon_aquatic}\r\n      {icon_jump}\r\n      {icon_scoot}\r\n\r\n      <rect\r\n        x={props.x}\r\n        y={props.y + 55}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"25\"\r\n        className=\"attack\"\r\n      />\r\n      <text x={props.x + 10} y={props.y + 70} dy=\".3em\" className=\"attack-text\">\r\n        {state.data.board.tiles[props.tile].occupant.attack}\r\n      </text>\r\n\r\n      <rect\r\n        x={props.x + 40}\r\n        y={props.y + 55}\r\n        rx=\"5\"\r\n        ry=\"5\"\r\n        width=\"20\"\r\n        height=\"25\"\r\n        className=\"health\"\r\n      />\r\n      <text x={props.x + 50} y={props.y + 70} dy=\".3em\" className=\"health-text\">\r\n        {state.data.board.tiles[props.tile].occupant.health}\r\n      </text>\r\n\r\n      {divine}\r\n      {protection}\r\n    </g>\r\n  );\r\n\r\n  return state.data.board.tiles[props.tile].occupant.id > 0 ? occupant : null;\r\n};\r\n\r\nexport default Occupant;\r\n","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport Occupant from \"./Occupant/Occupant\";\r\nimport \"./Tile.css\";\r\n\r\nconst Tile = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const extraclass =\r\n    state.tiles[props.id].selectable && state.data.status.current === props.user\r\n      ? \"tile-selectable\"\r\n      : \"tile-not-selectable\";\r\n  const tileclass =\r\n    state.data.board.tiles[props.id].owner !== props.user\r\n      ? props.type + \"-opponent\"\r\n      : props.type;\r\n\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  const tileHandler = () => {\r\n    if (\r\n      state.tiles[props.id].selectable &&\r\n      state.data.status.current === props.user\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        tile_id: props.id,\r\n      };\r\n      if (state.currentAction === \"summon_creature\") {\r\n        dispatch(\"SUMMON_CREATURE\", payload);\r\n      } else if (state.currentAction === \"occupant_selected\") {\r\n        dispatch(\"MOVE_OCCUPANT\", payload);\r\n      } else if (state.currentAction === \"event_tile\") {\r\n        dispatch(\"PROCESS_EVENT_TILE\", payload);\r\n      } else {\r\n        dispatch(\"BUILD_TILE\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <polygon\r\n        className={tileclass + \" \" + extraclass}\r\n        points={points}\r\n        onClick={tileHandler}\r\n      />\r\n      <Occupant\r\n        tile={props.id}\r\n        x={startPosX + hexSize * 0.5}\r\n        y={startPosY + Math.sqrt(3) * hexSize * 0.125}\r\n        width={hexSize}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\nimport \"./Well.css\";\r\n\r\nconst Well = (props) => {\r\n  const wellClass = props.data.collected ? \"well-collected\" : \"well-available\";\r\n\r\n  return (\r\n    <circle cx={props.cx} cy={props.cy} r={props.r} className={wellClass} />\r\n  );\r\n};\r\n\r\nexport default Well;\r\n","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport \"./God.css\";\r\n\r\nconst God = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const selectable = state.gods[props.id].selectable\r\n    ? \"god-selectable\"\r\n    : \"god-not-selectable\";\r\n\r\n  const godHandler = () => {\r\n    if (state.gods[props.id].selectable) {\r\n      const payload = { god: props.id, player: props.user };\r\n      dispatch(\"ATTACK_GOD\", payload);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <g className={selectable} onClick={godHandler}>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} />\r\n      <text\r\n        x={props.cx}\r\n        y={props.cy}\r\n        textAnchor=\"middle\"\r\n        stroke=\"#8B0000\"\r\n        strokeWidth=\"4px\"\r\n        fontSize=\"40px\"\r\n        dy=\".3em\"\r\n      >\r\n        {props.data.health}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default God;\r\n","import React from \"react\";\r\nimport Tile from \"./Tile/Tile\";\r\nimport Well from \"./Well/Well\";\r\nimport God from \"./God/God\";\r\n\r\nconst Board = (props) => {\r\n  const hexSize = 60;\r\n  const boardMaxHeight = 6;\r\n  const godMaxHeight = boardMaxHeight + 1;\r\n  const boardTilesMap =\r\n    props.user === \"player2\"\r\n      ? { G: 2, F: 5, E: 6, D: 5, C: 6, B: 5, A: 2 }\r\n      : { A: 2, B: 5, C: 6, D: 5, E: 6, F: 5, G: 2 };\r\n  const wellPositions =\r\n    props.user === \"player2\"\r\n      ? { G: [3, 0], A: [3, 0] }\r\n      : { A: [0, 3], G: [0, 3] };\r\n  const godPositions = props.user === \"player2\" ? { D: [6, 0] } : { D: [0, 6] };\r\n\r\n  const tiles = Object.keys(boardTilesMap).map((column, i) => {\r\n    return [...Array(boardTilesMap[column])].map((_, j) => {\r\n      let parity = i % 2 === 0;\r\n      let columnNr =\r\n        props.user === \"player2\" ? boardTilesMap[column] - j : j + 1;\r\n      return (\r\n        <Tile\r\n          key={column + columnNr}\r\n          id={column + columnNr}\r\n          type={props.data.tiles[column + columnNr].type}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 1.5}\r\n          startPosY={\r\n            parity\r\n              ? Math.sqrt(3) *\r\n                  hexSize *\r\n                  ((boardMaxHeight - boardTilesMap[column]) * 0.5 + j) +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n              : Math.sqrt(3) * hexSize * j + Math.sqrt(3) * hexSize\r\n          }\r\n          user={props.user}\r\n          opponent={props.opponent}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const wells = Object.keys(wellPositions).map((column) => {\r\n    return wellPositions[column].map((_, i) => {\r\n      let parity = Object.keys(boardTilesMap).indexOf(column) % 2 === 0;\r\n      return (\r\n        <Well\r\n          key={\"well-\" + column + wellPositions[column][i]}\r\n          id={\"well-\" + column + wellPositions[column][i]}\r\n          data={props.data.wells[column + wellPositions[column][i]]}\r\n          r={hexSize * 0.5}\r\n          cx={\r\n            hexSize * 1.5 * Object.keys(boardTilesMap).indexOf(column) + hexSize\r\n          }\r\n          cy={\r\n            parity\r\n              ? (boardMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  wellPositions[column].length +\r\n                  [0, 3][i]) *\r\n                Math.sqrt(3) *\r\n                hexSize\r\n              : (boardMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  wellPositions[column].length +\r\n                  [0, 3][i]) *\r\n                  Math.sqrt(3) *\r\n                  hexSize +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n          }\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const gods = Object.keys(godPositions).map((column) => {\r\n    return godPositions[column].map((_, i) => {\r\n      let parity = Object.keys(boardTilesMap).indexOf(column) % 2 === 0;\r\n      return (\r\n        <God\r\n          key={\"god-\" + column + godPositions[column][i]}\r\n          id={column + godPositions[column][i]}\r\n          data={props.data.gods[column + godPositions[column][i]]}\r\n          r={hexSize * 0.65}\r\n          cx={\r\n            hexSize * 1.5 * Object.keys(boardTilesMap).indexOf(column) + hexSize\r\n          }\r\n          cy={\r\n            parity\r\n              ? (godMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  godPositions[column].length +\r\n                  [0, 6][i]) *\r\n                Math.sqrt(3) *\r\n                hexSize\r\n              : (godMaxHeight -\r\n                  boardTilesMap[column] -\r\n                  godPositions[column].length +\r\n                  [0, 6][i]) *\r\n                  Math.sqrt(3) *\r\n                  hexSize +\r\n                Math.sqrt(3) * hexSize * 0.5\r\n          }\r\n          user={props.user}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"60vw\", justifyContent: \"center\", display: \"flex\" }}>\r\n      <svg\r\n        width={\r\n          hexSize * 1.5 * Object.keys(boardTilesMap).length + hexSize * 0.5\r\n        }\r\n        height={Math.sqrt(3) * hexSize * godMaxHeight}\r\n      >\r\n        {tiles}\r\n        {wells}\r\n        {gods}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport images from \"../../../../assets/images/cards/images\";\r\nimport \"./Card.css\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\n\r\nconst Card = (props) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  const cardHandler = () => {\r\n    if (\r\n      state.hand[props.index].selectable &&\r\n      state.data[props.user].cards[props.id].faeria_cost <=\r\n        state.data[props.user].faeria\r\n    ) {\r\n      const payload = {\r\n        player: props.user,\r\n        opponent: props.opponent,\r\n        hand_id: props.index,\r\n        card_id: props.id,\r\n      };\r\n      if (state.data[props.user].cards[props.id].type === \"event\") {\r\n        dispatch(\"SELECT_EVENT\", payload);\r\n      } else {\r\n        dispatch(\"SELECT_CARD\", payload);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cardDisabled = () => {};\r\n\r\n  const clickAction = state.data[props.user].mulligan\r\n    ? props.clickAction\r\n    : state.data.status.current !== props.user || props.owner !== props.user\r\n    ? cardDisabled\r\n    : cardHandler;\r\n\r\n  const imgSrc =\r\n    props.owner === props.opponent ? images[\"cardback\"] : images[props.data.id];\r\n\r\n  return (\r\n    <div className={props.classname} onClick={clickAction}>\r\n      <img\r\n        id={props.index}\r\n        alt=\"\"\r\n        src={imgSrc}\r\n        width={props.width}\r\n        height={parseInt(props.height) - 6 + \"px\"}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst Hand = (props) => {\r\n  const state = useStore()[0];\r\n\r\n  const cards = props.data.hand.map((id, index) => {\r\n    const cardClass =\r\n      state.hand[index + 1].selected && props.user === props.owner\r\n        ? \"-selected\"\r\n        : \"\";\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index + 1}\r\n        data={props.data.cards[id]}\r\n        height={props.height}\r\n        width=\"120px\"\r\n        classname={\"card\" + cardClass}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.owner}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"60vw\",\r\n        height: props.height,\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        alignSelf: props.align,\r\n      }}\r\n    >\r\n      {cards}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hand;\r\n","const images_ui = {\r\n    'wheel-B3': 'assets/images/ui/pluscard.png',\r\n    'wheel-C2': 'assets/images/ui/pluscheekia.png',\r\n}\r\n\r\nexport default images_ui;","import React from \"react\";\r\nimport { useStore } from \"../../../../hooks-store/store\";\r\nimport images_ui from \"../../../../assets/images/ui/images_ui\";\r\n\r\nconst WheelButton = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const selectable = state.wheelbuttons[props.id].selectable\r\n    ? \"\"\r\n    : \" not-selectable\";\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  const selectHandler = () => {\r\n    if (state.wheelbuttons[props.id].selectable) {\r\n      switch (props.id) {\r\n        case \"wheel-B3\":\r\n          dispatch(\"DRAW_CARD\", props.user);\r\n          break;\r\n        case \"wheel-C2\":\r\n          dispatch(\"PLUS_FAERIA\", props.user);\r\n          break;\r\n        default:\r\n          dispatch(\"SELECT_LAND\", {\r\n            player: props.user,\r\n            wheelbutton_id: props.id,\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <g>\r\n      <defs>\r\n        <pattern\r\n          id={\"buttonimage-\" + props.id}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          patternContentUnits=\"objectBoundingBox\"\r\n        >\r\n          <image\r\n            height=\"1\"\r\n            width=\"1\"\r\n            preserveAspectRatio=\"none\"\r\n            href={images_ui[props.id]}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n      <polygon\r\n        className={props.className + selectable}\r\n        fill={\"url(#buttonimage-\" + props.id + \")\"}\r\n        id={props.id}\r\n        points={points}\r\n        onClick={selectHandler}\r\n      />\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default WheelButton;\r\n","import React from \"react\";\r\nimport \"./EndTurnButton.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst EndTurnButton = (props) => {\r\n  const dispatch = useStore()[1];\r\n\r\n  const endTurnHandler = () => {\r\n    const payload = {\r\n      player: props.user,\r\n      opponent: props.opponent,\r\n      id: props.id,\r\n    };\r\n    dispatch(\"END_TURN\", payload);\r\n  };\r\n\r\n  const enemyTurnHandler = () => {};\r\n\r\n  const btnText =\r\n    props.data.turn === 0\r\n      ? \"MULLIGAN\"\r\n      : props.opponent === props.data.current\r\n      ? \"ENEMY TURN\"\r\n      : \"END TURN\";\r\n  const btnClass =\r\n    props.opponent === props.data.current\r\n      ? \"enemyturn-button\"\r\n      : \"endturn-button\";\r\n  const btnClassText =\r\n    props.opponent === props.data.current ? \"enemyturn-text\" : \"endturn-text\";\r\n  const btnOnClick =\r\n    props.data.turn === 0 || props.opponent === props.data.current\r\n      ? enemyTurnHandler\r\n      : endTurnHandler;\r\n\r\n  return (\r\n    <g onClick={btnOnClick}>\r\n      <rect\r\n        x=\"50\"\r\n        y=\"125\"\r\n        rx=\"20\"\r\n        ry=\"20\"\r\n        width=\"200\"\r\n        height=\"50\"\r\n        className={btnClass}\r\n      />\r\n      <text x=\"150\" y=\"150\" fontSize=\"25\" className={btnClassText} dy=\".3em\">\r\n        {btnText}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default EndTurnButton;\r\n","import React from \"react\";\r\nimport WheelButton from \"./WheelButton/WheelButton\";\r\nimport EndTurnButton from \"../../UI/EndTurnButton/EndTurnButton\";\r\nimport \"./Wheel.css\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\n\r\nconst Wheel = (props) => {\r\n  const state = useStore()[0];\r\n\r\n  const hexSize = 40;\r\n  const boardTilesMap = { A: 2, B: 3, C: 2 };\r\n  const boardMaxHeight = 3;\r\n  const offsetX =\r\n    (300 -\r\n      (hexSize * 1.5 * Object.keys(boardTilesMap).length + hexSize * 0.5)) *\r\n    0.5;\r\n  const offsetY =\r\n    (300 - Math.sqrt(3) * hexSize * boardMaxHeight - Math.sqrt(3) * hexSize) *\r\n    0.5;\r\n\r\n  const wheel = Object.keys(boardTilesMap).map((column, i) => {\r\n    return [...Array(boardTilesMap[column])].map((_, j) => {\r\n      let parity = i % 2 !== 0;\r\n      return (\r\n        <WheelButton\r\n          key={\"wheel-\" + column + (j + 1)}\r\n          id={\"wheel-\" + column + (j + 1)}\r\n          className={\"wheel-\" + column + (j + 1)}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 1.5 + offsetX}\r\n          startPosY={\r\n            parity\r\n              ? Math.sqrt(3) *\r\n                  hexSize *\r\n                  ((boardMaxHeight - boardTilesMap[column]) * 0.5 + j) +\r\n                Math.sqrt(3) * hexSize * 0.5 +\r\n                offsetY\r\n              : Math.sqrt(3) * hexSize * j + Math.sqrt(3) * hexSize + offsetY\r\n          }\r\n          user={props.user}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  const wheelOutput = !state.data[props.user].wheel_used ? (\r\n    wheel\r\n  ) : (\r\n    <EndTurnButton\r\n      data={props.data}\r\n      user={props.user}\r\n      opponent={props.opponent}\r\n      id={props.id}\r\n    />\r\n  );\r\n  const strokeColor =\r\n    props.data.current === props.opponent ? \"#962d3e\" : \"#00FA9A\";\r\n  const fillColor =\r\n    props.data.current === props.opponent ? \"#262626\" : \"#2F4F4F\";\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"300px\",\r\n        height: \"300px\",\r\n        position: \"absolute\",\r\n        bottom: \"50px\",\r\n        left: \"50px\",\r\n      }}\r\n    >\r\n      <svg width=\"300px\" height=\"300\">\r\n        <circle\r\n          cx=\"150\"\r\n          cy=\"150\"\r\n          r=\"145\"\r\n          stroke={strokeColor}\r\n          strokeWidth=\"5\"\r\n          fill={fillColor}\r\n        />\r\n        {wheelOutput}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n","import React from \"react\";\r\n\r\nconst Faeria = (props) => {\r\n  return (\r\n    <svg>\r\n      <g>\r\n        <circle\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          r=\"50\"\r\n          stroke=\"#001920\"\r\n          strokeWidth=\"5\"\r\n          fill=\"#00bae8\"\r\n        />\r\n        <text\r\n          x=\"50%\"\r\n          y=\"50%\"\r\n          stroke=\"#001920\"\r\n          strokeWidth=\"3px\"\r\n          textAnchor=\"middle\"\r\n          fontSize=\"50px\"\r\n          dy=\".3em\"\r\n        >\r\n          {props.faeria}\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Faeria;\r\n","import React from \"react\";\r\n\r\nconst Deck = (props) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div style={{ border: \"5px solid #001920\" }}>\r\n        Deck: {props.deckcounter}\r\n      </div>\r\n      <div style={{ border: \"5px solid #001920\" }}>\r\n        Hand: {props.handcounter}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\n\r\nconst Hexagon = (props) => {\r\n  const hexSize = props.hexSize;\r\n  const startPosX = props.startPosX;\r\n  const startPosY = props.startPosY;\r\n  const points = [\r\n    [startPosX + hexSize * 0.5, startPosY].join(),\r\n    [startPosX + hexSize * 1.5, startPosY].join(),\r\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\r\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\r\n  ].join(\" \");\r\n\r\n  return <polygon className={props.className} points={points} />;\r\n};\r\n\r\nexport default Hexagon;\r\n","import React from \"react\";\r\nimport Faeria from \"../../Game/Faeria/Faeria\";\r\nimport Deck from \"../../Game/Deck/Deck\";\r\nimport Hexagon from \"../Hexagon/Hexagon\";\r\nimport \"./Infobox.css\";\r\n\r\nconst Infobox = (props) => {\r\n  const landCount = getLandCount(props.tiles, props.player);\r\n  const align = props.align;\r\n  const hexSize = 20;\r\n  const landCounter = Object.keys(landCount).map((column, i) => {\r\n    return (\r\n      <g key={column} id={column}>\r\n        <Hexagon\r\n          className={column}\r\n          hexSize={hexSize}\r\n          startPosX={hexSize * i * 2.5 + 8}\r\n          startPosY={hexSize - hexSize * Math.sqrt(3) * 0.5}\r\n        />\r\n        <text\r\n          x={hexSize * i * 2.5 + hexSize + 8}\r\n          y={\r\n            hexSize * Math.sqrt(3) * 0.5 +\r\n            (hexSize - hexSize * Math.sqrt(3) * 0.5)\r\n          }\r\n          className={column + \"-text\"}\r\n          fontSize={hexSize}\r\n          dy=\".3em\"\r\n        >\r\n          {landCount[column]}\r\n        </text>\r\n      </g>\r\n    );\r\n  });\r\n  const info_landcounter = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <svg height={hexSize * 2} width=\"208px\" display=\"block\" margin=\"auto\">\r\n        {landCounter}\r\n      </svg>\r\n    </div>\r\n  );\r\n  const info_faeria = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Faeria faeria={props.data.faeria} />\r\n    </div>\r\n  );\r\n  const info_player = (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div\r\n        style={{\r\n          width: \"50%\",\r\n          border: \"5px solid #001920\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <b>{props.data.name}</b>\r\n      </div>\r\n    </div>\r\n  );\r\n  const info =\r\n    align === \"flex-end\" ? (\r\n      <React.Fragment>\r\n        {info_landcounter}\r\n        {info_faeria}\r\n        {info_player}\r\n        <Deck\r\n          deckcounter={props.data.deck.length}\r\n          handcounter={props.data.hand.length}\r\n        />\r\n      </React.Fragment>\r\n    ) : (\r\n      <React.Fragment>\r\n        <Deck\r\n          deckcounter={props.data.deck.length}\r\n          handcounter={props.data.hand.length}\r\n        />\r\n        {info_player}\r\n        {info_faeria}\r\n        {info_landcounter}\r\n      </React.Fragment>\r\n    );\r\n  return (\r\n    <div\r\n      style={{\r\n        alignSelf: align,\r\n        margin: \"25px\",\r\n      }}\r\n    >\r\n      {info}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getLandCount(tiles, player) {\r\n  let lands = { f: 0, l: 0, m: 0, d: 0 };\r\n  Object.values(tiles).forEach((tile) => {\r\n    if (tile.owner === player && tile.type.charAt(0) !== \"p\") {\r\n      lands[tile.type.charAt(0)] += 1;\r\n    }\r\n  });\r\n  return lands;\r\n}\r\n\r\nexport default Infobox;\r\n","import React, { useState } from \"react\";\r\nimport \"./MulliganModal.css\";\r\nimport Card from \"../../Game/Hand/Card/Card\";\r\nimport { useStore } from \"../../../hooks-store/store\";\r\nimport axios from \"axios\";\r\n\r\nconst MulliganModal = (props) => {\r\n  const [state, dispatch] = useStore();\r\n  const [initialHand, setInitialHand] = useState({\r\n    0: false,\r\n    1: false,\r\n    2: false,\r\n  });\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n\r\n  const swapHandler = (event) => {\r\n    const newHand = JSON.parse(JSON.stringify(initialHand));\r\n    newHand[event.target.id] = !newHand[event.target.id];\r\n    setInitialHand(newHand);\r\n  };\r\n\r\n  const classname = (index) => {\r\n    return !initialHand[index] ? \"card-mulligan\" : \"card-mulligan-selected\";\r\n  };\r\n\r\n  const cards = state.data[props.user].deck.slice(0, 3).map((id, index) => {\r\n    return (\r\n      <Card\r\n        key={id}\r\n        id={id}\r\n        index={index}\r\n        data={state.data[props.user].cards[id]}\r\n        height=\"486px\"\r\n        width=\"360px\"\r\n        clickAction={swapHandler}\r\n        classname={classname(index)}\r\n        user={props.user}\r\n        opponent={props.opponent}\r\n        owner={props.user}\r\n      />\r\n    );\r\n  });\r\n\r\n  const confirmHandler = () => {\r\n    if (btnDisabled) {\r\n      return;\r\n    }\r\n    setBtnDisabled(true);\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const getdata = new FormData();\r\n    getdata.append(\"id\", props.id);\r\n    axios\r\n      .post(\"https://cheekia.loca.lt/faeria/Faeria/utils/getState.php\", getdata)\r\n      .then((res) => {\r\n        const prevState = JSON.parse(res.data);\r\n        newState.data[props.opponent] = prevState.data[props.opponent];\r\n        const prevHand = newState.data[props.user].deck.slice(0, 3);\r\n        const cardsToReplace = [];\r\n        const newHand = [];\r\n        for (let i = 0; i < prevHand.length; i++) {\r\n          if (initialHand[i]) {\r\n            cardsToReplace.push(\r\n              newState.data[props.user].cards[prevHand[i]].id\r\n            );\r\n          } else {\r\n            newHand.push(parseInt(prevHand[i]));\r\n          }\r\n        }\r\n        const replacePool = Object.entries(\r\n          newState.data[props.user].cards\r\n        ).filter(\r\n          (card) =>\r\n            !cardsToReplace.includes(card[1].id) &&\r\n            !newHand.includes(parseInt(card[0])) &&\r\n            parseInt(card[0]) !== 0\r\n        );\r\n        for (let i = 0; i < cardsToReplace.length; i++) {\r\n          let random = Math.floor(Math.random() * replacePool.length);\r\n          newHand.push(parseInt(replacePool[random][0]));\r\n          replacePool.splice(random, 1);\r\n        }\r\n        const shuffledDeck = [];\r\n        const prevDeck = newState.data[props.user].deck.filter(\r\n          (card) => !newHand.includes(card)\r\n        );\r\n        const deckLength = prevDeck.length;\r\n        for (let i = 0; i < deckLength; i++) {\r\n          let random = Math.floor(Math.random() * prevDeck.length);\r\n          shuffledDeck.push(prevDeck[random]);\r\n          prevDeck.splice(random, 1);\r\n        }\r\n        if (props.user === \"player2\") {\r\n          newHand.push(0);\r\n        }\r\n        newState.data[props.user].deck = shuffledDeck;\r\n        newState.data[props.user].hand = newHand;\r\n        newState.data[props.user].mulligan = false;\r\n        const postdata = new FormData();\r\n        postdata.append(\"react_state\", JSON.stringify(newState));\r\n        postdata.append(\"id\", props.id);\r\n        axios\r\n          .post(\r\n            \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n            postdata\r\n          )\r\n          .then(() => {\r\n            dispatch(\"CONFIRM_MULLIGAN\", newState);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Network Error\", error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Network Error\", error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div style={{ justifyContent: \"center\", display: \"flex\", height: \"75%\" }}>\r\n        {cards}\r\n      </div>\r\n      <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n        <div className=\"modal-confirm\" onClick={confirmHandler}>\r\n          CONFIRM\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MulliganModal;\r\n","import React, { useEffect } from \"react\";\r\nimport Board from \"./Board/Board\";\r\nimport Hand from \"./Hand/Hand\";\r\nimport Wheel from \"./Wheel/Wheel\";\r\nimport Infobox from \"../UI/Infobox/Infobox\";\r\nimport MulliganModal from \"../UI/MulliganModal/MulliganModal\";\r\nimport { useStore } from \"../../hooks-store/store\";\r\nimport axios from \"axios\";\r\n\r\nconst Game = () => {\r\n  const [state, dispatch] = useStore();\r\n  const user = document.getElementById(\"user\").value;\r\n  const opponent = document.getElementById(\"opponent\").value;\r\n  const id = document.getElementById(\"game_id\").value;\r\n\r\n  useEffect(() => {\r\n    const payload = { player: user, opponent: opponent, id: id };\r\n    if (!state.data[user].shuffle) {\r\n      dispatch(\"SHUFFLE_DECK\", payload);\r\n    }\r\n    if (\r\n      !state.data[user].mulligan &&\r\n      !state.data[opponent].mulligan &&\r\n      state.data.status.turn === 0 &&\r\n      user === \"player1\"\r\n    ) {\r\n      dispatch(\"START_GAME\", payload);\r\n    }\r\n    if (\r\n      (state.data.status.current === opponent && !state.data[user].mulligan ) ||\r\n      (!state.data[user].mulligan && state.data[opponent].mulligan)\r\n    ) {\r\n      const timer = setTimeout(() => {\r\n        const formdata = new FormData();\r\n        formdata.append(\"id\", id);\r\n        let timestamp = Date.now();\r\n        axios\r\n          .post(\r\n            \"https://cheekia.loca.lt/faeria/Faeria/utils/getState.php?timestamp=\" +\r\n              timestamp,\r\n            formdata\r\n          )\r\n          .then((res) => {\r\n            dispatch(\"SET_DATA\", JSON.parse(res.data));\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Network Error\", error.message);\r\n          });\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const mulligan = state.data[user].mulligan ? (\r\n    <MulliganModal user={user} opponent={opponent} id={id} />\r\n  ) : null;\r\n\r\n  const output = state.data.status.finished ? (\r\n    <h1 style={{ textAlign: \"center\" }}>\r\n      WINNER: {state.data[state.data.status.winner].name}\r\n    </h1>\r\n  ) : (\r\n    <div style={{ display: \"flex\", height: \"100vh\" }}>\r\n      {mulligan}\r\n      <div\r\n        style={{\r\n          width: \"20vw\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Infobox\r\n          align=\"flex-start\"\r\n          data={state.data[opponent]}\r\n          tiles={state.data.board.tiles}\r\n          player={opponent}\r\n        />\r\n        <Infobox\r\n          align=\"flex-end\"\r\n          data={state.data[user]}\r\n          tiles={state.data.board.tiles}\r\n          player={user}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"60vw\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Hand\r\n          data={state.data[opponent]}\r\n          owner={opponent}\r\n          height=\"36px\"\r\n          align=\"flex-start\"\r\n          user={user}\r\n          opponent={opponent}\r\n        />\r\n        <Board data={state.data.board} user={user} opponent={opponent} />\r\n        <Hand\r\n          data={state.data[user]}\r\n          owner={user}\r\n          height=\"166px\"\r\n          align=\"flex-end\"\r\n          user={user}\r\n          opponent={opponent}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"20vw\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Wheel\r\n          data={state.data.status}\r\n          user={user}\r\n          opponent={opponent}\r\n          id={id}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return output;\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./components/Game/Game\";\n\nconst app = () => {\n  return <Game />;\n};\n\nexport default app;\n","export default class EventProcessor {\r\n  constructor(state, data) {\r\n    this.state = state;\r\n    this.data = data;\r\n    this.eventLibrary = {\r\n      0: \"processEvent_0\",\r\n      5: \"processEvent_5\",\r\n      6: \"processEvent_6\",\r\n      7: \"processEvent_7\",\r\n      9: \"processEvent_9\",\r\n      11: \"processEvent_11\",\r\n    };\r\n    this.summonEffectLibrary = {\r\n      8: \"processSummonEffect_8\",\r\n    };\r\n    this.giftEffectLibrary = {\r\n      1: \"processGiftEffect_1\",\r\n    };\r\n    this.lastwordEffectLibrary = {\r\n      3: \"processLastwordEffect_3\",\r\n    };\r\n  }\r\n  initEventLogic() {\r\n    const newHand = this.state.hand;\r\n    newHand[this.data.hand_id].selected = !newHand[this.data.hand_id].selected;\r\n    if (newHand[this.data.hand_id].selected) {\r\n      this[\r\n        this.eventLibrary[\r\n          this.state.data[this.data.player].cards[this.data.card_id].id\r\n        ]\r\n      ](\"init\");\r\n    } else {\r\n      this[\r\n        this.eventLibrary[\r\n          this.state.data[this.data.player].cards[this.data.card_id].id\r\n        ]\r\n      ](\"revert\");\r\n    }\r\n    Object.keys(newHand).forEach((key) => {\r\n      if (parseInt(key) !== this.data.hand_id) {\r\n        newHand[key].selectable = !newHand[key].selectable;\r\n      }\r\n    });\r\n    this.state.hand = newHand;\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        if (newHand[this.data.hand_id].selected) {\r\n          this.state.wheelbuttons[key].selectable = false;\r\n        } else {\r\n          this.state.wheelbuttons[key].selectable = true;\r\n        }\r\n      });\r\n    } else {\r\n      if (newHand[this.data.hand_id].selected) {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      } else {\r\n        this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n    }\r\n    return this.state;\r\n  }\r\n  handleEventLogic() {\r\n    const selected_card_id = this.getSelectedCard();\r\n    this[\r\n      this.eventLibrary[\r\n        this.state.data[this.data.player].cards[\r\n          this.state.data[this.data.player].hand[selected_card_id - 1]\r\n        ].id\r\n      ]\r\n    ](\"handle\");\r\n    const newHand = this.state.hand;\r\n    newHand[selected_card_id].selected = !newHand[selected_card_id].selected;\r\n    Object.keys(newHand).forEach((key) => {\r\n      newHand[key].selectable = true;\r\n    });\r\n    this.state.hand = newHand;\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        this.state.wheelbuttons[key].selectable = true;\r\n      });\r\n    } else {\r\n      this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n    }\r\n    this.state.currentAction = \"\";\r\n    this.state.data[this.data.player].faeria -= this.state.data[\r\n      this.data.player\r\n    ].cards[\r\n      this.state.data[this.data.player].hand[selected_card_id - 1]\r\n    ].faeria_cost;\r\n    this.state.data[this.data.player].hand.splice(selected_card_id - 1, 1);\r\n    return this.state;\r\n  }\r\n  processSummonEffect(occupant) {\r\n    this[this.summonEffectLibrary[occupant.id]]();\r\n    return this.state;\r\n  }\r\n  initGiftEffect(occupant) {\r\n    this[this.giftEffectLibrary[occupant.id]](\"init\", occupant);\r\n    return this.state;\r\n  }\r\n  processGiftEffect(selected_occupant_id) {\r\n    const occupant = this.state.data.board.tiles[selected_occupant_id].occupant;\r\n    this[this.giftEffectLibrary[occupant.id]](\"handle\", selected_occupant_id);\r\n    this.state.tiles[selected_occupant_id].occupantSelected = false;\r\n    this.state.currentAction = \"\";\r\n    Object.keys(this.state.hand).forEach((key) => {\r\n      this.state.hand[key].selectable = true;\r\n    });\r\n    if (this.state.data[this.data.player].wheel_neutral_counter !== 1) {\r\n      Object.keys(this.state.wheelbuttons).forEach((key) => {\r\n        this.state.wheelbuttons[key].selectable = true;\r\n      });\r\n    } else {\r\n      this.state.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n    }\r\n    return this.state;\r\n  }\r\n  processLastwordEffect(occupant, tile) {\r\n    this[this.lastwordEffectLibrary[occupant.id]](occupant, tile);\r\n    return this.state;\r\n  }\r\n\r\n  //HELPERS\r\n\r\n  setSelectStateForOccupants(friendly, enemy) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(\r\n          this.state.data.board.tiles[key].occupant.player\r\n        ) &&\r\n        !this.state.data.board.tiles[key].occupant.divine\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectStateForConditionalOccupants(friendly, enemy, attack) {\r\n    const playerCheck = [];\r\n    if (friendly) {\r\n      playerCheck.push(this.data.player);\r\n    }\r\n    if (enemy) {\r\n      playerCheck.push(this.data.opponent);\r\n    }\r\n    Object.keys(this.state.data.board.tiles).forEach((key) => {\r\n      if (\r\n        playerCheck.includes(\r\n          this.state.data.board.tiles[key].occupant.player\r\n        ) &&\r\n        !this.state.data.board.tiles[key].occupant.divine &&\r\n        this.state.data.board.tiles[key].occupant.attack <= attack\r\n      ) {\r\n        this.state.tiles[key].occupantSelectable = true;\r\n      } else {\r\n        this.state.tiles[key].occupantSelectable = false;\r\n      }\r\n    });\r\n  }\r\n  getSelectedCard() {\r\n    return parseInt(\r\n      Object.keys(this.state.hand).filter(\r\n        (key) => this.state.hand[key].selected\r\n      )[0]\r\n    );\r\n  }\r\n  getRemoveOccupant() {\r\n    return {\r\n      player: \"\",\r\n      id: 0,\r\n      type: \"\",\r\n      faeria_cost: 0,\r\n      land_cost: {\r\n        forest: 0,\r\n        desert: 0,\r\n        mountain: 0,\r\n        lake: 0,\r\n        wild: 0,\r\n      },\r\n      attack: 0,\r\n      base_attack: 0,\r\n      health: 0,\r\n      base_health: 0,\r\n      movement: {\r\n        range: 1,\r\n        haste: true,\r\n        dash: 0,\r\n        special: {\r\n          aquatic: false,\r\n          flying: false,\r\n          jump: false,\r\n        },\r\n      },\r\n      taunt: false,\r\n      divine: false,\r\n      protection: false,\r\n      ranged: false,\r\n      hasMoved: false,\r\n      hasDashed: false,\r\n      hasAttacked: false,\r\n      effects: { summon: false, gift: false, lastword: false },\r\n      effectUsed: false,\r\n    };\r\n  }\r\n  setSelectStateForBuildTiles(landtype) {\r\n    const newTileState = this.state.tiles;\r\n    const anyAdjacent = (tile) =>\r\n      this.state.data.board.tiles[tile].owner === this.data.player;\r\n    const anyAdjacentFromOccupant = (tile) =>\r\n      this.state.data.board.tiles[tile].occupant.player === this.data.player &&\r\n      this.state.data.board.tiles[tile].type !== \"none\";\r\n    const god_key = Object.keys(this.state.gods).filter(\r\n      (god) => this.state.gods[god].player === this.data.player\r\n    );\r\n    Object.keys(newTileState).forEach((key) => {\r\n      let tileType = this.state.data.board.tiles[key].type;\r\n      let tileOwner = this.state.data.board.tiles[key].owner;\r\n      if (\r\n        tileType === \"none\" ||\r\n        (tileType === \"prairie\" && tileOwner === this.data.player)\r\n      ) {\r\n        if (\r\n          newTileState[key].adjacent.some(anyAdjacent) ||\r\n          newTileState[key].adjacent.some(anyAdjacentFromOccupant) ||\r\n          this.state.gods[god_key].adjacent.includes(key)\r\n        ) {\r\n          if (\r\n            !this.state.data.board.tiles[key].occupant.movement.special.aquatic\r\n          ) {\r\n            newTileState[key].selectable = true;\r\n          } else if (landtype === \"lake\") {\r\n            newTileState[key].selectable = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.state.tiles = newTileState;\r\n  }\r\n\r\n  setSelectStateForAllTiles(selectable) {\r\n    Object.keys(this.state.tiles).forEach((key) => {\r\n      this.state.tiles[key].selectable = selectable;\r\n    });\r\n  }\r\n\r\n  getGodTile() {\r\n    const god = {\r\n      player1: \"D6\",\r\n      player2: \"D0\",\r\n    };\r\n    return god[this.data.player];\r\n  }\r\n\r\n  getLandCostForType(card, type) {\r\n    return this.state.data[this.data.player].cards[card].land_cost[type];\r\n  }\r\n\r\n  getLandCostForOccupant(tile, type) {\r\n    return this.state.data.board.tiles[tile].occupant.land_cost[type];\r\n  }\r\n\r\n  handleCustomDrawLogic(index) {\r\n    if (index !== -1) {\r\n      if (this.state.data[this.data.player].hand.length < 10) {\r\n        this.state.data[this.data.player].hand.push(\r\n          this.state.data[this.data.player].deck.splice(index, 1)[0]\r\n        );\r\n      } else {\r\n        this.state.data[this.data.player].deck.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  getRandomTiles() {\r\n    const randomTiles = Object.keys(this.state.data.board.tiles);\r\n    for (let i = randomTiles.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [randomTiles[i], randomTiles[j]] = [randomTiles[j], randomTiles[i]];\r\n    }\r\n    return randomTiles;\r\n  }\r\n\r\n  getOccupantByID(id, params = {}) {\r\n    switch (id) {\r\n      case 10:\r\n        return {\r\n          player: this.data.player,\r\n          id: 10,\r\n          type: \"creature\",\r\n          faeria_cost: 1,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 1, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: true,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: { summon: false, gift: false, lastword: false },\r\n          effectUsed: false,\r\n        };\r\n      case 12:\r\n        return {\r\n          player: params.player,\r\n          id: 12,\r\n          type: \"creature\",\r\n          faeria_cost: 2,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 2, wild: 0 },\r\n          attack: 1,\r\n          base_attack: 1,\r\n          health: 1,\r\n          base_health: 1,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: true,\r\n          divine: true,\r\n          protection: true,\r\n          ranged: false,\r\n          hasMoved: true,\r\n          hasDashed: false,\r\n          hasAttacked: true,\r\n          effects: { summon: false, gift: false, lastword: false },\r\n          effectUsed: false,\r\n        };\r\n      case 13:\r\n        return {\r\n          player: this.data.player,\r\n          id: 13,\r\n          type: \"creature\",\r\n          faeria_cost: 4,\r\n          land_cost: { forest: 0, desert: 0, mountain: 0, lake: 2, wild: 0 },\r\n          attack: 6,\r\n          base_attack: 6,\r\n          health: 4,\r\n          base_health: 4,\r\n          movement: {\r\n            range: 1,\r\n            haste: false,\r\n            dash: 0,\r\n            special: {\r\n              aquatic: false,\r\n              flying: false,\r\n              jump: false,\r\n            },\r\n          },\r\n          taunt: false,\r\n          divine: false,\r\n          protection: false,\r\n          ranged: false,\r\n          hasMoved: params.hasMoved,\r\n          hasDashed: false,\r\n          hasAttacked: params.hasAttacked,\r\n          effects: { summon: false, gift: false, lastword: false },\r\n          effectUsed: false,\r\n        };\r\n      default:\r\n        return {};\r\n    }\r\n  }\r\n\r\n  //EVENTS\r\n\r\n  //0 - Explore\r\n  processEvent_0(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(false, false);\r\n      this.setSelectStateForBuildTiles(\"prairie\");\r\n      this.state.currentAction = \"event_tile\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.data[this.data.player].faeria += 2;\r\n      this.state.data.board.tiles[this.data.tile_id].type = \"prairie\";\r\n      this.state.data.board.tiles[this.data.tile_id].owner = this.data.player;\r\n    }\r\n  }\r\n\r\n  //5 - Song of the Mercheek\r\n  processEvent_5(process) {\r\n    if (process === \"revert\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      this.state.currentAction = \"\";\r\n    }\r\n    if (process === \"init\") {\r\n      this.setSelectStateForOccupants(true, true);\r\n      this.state.currentAction = \"event_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      this.setSelectStateForOccupants(true, false);\r\n      const target = this.state.data.board.tiles[this.data.tile_id].occupant;\r\n      target.health = Math.floor(target.health / 2);\r\n      target.attack =\r\n        Math.floor(target.attack / 2) >= 0 ? Math.floor(target.attack / 2) : 0;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant =\r\n        target.health > 0 ? target : this.getRemoveOccupant();\r\n      if (target.health <= 0 && target.effects.lastword) {\r\n        this.processLastwordEffect(target, this.data.tile_id);\r\n      }\r\n    }\r\n  }\r\n\r\n  //6 - Cheek in a bottle\r\n  processEvent_6(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 3; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex(\r\n            (card) => this.getLandCostForType(card, \"lake\") > 0\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //7 - Cheekie in a lamp\r\n  processEvent_7(process) {\r\n    if (process === \"handle\") {\r\n      for (let i = 0; i < 2; i++) {\r\n        this.handleCustomDrawLogic(\r\n          this.state.data[this.data.player].deck.findIndex(\r\n            (card) =>\r\n              this.state.data[this.data.player].cards[card].type === \"event\"\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //9 - Rain of Cheek\r\n  processEvent_9(process) {\r\n    if (process === \"handle\") {\r\n      let tileAvailable = true;\r\n      const availableTiles = this.getRandomTiles().filter(\r\n        (tile) => !this.state.data.board.tiles[tile].occupant.player\r\n      );\r\n      let count = 0;\r\n      while (tileAvailable) {\r\n        if (availableTiles.length !== 0) {\r\n          this.state.data.board.tiles[\r\n            availableTiles.splice(0, 1)\r\n          ].occupant = this.getOccupantByID(10);\r\n          if (++count === 6) {\r\n            tileAvailable = false;\r\n          }\r\n        } else {\r\n          tileAvailable = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //11 - Mooncheek\r\n  processEvent_11(process) {\r\n    if (process === \"handle\") {\r\n      Object.keys(this.state.data.board.tiles)\r\n        .filter(\r\n          (key) =>\r\n            this.state.data.board.tiles[key].occupant.player ===\r\n              this.data.player && this.getLandCostForOccupant(key, \"lake\") > 0\r\n        )\r\n        .forEach((tile) => {\r\n          this.state.data.board.tiles[tile].occupant = this.getOccupantByID(\r\n            13,\r\n            {\r\n              hasAttacked: this.state.data.board.tiles[tile].occupant\r\n                .hasAttacked,\r\n              hasMoved: this.state.data.board.tiles[tile].occupant.hasMoved,\r\n            }\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  //Creatures - Summon Effects\r\n\r\n  //8 - Cheek lord\r\n  processSummonEffect_8() {\r\n    const anyAdjacentOccupant = (tile) =>\r\n      this.state.data.board.tiles[tile].occupant.player === this.data.player &&\r\n      this.state.data.board.tiles[tile].occupant.land_cost.lake > 0;\r\n    if (\r\n      this.state.tiles[this.data.tile_id].adjacent.some(anyAdjacentOccupant)\r\n    ) {\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.attack++;\r\n      this.state.data.board.tiles[this.data.tile_id].occupant.health++;\r\n    }\r\n  }\r\n\r\n  //Creatures - Lastword Effects\r\n\r\n  //3 - Clamcheek\r\n  processLastwordEffect_3(occupant, tile) {\r\n    this.state.data.board.tiles[tile].occupant = this.getOccupantByID(12, {\r\n      player: occupant.player,\r\n    });\r\n  }\r\n\r\n  //Creatures - Gift Effects\r\n\r\n  //1 - Mercheek\r\n  processGiftEffect_1(process, selected_occupant_id) {\r\n    if (process === \"init\") {\r\n      this.setSelectStateForConditionalOccupants(false, true, 2);\r\n      this.setSelectStateForAllTiles(false);\r\n      this.state.tiles[this.data.tile_id].occupantSelected = true;\r\n      this.state.tiles[this.data.tile_id].occupantSelectable = true;\r\n      this.state.currentAction = \"gift_occupant\";\r\n    }\r\n    if (process === \"handle\") {\r\n      if (this.data.tile_id !== selected_occupant_id) {\r\n        this.state.data.board.tiles[\r\n          this.data.tile_id\r\n        ].occupant.player = this.data.player;\r\n        this.state.data.board.tiles[this.data.tile_id].occupant.hasMoved = true;\r\n        this.state.data.board.tiles[\r\n          this.data.tile_id\r\n        ].occupant.hasAttacked = true;\r\n      }\r\n      this.setSelectStateForOccupants(true, false);\r\n    }\r\n  }\r\n}\r\n","import { initStore } from \"./store\";\r\nimport EventProcessor from \"./event-processor\";\r\nimport axios from \"axios\";\r\n\r\nconst configureStore = (loadStore) => {\r\n  const actions = {\r\n    SET_DATA: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState = data;\r\n      return updatedState;\r\n    },\r\n    SHUFFLE_DECK: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const shuffledDeck = [];\r\n      for (let i = 0; i < currentState.data[data.player].deck.length; i++) {\r\n        let random = Math.floor(\r\n          Math.random() * updatedState.data[data.player].deck.length\r\n        );\r\n        shuffledDeck.push(updatedState.data[data.player].deck[random]);\r\n        updatedState.data[data.player].deck.splice(random, 1);\r\n      }\r\n      updatedState.data[data.player].deck = shuffledDeck;\r\n      updatedState.data[data.player].shuffle = true;\r\n      const newState = JSON.parse(JSON.stringify(updatedState));\r\n      const getdata = new FormData();\r\n      getdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/getState.php\",\r\n          getdata\r\n        )\r\n        .then((res) => {\r\n          const prevState = JSON.parse(res.data);\r\n          newState.data[data.opponent] = prevState.data[data.opponent];\r\n          const postdata = new FormData();\r\n          postdata.append(\"react_state\", JSON.stringify(newState));\r\n          postdata.append(\"id\", data.id);\r\n          axios\r\n            .post(\r\n              \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n              postdata\r\n            )\r\n            .catch((error) => {\r\n              console.log(\"Network Error\", error.message);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    CONFIRM_MULLIGAN: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState = data;\r\n      return updatedState;\r\n    },\r\n    START_GAME: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n\r\n      updatedState.data.status.turn = 1;\r\n      updatedState.data[data.player].wheel_used = false;\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_LAND: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newWheelState = updatedState.wheelbuttons;\r\n      newWheelState[data.wheelbutton_id].selected = !newWheelState[\r\n        data.wheelbutton_id\r\n      ].selected;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(newWheelState).forEach((key) => {\r\n          if (key !== data.wheelbutton_id) {\r\n            newWheelState[key].selectable = !newWheelState[key].selectable;\r\n          }\r\n        });\r\n      }\r\n      if (newWheelState[data.wheelbutton_id].selected) {\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].occupantSelectable = false;\r\n        });\r\n      } else {\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = true;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n      }\r\n      updatedState.wheelbuttons = newWheelState;\r\n      const newTileState = updatedState.tiles;\r\n      const anyAdjacent = (tile) =>\r\n        updatedState.data.board.tiles[tile].owner === data.player;\r\n      const anyAdjacentFromOccupant = (tile) =>\r\n        updatedState.data.board.tiles[tile].occupant.player === data.player &&\r\n        updatedState.data.board.tiles[tile].type !== \"none\";\r\n      const god_key = Object.keys(updatedState.gods).filter(\r\n        (god) => updatedState.gods[god].player === data.player\r\n      );\r\n      if (updatedState.wheelbuttons[data.wheelbutton_id].selected) {\r\n        Object.keys(newTileState).forEach((key) => {\r\n          let tileType = updatedState.data.board.tiles[key].type;\r\n          let tileOwner = updatedState.data.board.tiles[key].owner;\r\n          if (\r\n            tileType === \"none\" ||\r\n            (tileType === \"prairie\" && tileOwner === data.player)\r\n          ) {\r\n            if (\r\n              newTileState[key].adjacent.some(anyAdjacent) ||\r\n              newTileState[key].adjacent.some(anyAdjacentFromOccupant) ||\r\n              updatedState.gods[god_key].adjacent.includes(key)\r\n            ) {\r\n              if (\r\n                !updatedState.data.board.tiles[key].occupant.movement.special\r\n                  .aquatic\r\n              ) {\r\n                newTileState[key].selectable = true;\r\n              } else if (\r\n                updatedState.wheelbuttons[data.wheelbutton_id].action === \"lake\"\r\n              ) {\r\n                newTileState[key].selectable = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        Object.keys(newTileState).forEach((key) => {\r\n          newTileState[key].selectable = false;\r\n        });\r\n      }\r\n      updatedState.tiles = newTileState;\r\n      return updatedState;\r\n    },\r\n    DRAW_CARD: (currentState, player) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const god = {\r\n        player1: \"D6\",\r\n        player2: \"D0\",\r\n      };\r\n      if (updatedState.data[player].deck.length > 0) {\r\n        if (updatedState.data[player].hand.length < 9) {\r\n          updatedState.data[player].hand.push(\r\n            updatedState.data[player].deck.splice(0, 1)[0]\r\n          );\r\n        } else {\r\n          updatedState.data[player].deck.splice(0, 1);\r\n        }\r\n      } else {\r\n        updatedState.data.board.gods[god[player]].health -= ++updatedState.data[\r\n          player\r\n        ].health_dmg;\r\n      }\r\n      updatedState.data[player].wheel_used = true;\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PLUS_FAERIA: (currentState, player) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data[player].faeria++;\r\n      updatedState.data[player].wheel_used = true;\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    BUILD_TILE: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      let type = \"none\";\r\n      Object.values(updatedState.wheelbuttons).forEach((wheelbutton) => {\r\n        if (wheelbutton.selected) {\r\n          type = wheelbutton.action;\r\n        }\r\n      });\r\n      updatedState.data.board.tiles[data.tile_id].type = type;\r\n      updatedState.data.board.tiles[data.tile_id].owner = data.player;\r\n      const wheelbutton_id = Object.keys(updatedState.wheelbuttons).filter(\r\n        (key) => updatedState.wheelbuttons[key].selected\r\n      );\r\n      updatedState.wheelbuttons[wheelbutton_id].selected = false;\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      if (type === \"prairie\") {\r\n        updatedState.data[data.player].wheel_neutral_counter += 1;\r\n      }\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n        updatedState.data[data.player].wheel_used = true;\r\n        updatedState.data[data.player].wheel_neutral_counter = 0;\r\n      }\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_CARD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newHand = updatedState.hand;\r\n      newHand[data.hand_id].selected = !newHand[data.hand_id].selected;\r\n      Object.keys(newHand).forEach((key) => {\r\n        if (parseInt(key) !== data.hand_id) {\r\n          newHand[key].selectable = !newHand[key].selectable;\r\n        }\r\n      });\r\n      updatedState.hand = newHand;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          if (newHand[data.hand_id].selected) {\r\n            updatedState.wheelbuttons[key].selectable = false;\r\n          } else {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          }\r\n        });\r\n      } else {\r\n        if (newHand[data.hand_id].selected) {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n      }\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        if (newHand[data.hand_id].selected) {\r\n          updatedState.tiles[key].occupantSelectable = false;\r\n        } else {\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        }\r\n      });\r\n      const getLands = () => {\r\n        let lands = { forest: 0, lake: 0, mountain: 0, desert: 0 };\r\n        Object.values(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (tile.owner === data.player && tile.type !== \"prairie\") {\r\n            lands[tile.type] += 1;\r\n          }\r\n        });\r\n        return lands;\r\n      };\r\n      const lands = getLands();\r\n      const getLandTypes = () => {\r\n        return Object.keys(\r\n          updatedState.data[data.player].cards[data.card_id].land_cost\r\n        ).filter(\r\n          (key) =>\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n              0 && key !== \"wild\"\r\n        );\r\n      };\r\n      const landtypes = getLandTypes();\r\n      const requirementsMet = (tile) => {\r\n        const canSpawnAdjacentToFriendliesArray = {\r\n          8: \"lake\", //Cheek lord\r\n        };\r\n        const canSpawnAdjacentToFriendlies = (adjTile) => {\r\n          return (\r\n            updatedState.data.board.tiles[adjTile].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[adjTile].occupant.land_cost[\r\n              canSpawnAdjacentToFriendliesArray[\r\n                updatedState.data[data.player].cards[data.card_id].id\r\n              ]\r\n            ] > 0\r\n          );\r\n        };\r\n        if (\r\n          Object.keys(canSpawnAdjacentToFriendliesArray).includes(\r\n            String(updatedState.data[data.player].cards[data.card_id].id)\r\n          )\r\n        ) {\r\n          if (\r\n            !updatedState.tiles[tile].adjacent.some(\r\n              canSpawnAdjacentToFriendlies\r\n            ) &&\r\n            (!landtypes.includes(updatedState.data.board.tiles[tile].type) ||\r\n              updatedState.data.board.tiles[tile].owner !== data.player)\r\n          ) {\r\n            return false;\r\n          }\r\n          if (\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .aquatic &&\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .flying\r\n          ) {\r\n            if (updatedState.data.board.tiles[tile].type === \"none\") {\r\n              return false;\r\n            }\r\n          }\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .aquatic &&\r\n            !updatedState.data[data.player].cards[data.card_id].movement.special\r\n              .flying\r\n          ) {\r\n            if (\r\n              updatedState.data.board.tiles[tile].type !== \"none\" &&\r\n              updatedState.data.board.tiles[tile].type !== \"lake\"\r\n            ) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          if (updatedState.data.board.tiles[tile].owner !== data.player) {\r\n            return false;\r\n          }\r\n          if (!landtypes.includes(updatedState.data.board.tiles[tile].type)) {\r\n            return false;\r\n          }\r\n        }\r\n        if (updatedState.data.board.tiles[tile].occupant.player) {\r\n          return false;\r\n        }\r\n        let valid = true;\r\n        Object.keys(\r\n          updatedState.data[data.player].cards[data.card_id].land_cost\r\n        ).forEach((key) => {\r\n          if (key !== \"wild\") {\r\n            if (\r\n              updatedState.data[data.player].cards[data.card_id].land_cost[\r\n                key\r\n              ] > lands[key]\r\n            ) {\r\n              valid = false;\r\n            }\r\n          } else {\r\n            if (\r\n              updatedState.data[data.player].cards[data.card_id].land_cost[\r\n                key\r\n              ] >\r\n              Object.values(lands).reduce(\r\n                (sum, currentValue) => sum + currentValue\r\n              )\r\n            ) {\r\n              valid = false;\r\n            }\r\n          }\r\n        });\r\n        return valid;\r\n      };\r\n      if (newHand[data.hand_id].selected) {\r\n        updatedState.currentAction = \"summon_creature\";\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          if (requirementsMet(key)) {\r\n            updatedState.tiles[key].selectable = true;\r\n          }\r\n        });\r\n      } else {\r\n        updatedState.currentAction = \"\";\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n        });\r\n      }\r\n      return updatedState;\r\n    },\r\n    SELECT_EVENT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const getLands = () => {\r\n        let lands = { forest: 0, lake: 0, mountain: 0, desert: 0 };\r\n        Object.values(updatedState.data.board.tiles).forEach((tile) => {\r\n          if (tile.owner === data.player && tile.type !== \"prairie\") {\r\n            lands[tile.type] += 1;\r\n          }\r\n        });\r\n        return lands;\r\n      };\r\n      const lands = getLands();\r\n      let runLogic = true;\r\n      Object.keys(\r\n        updatedState.data[data.player].cards[data.card_id].land_cost\r\n      ).forEach((key) => {\r\n        if (key !== \"wild\") {\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n            lands[key]\r\n          ) {\r\n            runLogic = false;\r\n          }\r\n        } else {\r\n          if (\r\n            updatedState.data[data.player].cards[data.card_id].land_cost[key] >\r\n            Object.values(lands).reduce(\r\n              (sum, currentValue) => sum + currentValue\r\n            )\r\n          ) {\r\n            runLogic = false;\r\n          }\r\n        }\r\n      });\r\n      if (runLogic) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        if (updatedState.data[data.player].cards[data.card_id].effects.target) {\r\n          updatedState = EP.initEventLogic();\r\n        } else {\r\n          updatedState.hand[data.hand_id].selected = !updatedState.hand[\r\n            data.hand_id\r\n          ].selected;\r\n          updatedState = EP.handleEventLogic();\r\n          const formdata = new FormData();\r\n          formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n          formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n          axios\r\n            .post(\r\n              \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n              formdata\r\n            )\r\n            .catch((error) => {\r\n              console.log(\"Network Error\", error.message);\r\n            });\r\n        }\r\n      }\r\n      return updatedState;\r\n    },\r\n    PROCESS_EVENT_OCCUPANT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.handleEventLogic();\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PROCESS_EVENT_TILE: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.handleEventLogic();\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    PROCESS_GIFT_OCCUPANT: (currentState, data) => {\r\n      let updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const EP = new EventProcessor(updatedState, data);\r\n      updatedState = EP.processGiftEffect(selected_occupant_id);\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SUMMON_CREATURE: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const newOccupant = updatedState.data.board.tiles[data.tile_id].occupant;\r\n      newOccupant.player = data.player;\r\n      const selected_card_id = parseInt(\r\n        Object.keys(updatedState.hand).filter(\r\n          (key) => updatedState.hand[key].selected\r\n        )[0]\r\n      );\r\n      const card =\r\n        updatedState.data[data.player].cards[\r\n          updatedState.data[data.player].hand[selected_card_id - 1]\r\n        ];\r\n      newOccupant.id = card.id;\r\n      newOccupant.type = card.type;\r\n      newOccupant.faeria_cost = card.faeria_cost;\r\n      newOccupant.land_cost = card.land_cost;\r\n      newOccupant.attack = card.attack;\r\n      newOccupant.base_attack = card.base_attack;\r\n      newOccupant.health = card.health;\r\n      newOccupant.base_health = card.base_health;\r\n      newOccupant.movement = card.movement;\r\n      newOccupant.taunt = card.taunt;\r\n      newOccupant.divine = card.divine;\r\n      newOccupant.protection = card.protection;\r\n      newOccupant.ranged = card.ranged;\r\n      newOccupant.hasDashed = false;\r\n      newOccupant.effects = card.effects;\r\n      if (!card.movement.haste) {\r\n        newOccupant.hasMoved = true;\r\n        newOccupant.hasAttacked = true;\r\n      } else {\r\n        newOccupant.hasMoved = false;\r\n        newOccupant.hasAttacked = false;\r\n        if (card.movement.dash === 0) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      updatedState.data.board.tiles[data.tile_id].occupant = newOccupant;\r\n      const newHand = updatedState.hand;\r\n      newHand[selected_card_id].selected = !newHand[selected_card_id].selected;\r\n      if (newOccupant.effects.summon) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        EP.processSummonEffect(\r\n          updatedState.data.board.tiles[data.tile_id].occupant\r\n        );\r\n      }\r\n      if (newOccupant.effects.gift) {\r\n        const EP = new EventProcessor(updatedState, data);\r\n        newHand[selected_card_id].selectable = false;\r\n        EP.initGiftEffect(updatedState.data.board.tiles[data.tile_id].occupant);\r\n      } else {\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n        Object.keys(newHand).forEach((key) => {\r\n          newHand[key].selectable = true;\r\n        });\r\n        if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n          Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          });\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n        updatedState.currentAction = \"\";\r\n      }\r\n      updatedState.hand = newHand;\r\n      updatedState.data[data.player].faeria -=\r\n        updatedState.data[data.player].cards[\r\n          updatedState.data[data.player].hand[selected_card_id - 1]\r\n        ].faeria_cost;\r\n      updatedState.data[data.player].hand.splice(selected_card_id - 1, 1);\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    SELECT_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.tiles[data.tile_id].occupantSelected = !updatedState.tiles[\r\n        data.tile_id\r\n      ].occupantSelected;\r\n      const anyTaunt = (taunt_tile) =>\r\n        updatedState.data.board.tiles[taunt_tile].occupant.taunt &&\r\n        updatedState.data.board.tiles[taunt_tile].occupant.player ===\r\n          data.opponent;\r\n      const isTaunted = updatedState.tiles[data.tile_id].adjacent.some(\r\n        anyTaunt\r\n      );\r\n      const jumpTiles = [];\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n          .jump\r\n      ) {\r\n        updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n          if (!jumpTiles.includes(tile) && tile !== data.tile_id) {\r\n            jumpTiles.push(tile);\r\n          }\r\n          updatedState.tiles[tile].adjacent.forEach((adjacent_tile) => {\r\n            if (\r\n              !jumpTiles.includes(adjacent_tile) &&\r\n              adjacent_tile !== data.tile_id\r\n            ) {\r\n              jumpTiles.push(adjacent_tile);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      const movementRange =\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n          0 && !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n          ? updatedState.data.board.tiles[data.tile_id].occupant.movement.dash\r\n          : updatedState.data.board.tiles[data.tile_id].occupant.movement.range;\r\n      const rangeTiles = [];\r\n      const rangeTilesHelper = {};\r\n      for (let i = 1; i <= movementRange; i++) {\r\n        if (i === 1) {\r\n          rangeTilesHelper[i] = {};\r\n          updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n            let valid = true;\r\n            if (\r\n              updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.aquatic &&\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.flying\r\n            ) {\r\n              if (\r\n                updatedState.data.board.tiles[tile].type !== \"lake\" &&\r\n                updatedState.data.board.tiles[tile].type !== \"none\"\r\n              ) {\r\n                valid = false;\r\n              }\r\n            }\r\n            if (\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.aquatic &&\r\n              !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                .special.flying\r\n            ) {\r\n              if (updatedState.data.board.tiles[tile].type === \"none\") {\r\n                valid = false;\r\n              }\r\n            }\r\n            if (valid && !updatedState.data.board.tiles[tile].occupant.player) {\r\n              rangeTiles.push(tile);\r\n              rangeTilesHelper[i][tile] = {\r\n                prevTile: data.tile_id,\r\n                currentTile: tile,\r\n              };\r\n            }\r\n          });\r\n        } else {\r\n          rangeTilesHelper[i] = {};\r\n          Object.values(rangeTilesHelper[i - 1]).forEach((rangetile) => {\r\n            updatedState.tiles[rangetile.currentTile].adjacent\r\n              .filter(\r\n                (rangetile_key) =>\r\n                  !updatedState.tiles[rangetile.prevTile].adjacent.includes(\r\n                    rangetile_key\r\n                  ) && rangetile_key !== rangetile.prevTile\r\n              )\r\n              .forEach((rangetile_adj) => {\r\n                let valid = true;\r\n                updatedState.tiles[rangetile_adj].adjacent\r\n                  .filter(\r\n                    (rangetile_adj_key) =>\r\n                      rangetile_adj_key !== rangetile.currentTile\r\n                  )\r\n                  .forEach((rangetile_adj_adj) => {\r\n                    if (\r\n                      updatedState.tiles[rangetile_adj_adj].adjacent.includes(\r\n                        rangetile.prevTile\r\n                      )\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  });\r\n                if (updatedState.tiles[rangetile_adj].adjacentNonTile) {\r\n                  if (\r\n                    updatedState.tiles[rangetile_adj].adjacentNonTile.includes(\r\n                      \"D\"\r\n                    )\r\n                  ) {\r\n                    if (\r\n                      updatedState.gods[\r\n                        updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                      ].adjacent.includes(rangetile.prevTile)\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  } else {\r\n                    if (\r\n                      updatedState.data.board.wells[\r\n                        updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                      ].adjacent.includes(rangetile.prevTile)\r\n                    ) {\r\n                      valid = false;\r\n                    }\r\n                  }\r\n                }\r\n                if (\r\n                  updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.aquatic &&\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.flying\r\n                ) {\r\n                  if (\r\n                    updatedState.data.board.tiles[rangetile_adj].type !==\r\n                      \"lake\" &&\r\n                    updatedState.data.board.tiles[rangetile_adj].type !== \"none\"\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n                if (\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.aquatic &&\r\n                  !updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n                    .special.flying\r\n                ) {\r\n                  if (\r\n                    updatedState.data.board.tiles[rangetile_adj].type === \"none\"\r\n                  ) {\r\n                    valid = false;\r\n                  }\r\n                }\r\n                if (\r\n                  valid &&\r\n                  !rangeTiles.includes(rangetile_adj) &&\r\n                  !updatedState.data.board.tiles[rangetile_adj].occupant.player\r\n                ) {\r\n                  rangeTiles.push(rangetile_adj);\r\n                  rangeTilesHelper[i][rangetile_adj] = {\r\n                    prevTile: rangetile.currentTile,\r\n                    currentTile: rangetile_adj,\r\n                  };\r\n                }\r\n              });\r\n          });\r\n        }\r\n      }\r\n      const rangeAttack = [];\r\n      const rangeAttackHelper = {};\r\n      if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n        for (let i = 1; i <= 5; i++) {\r\n          if (i === 1) {\r\n            rangeAttackHelper[i] = {};\r\n            updatedState.tiles[data.tile_id].adjacent.forEach((tile) => {\r\n              if (!updatedState.data.board.tiles[tile].occupant.player) {\r\n                rangeAttack.push(tile);\r\n                rangeAttackHelper[i][tile] = {\r\n                  prevTile: data.tile_id,\r\n                  currentTile: tile,\r\n                };\r\n              }\r\n            });\r\n          } else {\r\n            rangeAttackHelper[i] = {};\r\n            Object.values(rangeAttackHelper[i - 1]).forEach((rangetile) => {\r\n              updatedState.tiles[rangetile.currentTile].adjacent\r\n                .filter(\r\n                  (rangetile_key) =>\r\n                    !updatedState.tiles[rangetile.prevTile].adjacent.includes(\r\n                      rangetile_key\r\n                    ) && rangetile_key !== rangetile.prevTile\r\n                )\r\n                .forEach((rangetile_adj) => {\r\n                  let valid = true;\r\n                  updatedState.tiles[rangetile_adj].adjacent\r\n                    .filter(\r\n                      (rangetile_adj_key) =>\r\n                        rangetile_adj_key !== rangetile.currentTile\r\n                    )\r\n                    .forEach((rangetile_adj_adj) => {\r\n                      if (\r\n                        updatedState.tiles[rangetile_adj_adj].adjacent.includes(\r\n                          rangetile.prevTile\r\n                        )\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    });\r\n                  if (updatedState.tiles[rangetile_adj].adjacentNonTile) {\r\n                    if (\r\n                      updatedState.tiles[\r\n                        rangetile_adj\r\n                      ].adjacentNonTile.includes(\"D\")\r\n                    ) {\r\n                      if (\r\n                        updatedState.gods[\r\n                          updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                        ].adjacent.includes(rangetile.prevTile)\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    } else {\r\n                      if (\r\n                        updatedState.data.board.wells[\r\n                          updatedState.tiles[rangetile_adj].adjacentNonTile\r\n                        ].adjacent.includes(rangetile.prevTile)\r\n                      ) {\r\n                        valid = false;\r\n                      }\r\n                    }\r\n                  }\r\n                  if (\r\n                    valid &&\r\n                    !rangeAttack.includes(rangetile_adj) &&\r\n                    !updatedState.data.board.tiles[rangetile.currentTile]\r\n                      .occupant.player\r\n                  ) {\r\n                    rangeAttack.push(rangetile_adj);\r\n                    rangeAttackHelper[i][rangetile_adj] = {\r\n                      prevTile: rangetile.currentTile,\r\n                      currentTile: rangetile_adj,\r\n                    };\r\n                  }\r\n                });\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const moveRequirementsMet = (tile_id) => {\r\n        if (updatedState.data.board.tiles[tile_id].occupant.player) {\r\n          return false;\r\n        }\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n            0 &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n        ) {\r\n          if (!rangeTiles.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (updatedState.data.board.tiles[data.tile_id].occupant.hasMoved) {\r\n            return false;\r\n          }\r\n          if (isTaunted) return false;\r\n          if (\r\n            updatedState.data.board.tiles[data.tile_id].occupant.movement\r\n              .special.jump\r\n          ) {\r\n            if (!jumpTiles.includes(tile_id) && !rangeTiles.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          } else {\r\n            if (!rangeTiles.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        if (\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .aquatic &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .flying\r\n        ) {\r\n          if (updatedState.data.board.tiles[tile_id].type === \"none\") {\r\n            return false;\r\n          }\r\n        }\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .aquatic &&\r\n          !updatedState.data.board.tiles[data.tile_id].occupant.movement.special\r\n            .flying\r\n        ) {\r\n          if (\r\n            updatedState.data.board.tiles[tile_id].type !== \"lake\" &&\r\n            updatedState.data.board.tiles[tile_id].type !== \"none\"\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      };\r\n      const attackRequirementsMet = (tile_id) => {\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n          if (!rangeAttack.includes(tile_id)) {\r\n            if (!updatedState.tiles[data.tile_id].adjacent.includes(tile_id)) {\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          if (!updatedState.tiles[data.tile_id].adjacent.includes(tile_id)) {\r\n            return false;\r\n          }\r\n        }\r\n        if (\r\n          !updatedState.data.board.tiles[tile_id].occupant.player ||\r\n          updatedState.data.board.tiles[tile_id].occupant.player === data.player\r\n        ) {\r\n          return false;\r\n        }\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.hasAttacked) {\r\n          return false;\r\n        }\r\n        return true;\r\n      };\r\n      if (updatedState.tiles[data.tile_id].occupantSelected) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = false;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          if (moveRequirementsMet(key)) {\r\n            updatedState.tiles[key].selectable = true;\r\n          }\r\n          if (attackRequirementsMet(key)) {\r\n            updatedState.tiles[key].occupantSelectable = true;\r\n          } else if (data.tile_id !== key) {\r\n            updatedState.tiles[key].occupantSelectable = false;\r\n          }\r\n        });\r\n        updatedState.currentAction = \"occupant_selected\";\r\n      } else {\r\n        if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n          Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n            updatedState.wheelbuttons[key].selectable = true;\r\n          });\r\n        } else {\r\n          updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n        }\r\n        Object.keys(updatedState.hand).forEach((key) => {\r\n          updatedState.hand[key].selectable = true;\r\n        });\r\n        Object.keys(updatedState.tiles).forEach((key) => {\r\n          updatedState.tiles[key].selectable = false;\r\n          updatedState.tiles[key].occupantSelectable = true;\r\n        });\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasDashed = true;\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.haste\r\n        ) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n        updatedState.currentAction = \"\";\r\n      }\r\n      const god = data.player === \"player1\" ? \"D0\" : \"D6\";\r\n      const rangeAttackArrayHelper =\r\n        data.player === \"player1\"\r\n          ? [\"B1\", \"F1\", \"D2\", \"D3\", \"D4\", \"D5\"]\r\n          : [\"B5\", \"F5\", \"D1\", \"D2\", \"D3\", \"D4\"];\r\n      if (updatedState.tiles[data.tile_id].occupantSelected) {\r\n        if (!updatedState.data.board.tiles[data.tile_id].occupant.hasAttacked) {\r\n          if (\r\n            updatedState.data.board.tiles[data.tile_id].occupant.ranged &&\r\n            !updatedState.gods[god].adjacent.includes(data.tile_id)\r\n          ) {\r\n            const rangeAttackArray = rangeAttack.filter((attacktile) =>\r\n              updatedState.gods[god].adjacent.includes(attacktile)\r\n            );\r\n            if (\r\n              rangeAttackArray.length === 1 &&\r\n              !updatedState.data.board.tiles[rangeAttackArray[0]].occupant\r\n                .player &&\r\n              rangeAttackArrayHelper.includes(data.tile_id)\r\n            ) {\r\n              updatedState.gods[god].selectable = true;\r\n            }\r\n          } else {\r\n            if (updatedState.gods[god].adjacent.includes(data.tile_id)) {\r\n              updatedState.gods[god].selectable = true;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        updatedState.gods[god].selectable = false;\r\n      }\r\n      return updatedState;\r\n    },\r\n    MOVE_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_tile_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      updatedState.data.board.tiles[data.tile_id].occupant =\r\n        updatedState.data.board.tiles[selected_tile_id].occupant;\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: { summon: false, gift: false, lastword: false },\r\n        effectUsed: false,\r\n      };\r\n      updatedState.data.board.tiles[selected_tile_id].occupant = removeOccupant;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_tile_id].occupantSelected = false;\r\n      if (\r\n        updatedState.data.board.tiles[data.tile_id].occupant.movement.dash >\r\n          0 &&\r\n        !updatedState.data.board.tiles[data.tile_id].occupant.hasDashed\r\n      ) {\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasDashed = true;\r\n        if (\r\n          updatedState.data.board.tiles[data.tile_id].occupant.movement.haste\r\n        ) {\r\n          Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n            if (\r\n              updatedState.data.board.wells[key].adjacent.includes(\r\n                data.tile_id\r\n              ) &&\r\n              updatedState.data.board.wells[key].available\r\n            ) {\r\n              updatedState.data.board.wells[key].available = false;\r\n              updatedState.data.board.wells[key].collected = true;\r\n              updatedState.data[data.player].faeria += 1;\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        updatedState.data.board.tiles[data.tile_id].occupant.hasMoved = true;\r\n        if (updatedState.data.board.tiles[data.tile_id].occupant.ranged) {\r\n          updatedState.data.board.tiles[\r\n            data.tile_id\r\n          ].occupant.hasAttacked = true;\r\n        }\r\n        Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n          if (\r\n            updatedState.data.board.wells[key].adjacent.includes(\r\n              data.tile_id\r\n            ) &&\r\n            updatedState.data.board.wells[key].available\r\n          ) {\r\n            updatedState.data.board.wells[key].available = false;\r\n            updatedState.data.board.wells[key].collected = true;\r\n            updatedState.data[data.player].faeria += 1;\r\n          }\r\n        });\r\n      }\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n      updatedState.currentAction = \"\";\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    ATTACK_OCCUPANT: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const attacker =\r\n        updatedState.data.board.tiles[selected_occupant_id].occupant;\r\n      const defender = updatedState.data.board.tiles[data.tile_id].occupant;\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: { summon: false, gift: false, lastword: false },\r\n        effectUsed: false,\r\n      };\r\n      if (\r\n        updatedState.tiles[data.tile_id].adjacent.includes(selected_occupant_id)\r\n      ) {\r\n        attacker.health -= defender.attack;\r\n      }\r\n      if (defender.protection) {\r\n        defender.protection = false;\r\n      } else {\r\n        defender.health -= attacker.attack;\r\n      }\r\n      attacker.hasAttacked = true;\r\n      attacker.hasMoved = true;\r\n      attacker.hasDashed = true;\r\n      updatedState.data.board.tiles[selected_occupant_id].occupant =\r\n        attacker.health > 0 ? attacker : removeOccupant;\r\n      updatedState.data.board.tiles[data.tile_id].occupant =\r\n        defender.health > 0 ? defender : removeOccupant;\r\n      const EP = new EventProcessor(updatedState, data);\r\n      if (attacker.health <= 0 && attacker.effects.lastword) {\r\n        EP.processLastwordEffect(attacker, selected_occupant_id);\r\n      }\r\n      if (defender.health <= 0 && defender.effects.lastword) {\r\n        EP.processLastwordEffect(defender, data.tile_id);\r\n      }\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_occupant_id].occupantSelected = false;\r\n      updatedState.currentAction = \"\";\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    ATTACK_GOD: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      const selected_occupant_id = Object.keys(updatedState.tiles).filter(\r\n        (key) => updatedState.tiles[key].occupantSelected\r\n      )[0];\r\n      const attacker =\r\n        updatedState.data.board.tiles[selected_occupant_id].occupant;\r\n      updatedState.data.board.gods[data.god].health -= attacker.attack;\r\n      updatedState.data.board.gods[data.god].wasHit = true;\r\n      attacker.hasAttacked = true;\r\n      attacker.hasMoved = true;\r\n      updatedState.gods[data.god].selectable = false;\r\n      if (updatedState.data[data.player].wheel_neutral_counter !== 1) {\r\n        Object.keys(updatedState.wheelbuttons).forEach((key) => {\r\n          updatedState.wheelbuttons[key].selectable = true;\r\n        });\r\n      } else {\r\n        updatedState.wheelbuttons[\"wheel-B2\"].selectable = true;\r\n      }\r\n      Object.keys(updatedState.hand).forEach((key) => {\r\n        updatedState.hand[key].selectable = true;\r\n      });\r\n      Object.keys(updatedState.tiles).forEach((key) => {\r\n        updatedState.tiles[key].selectable = false;\r\n        updatedState.tiles[key].occupantSelectable = true;\r\n      });\r\n      updatedState.tiles[selected_occupant_id].occupantSelected = false;\r\n      updatedState.currentAction = \"\";\r\n      if (updatedState.data.board.gods[data.god].health <= 0) {\r\n        updatedState.data.status.finished = true;\r\n        updatedState.data.status.winner = data.player;\r\n      }\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n      return updatedState;\r\n    },\r\n    END_TURN: (currentState, data) => {\r\n      const updatedState = JSON.parse(JSON.stringify(currentState));\r\n      updatedState.data[data.opponent].wheel_used = false;\r\n      updatedState.data[data.opponent].faeria += 3;\r\n      const god = {\r\n        player1: \"D6\",\r\n        player2: \"D0\",\r\n      };\r\n      if (updatedState.data.status.turn > 1) {\r\n        if (updatedState.data[data.opponent].deck.length > 0) {\r\n          if (updatedState.data[data.opponent].hand.length < 9) {\r\n            updatedState.data[data.opponent].hand.push(\r\n              updatedState.data[data.opponent].deck.splice(0, 1)[0]\r\n            );\r\n          } else {\r\n            updatedState.data[data.opponent].deck.splice(0, 1);\r\n          }\r\n        } else {\r\n          updatedState.data.board.gods[\r\n            god[data.opponent]\r\n          ].health -= ++updatedState.data[data.opponent].health_dmg;\r\n        }\r\n      }\r\n      const removeOccupant = {\r\n        player: \"\",\r\n        id: 0,\r\n        type: \"\",\r\n        faeria_cost: 0,\r\n        land_cost: {\r\n          forest: 0,\r\n          desert: 0,\r\n          mountain: 0,\r\n          lake: 0,\r\n          wild: 0,\r\n        },\r\n        attack: 0,\r\n        base_attack: 0,\r\n        health: 0,\r\n        base_health: 0,\r\n        movement: {\r\n          range: 1,\r\n          haste: true,\r\n          dash: 0,\r\n          special: {\r\n            aquatic: false,\r\n            flying: false,\r\n            jump: false,\r\n          },\r\n        },\r\n        taunt: false,\r\n        divine: false,\r\n        protection: false,\r\n        ranged: false,\r\n        hasMoved: false,\r\n        hasDashed: false,\r\n        hasAttacked: false,\r\n        effects: { summon: false, gift: false, lastword: false },\r\n        effectUsed: false,\r\n      };\r\n      Object.keys(updatedState.data.board.tiles).forEach((key) => {\r\n        if (\r\n          (updatedState.data.board.tiles[key].occupant.movement.special\r\n            .aquatic &&\r\n            !updatedState.data.board.tiles[key].occupant.movement.special\r\n              .flying &&\r\n            updatedState.data.board.tiles[key].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[key].type !== \"lake\" &&\r\n            updatedState.data.board.tiles[key].type !== \"none\") ||\r\n          (!updatedState.data.board.tiles[key].occupant.movement.special\r\n            .aquatic &&\r\n            !updatedState.data.board.tiles[key].occupant.movement.special\r\n              .flying &&\r\n            updatedState.data.board.tiles[key].occupant.player ===\r\n              data.player &&\r\n            updatedState.data.board.tiles[key].type === \"none\")\r\n        ) {\r\n          updatedState.data.board.tiles[key].occupant = removeOccupant;\r\n        } else {\r\n          updatedState.data.board.tiles[key].occupant.hasMoved = false;\r\n          updatedState.data.board.tiles[key].occupant.hasAttacked = false;\r\n        }\r\n      });\r\n      const anyAdjacent = (tile) =>\r\n        updatedState.data.board.tiles[tile].occupant.player === data.opponent;\r\n      Object.keys(updatedState.data.board.wells).forEach((key) => {\r\n        if (updatedState.data.board.wells[key].adjacent.some(anyAdjacent)) {\r\n          updatedState.data.board.wells[key].available = false;\r\n          updatedState.data.board.wells[key].collected = true;\r\n          updatedState.data[data.opponent].faeria += 1;\r\n        } else {\r\n          updatedState.data.board.wells[key].available = true;\r\n          updatedState.data.board.wells[key].collected = false;\r\n        }\r\n      });\r\n      updatedState.data.status.turn += 1;\r\n      updatedState.data.status.current = data.opponent;\r\n\r\n      //Wheel\r\n      Object.keys(updatedState.wheelbuttons).forEach((wheel) => {\r\n        updatedState.wheelbuttons[wheel].selectable = true;\r\n        updatedState.wheelbuttons[wheel].selected = false;\r\n      });\r\n\r\n      //Hand\r\n      Object.keys(updatedState.hand).forEach((card) => {\r\n        updatedState.hand[card].selectable = true;\r\n        updatedState.hand[card].selected = false;\r\n      });\r\n\r\n      //Tiles and Occupants\r\n      Object.keys(updatedState.tiles).forEach((tile) => {\r\n        updatedState.tiles[tile].selectable = false;\r\n        updatedState.tiles[tile].selected = false;\r\n        updatedState.tiles[tile].occupantSelectable = true;\r\n        updatedState.tiles[tile].occupantSelected = false;\r\n      });\r\n\r\n      //Gods\r\n      Object.keys(updatedState.gods).forEach((god) => {\r\n        updatedState.gods[god].selectable = false;\r\n      });\r\n\r\n      updatedState.currentAction = \"\";\r\n\r\n      const formdata = new FormData();\r\n      formdata.append(\"react_state\", JSON.stringify(updatedState));\r\n      formdata.append(\"id\", document.getElementById(\"game_id\").value);\r\n      axios\r\n        .post(\r\n          \"https://cheekia.loca.lt/faeria/Faeria/utils/saveState.php\",\r\n          formdata\r\n        )\r\n        .catch((error) => {\r\n          console.log(\"Network Error\", error.message);\r\n        });\r\n\r\n      return updatedState;\r\n    },\r\n  };\r\n  initStore(actions, loadStore);\r\n};\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport configureStore from \"./hooks-store/global-store\";\nimport axios from \"axios\";\n\nlet loadStore = {};\nconst formdata = new FormData();\nformdata.append(\"id\", document.getElementById(\"game_id\").value);\naxios\n  .post(\"https://cheekia.loca.lt/faeria/Faeria/utils/getState.php\", formdata)\n  .then((res) => {\n    loadStore = JSON.parse(res.data);\n    configureStore(loadStore);\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"game\")\n    );\n  })\n  .catch((error) => {\n    console.log(\"Network Error\", error.message);\n  });\n"],"sourceRoot":""}