{"version":3,"sources":["DeckBuilder/Deck/CardList/CardListItem/CardListItem.js","DeckBuilder/Deck/CardList/CardList.js","assets/images/cards/images.js","DeckBuilder/Deck/Card/Card.js","DeckBuilder/Deck/Deck.js","DeckBuilder/DeckList/DeckListItem/DeckListItem.js","DeckBuilder/DeckList/DeckList.js","DeckBuilder/DeckBuilder.js","App.js","reportWebVitals.js","index.js"],"names":["CardListItem","props","data","ListGroupItem","action","variant","id","onClick","click","Badge","pill","faeria","name","count","CardList","cardlist","map","item","length","filter","card","ListGroup","images","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","Card","className","playable","style","width","alt","src","Deck","useState","cardsState","setCardsState","deckState","setDeckState","useEffect","axios","get","then","res","forEach","array","find","arr","includes","parseInt","legendary","newCardsState","cards","reduce","prev","curr","i","push","getAvgCost","sum","addCardHandler","event","newDeckState","target","sort","a","b","cost","saveButton","Button","FormData","append","document","getElementById","JSON","stringify","post","size","disabled","setName","deck_name","value","setCover","cover","options","Dropdown","Item","display","flexWrap","height","justifyContent","overflow","flexDirection","InputGroup","Prepend","Text","parseFloat","toFixed","FormControl","onChange","placeholder","aria-label","aria-describedby","DropdownButton","as","Append","title","splice","findIndex","DeckListItem","cursor","textAlign","DeckList","decksState","setDecksState","decks","deck","DeckBuilder","isListView","setIsListView","setDeck","parse","attributes","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.cc5f56b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Badge, ListGroupItem } from \"react-bootstrap\";\r\n\r\nconst CardListItem = (props) => {\r\n  return props.data ? (\r\n    <ListGroupItem action variant=\"primary\" id={props.id} onClick={props.click}>\r\n      <Badge pill variant=\"primary\">\r\n        {props.data.faeria}\r\n      </Badge>{\" \"}\r\n      {props.data.name} <Badge variant=\"secondary\">x{props.count}</Badge>\r\n    </ListGroupItem>\r\n  ) : (\r\n    <ListGroupItem />\r\n  );\r\n};\r\n\r\nexport default CardListItem;\r\n","import React from \"react\";\r\nimport CardListItem from \"./CardListItem/CardListItem\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nconst CardList = (props) => {\r\n  const cardlist = props.cardlist.map((item) => (\r\n    <CardListItem\r\n      key={item[0]}\r\n      id={item[0]}\r\n      count={item.length}\r\n      data={props.data.filter((card) => card.id == item[0])[0]} // eslint-disable-line eqeqeq\r\n      click={props.click}\r\n    />\r\n  ));\r\n  return <ListGroup>{cardlist}</ListGroup>;\r\n};\r\n\r\nexport default CardList;\r\n","const images = {\r\n    0: 'assets/images/cards/cheeksplore.jpg',\r\n    1: 'assets/images/cards/mercheek.jpg',\r\n    2: 'assets/images/cards/dolphin_cheekrider.jpg',\r\n    3: 'assets/images/cards/clamcheek.jpg',\r\n    4: 'assets/images/cards/ninjacheek.jpg',\r\n    5: 'assets/images/cards/song_of_the_mercheek.jpg',\r\n    6: 'assets/images/cards/cheek_in_a_bottle.jpg',\r\n    7: 'assets/images/cards/cheekie_in_a_lamp.jpg',\r\n    8: 'assets/images/cards/cheeklord.jpg',\r\n    9: 'assets/images/cards/rain_of_cheek.jpg',\r\n    10: 'assets/images/cards/cheekdrop.jpg',\r\n    11: 'assets/images/cards/cheekmoon.jpg',\r\n    12: 'assets/images/cards/cheekpearl.jpg',\r\n    13: 'assets/images/cards/crabcheek.jpg',\r\n    14: 'assets/images/cards/cheekcano.jpg',\r\n    15: 'assets/images/cards/cheekdevil.jpg',\r\n    16: 'assets/images/cards/cheekflame.jpg',\r\n    17: 'assets/images/cards/cheekblast.jpg',\r\n    18: 'assets/images/cards/cheekflame_faerie.jpg',\r\n    19: 'assets/images/cards/baby_cheekdevil.jpg',\r\n    20: 'assets/images/cards/ghostcheek_tower.jpg',\r\n    21: 'assets/images/cards/ghostcheek.jpg',\r\n    22: 'assets/images/cards/ghostcheek_alchemist.jpg',\r\n    23: 'assets/images/cards/cheekruption.jpg',\r\n    24: 'assets/images/cards/suncheek.jpg',\r\n    25: 'assets/images/cards/cheekflower.jpg',\r\n    26: 'assets/images/cards/cavecheek_dweller.jpg',\r\n    27: 'assets/images/cards/mushroom_cheek.jpg',\r\n    28: 'assets/images/cards/cheekshrooms.jpg',\r\n    29: 'assets/images/cards/cheektree_giant.jpg',\r\n    30: 'assets/images/cards/cheekworld_tree.jpg',\r\n    31: 'assets/images/cards/cheek_shaman.jpg',\r\n    32: 'assets/images/cards/cheekfox.jpg',\r\n    33: 'assets/images/cards/cheekbloom_spirit.jpg',\r\n    34: 'assets/images/cards/cheekshield_spirit.jpg',\r\n    35: 'assets/images/cards/cheek_dancers.jpg',\r\n}\r\n\r\nexport default images;","import React from \"react\";\r\nimport images from \"../../../assets/images/cards/images\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const className = props.data.playable ? \"selectable\" : \"not-selectable\";\r\n  const click = props.data.playable ? props.click : null;\r\n\r\n  return (\r\n    <div style={{ width: \"15vw\" }} id={props.data.id} onClick={click} className={className}>\r\n      <img\r\n        style={{ width: \"15vw\" }}\r\n        id={props.data.id}\r\n        alt={props.data.id}\r\n        src={images[props.data.id]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport CardList from \"./CardList/CardList\";\r\nimport Card from \"./Card/Card\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\n\r\nconst Deck = (props) => {\r\n  const [cardsState, setCardsState] = useState([]);\r\n  const [deckState, setDeckState] = useState(props.data);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost/faeria/Faeria/utils/getCards.php\")\r\n      .then((res) => {\r\n        res.data.forEach((card) => {\r\n          const array = cardlist.find((arr) => arr.includes(parseInt(card.id)));\r\n          if (card.legendary === \"1\") {\r\n            !array || array.length < 1\r\n              ? (card.playable = true)\r\n              : (card.playable = false);\r\n          } else {\r\n            !array || array.length < 3\r\n              ? (card.playable = true)\r\n              : (card.playable = false);\r\n          }\r\n        });\r\n        setCardsState(res.data);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    const newCardsState = [...cardsState];\r\n    newCardsState.forEach((card) => {\r\n      const array = cardlist.find((arr) => arr.includes(parseInt(card.id)));\r\n      if (card.legendary === \"1\") {\r\n        !array || array.length < 1\r\n          ? (card.playable = true)\r\n          : (card.playable = false);\r\n      } else {\r\n        !array || array.length < 3\r\n          ? (card.playable = true)\r\n          : (card.playable = false);\r\n      }\r\n    });\r\n    setCardsState(newCardsState);\r\n  }, [deckState]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const cardlist = deckState.cards.reduce((prev, curr, i, cards) => {\r\n    curr === cards[i - 1]\r\n      ? prev[prev.length - 1].push(curr)\r\n      : prev.push([curr]);\r\n    return prev;\r\n  }, []);\r\n\r\n  const getAvgCost = (cards) => {\r\n    let sum = 0;\r\n    let count = 0;\r\n    cards.forEach((id) => {\r\n      count++;\r\n      sum += parseInt(cardsState.filter((card) => card.id == id)[0].faeria); // eslint-disable-line eqeqeq\r\n    });\r\n    return count ? sum / count : 0;\r\n  };\r\n\r\n  const addCardHandler = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.cards.push(parseInt(event.target.id));\r\n    newDeckState.cards.sort((a, b) => a - b);\r\n    newDeckState.cost = getAvgCost(newDeckState.cards);\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const removeCardHandler = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.cards.splice(\r\n      newDeckState.cards.findIndex((card) => card == event.target.id), // eslint-disable-line eqeqeq\r\n      1\r\n    );\r\n    newDeckState.cost = getAvgCost(newDeckState.cards);\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const cards = cardsState.map((card, i) => (\r\n    <Card key={card.id} click={addCardHandler} data={card} />\r\n  ));\r\n\r\n  const saveDeck = () => {\r\n    const data = new FormData();\r\n    data.append(\"user\", document.getElementById(\"user\"));\r\n    data.append(\"deck\", JSON.stringify(deckState));\r\n    axios\r\n      .post(\"http://localhost/faeria/Faeria/utils/saveDeck.php\", data)\r\n      .then((res) => {\r\n        props.click();\r\n      });\r\n  };\r\n\r\n  const cancelDeck = () => {\r\n    props.click();\r\n  };\r\n\r\n  const saveButton =\r\n    deckState.cards.length === 30 ? (\r\n      <Button onClick={saveDeck} variant=\"primary\" size=\"lg\">\r\n        Save\r\n      </Button>\r\n    ) : (\r\n      <Button disabled variant=\"secondary\" size=\"lg\">\r\n        Save\r\n      </Button>\r\n    );\r\n\r\n  const setName = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.deck_name = event.target.value;\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const setCover = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.cover = event.target.id;\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const cover =\r\n    cardsState.length > 0\r\n      ? cardsState.find((card) => card.id == deckState.cover)\r\n        ? cardsState.find((card) => card.id == deckState.cover).name\r\n        : 'No cover'\r\n      : null;\r\n  const options = cover\r\n    ? cardlist.map((item) => (\r\n        <Dropdown.Item key={item[0]} id={item[0]} onClick={setCover}>\r\n          {cardsState.find((card) => card.id == item[0]).name}\r\n        </Dropdown.Item>\r\n      ))\r\n    : null;\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          height: \"80vh\",\r\n          width: \"70vw\",\r\n          justifyContent: \"space-evenly\",\r\n          overflow: \"scroll\",\r\n        }}\r\n      >\r\n        {cards}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          width: \"30vw\",\r\n          height: \"100vh\",\r\n          justifyContent: \"flex-start\",\r\n          overflow: \"scroll\",\r\n        }}\r\n      >\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              <Badge pill variant=\"primary\">\r\n                {parseFloat(deckState.cost).toFixed(1)}\r\n              </Badge>\r\n            </InputGroup.Text>\r\n            <InputGroup.Text>{deckState.cards.length}/30</InputGroup.Text>\r\n            <InputGroup.Text id=\"basic-addon1\">Name:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            onChange={setName}\r\n            placeholder={deckState.deck_name}\r\n            aria-label={deckState.deck_name}\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"basic-addon2\">Cover:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            onChange={setName}\r\n            placeholder={cover}\r\n            aria-label={cover}\r\n            aria-describedby=\"basic-addon2\"\r\n          />\r\n          <DropdownButton\r\n            as={InputGroup.Append}\r\n            variant=\"outline-secondary\"\r\n            title=\"Select\"\r\n            id=\"input-group-dropdown-2\"\r\n          >\r\n            {options}\r\n          </DropdownButton>\r\n        </InputGroup>\r\n        <CardList\r\n          cardlist={cardlist}\r\n          data={cardsState}\r\n          click={removeCardHandler}\r\n        />\r\n        {saveButton}\r\n        <Button onClick={cancelDeck} variant=\"dark\" size=\"lg\">\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\nimport images from \"../../../assets/images/cards/images\";\r\n\r\nconst DeckListItem = (props) => {\r\n  return (\r\n    <div\r\n      data={JSON.stringify(props.data)}\r\n      style={{ width: \"17vw\", cursor: \"pointer\" }}\r\n      id={props.data.id}\r\n      onClick={props.click}\r\n    >\r\n      <h1 style={{ textAlign: \"center\" }}>{props.data.deck_name}</h1>\r\n      <img\r\n        style={{ width: \"17vw\" }}\r\n        id={props.data.id}\r\n        alt={props.data.id}\r\n        data={JSON.stringify(props.data)}\r\n        src={images[props.data.cover]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DeckListItem from \"./DeckListItem/DeckListItem\";\r\n\r\nconst DeckList = (props) => {\r\n  const [decksState, setDecksState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const data = new FormData();\r\n    data.append(\"user\", document.getElementById(\"user\"));\r\n    axios\r\n      .post(\"http://localhost/faeria/Faeria/utils/getDecks.php\", data)\r\n      .then((res) => {\r\n        setDecksState(res.data);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const decks = decksState.map((deck) => (\r\n    <DeckListItem key={deck.id} data={deck} click={props.click} />\r\n  ));\r\n  decks.push(\r\n    <DeckListItem\r\n      key=\"0\"\r\n      data={{ id: 0, deck_name: \"Add new\", cover: 0, cards: [], cost: 0.0 }}\r\n      click={props.click}\r\n    />\r\n  );\r\n  return decks;\r\n};\r\n\r\nexport default DeckList;\r\n","import React, { useState } from \"react\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport DeckList from \"./DeckList/DeckList\";\r\n\r\nconst DeckBuilder = () => {\r\n  const [isListView, setIsListView] = useState(true);\r\n  const [deck, setDeck] = useState({});\r\n\r\n  const onClickHandler = (event) => {\r\n    setDeck(JSON.parse(event.target.attributes.data.value));\r\n    setIsListView(false);\r\n  };\r\n\r\n  const returnHandler = () => {\r\n    setDeck({});\r\n    setIsListView(true);\r\n  };\r\n\r\n  const display = isListView ? (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        justifyContent: \"space-evenly\",\r\n        overflow: \"scroll\",\r\n      }}\r\n    >\r\n      <DeckList click={onClickHandler} />\r\n    </div>\r\n  ) : (\r\n    <Deck data={deck} click={returnHandler} />\r\n  );\r\n\r\n  return display;\r\n};\r\n\r\nexport default DeckBuilder;\r\n","import React from 'react';\nimport DeckBuilder from \"./DeckBuilder/DeckBuilder\";\n\nconst app = () => {\n  return (\n    <DeckBuilder />\n  );\n}\n\nexport default app;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('deck-builder')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}