{"version":3,"sources":["DeckBuilder/Deck/CardList/CardListItem/CardListItem.js","DeckBuilder/Deck/CardList/CardList.js","assets/images/cards/images.js","DeckBuilder/Deck/Card/Card.js","DeckBuilder/Deck/SearchBar/Hexagon/Hexagon.js","DeckBuilder/Deck/SearchBar/SearchBar.js","DeckBuilder/Deck/Deck.js","DeckBuilder/DeckList/DeckListItem/DeckListItem.js","DeckBuilder/DeckList/DeckList.js","DeckBuilder/DeckBuilder.js","App.js","index.js"],"names":["CardListItem","props","data","ListGroupItem","action","variant","id","onClick","click","Badge","pill","faeria","name","count","CardList","cardlist","map","item","length","filter","card","ListGroup","images","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","Card","className","playable","style","width","margin","alt","src","Hexagon","hexSize","startPosX","startPosY","points","join","Math","sqrt","SearchBar","landBar","Object","keys","landFilter","land","i","changeLandFilter","display","InputGroup","alignItems","FormControl","onChange","changeNameFilter","placeholder","aria-label","aria-describedby","height","Deck","useState","cardsState","setCardsState","deckState","setDeckState","neutral","forest","desert","mountain","lake","landFilterState","setLandFilterState","nameFilterState","setNameFilterState","useEffect","axios","get","params","find","key","then","res","forEach","array","arr","includes","parseInt","legendary","catch","error","console","log","message","newCardsState","cards","reduce","prev","curr","push","getAvgCost","sum","addCardHandler","event","newDeckState","target","sort","a","b","cost","saveButton","Button","FormData","append","document","getElementById","value","JSON","stringify","post","size","disabled","setName","deck_name","setCover","cover","options","Dropdown","Item","flexWrap","justifyContent","overflow","nameFilter","newLandFilterState","flexDirection","Prepend","Text","parseFloat","toFixed","readOnly","defaultValue","DropdownButton","as","Append","title","splice","findIndex","DeckListItem","cursor","textAlign","DeckList","decksState","setDecksState","decks","deck","DeckBuilder","isListView","setIsListView","setDeck","parse","attributes","app","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.68a2f038.chunk.js","sourcesContent":["import React from \"react\";\nimport { Badge, ListGroupItem } from \"react-bootstrap\";\n\nconst CardListItem = (props) => {\n  return props.data ? (\n    <ListGroupItem action variant=\"primary\" id={props.id} onClick={props.click}>\n      <Badge pill variant=\"primary\">\n        {props.data.faeria}\n      </Badge>{\" \"}\n      {props.data.name} <Badge variant=\"secondary\">x{props.count}</Badge>\n    </ListGroupItem>\n  ) : (\n    <ListGroupItem />\n  );\n};\n\nexport default CardListItem;\n","import React from \"react\";\nimport CardListItem from \"./CardListItem/CardListItem\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst CardList = (props) => {\n  const cardlist = props.cardlist.map((item) => (\n    <CardListItem\n      key={item[0]}\n      id={item[0]}\n      count={item.length}\n      data={props.data.filter((card) => card.id == item[0])[0]} // eslint-disable-line eqeqeq\n      click={props.click}\n    />\n  ));\n  return <ListGroup>{cardlist}</ListGroup>;\n};\n\nexport default CardList;\n","const images = {\n    0: 'assets/images/cards/cheeksplore.jpg',\n    1: 'assets/images/cards/mercheek.jpg',\n    2: 'assets/images/cards/dolphin_cheekrider.jpg',\n    3: 'assets/images/cards/clamcheek.jpg',\n    4: 'assets/images/cards/ninjacheek.jpg',\n    5: 'assets/images/cards/song_of_the_mercheek.jpg',\n    6: 'assets/images/cards/cheek_in_a_bottle.jpg',\n    7: 'assets/images/cards/cheekie_in_a_lamp.jpg',\n    8: 'assets/images/cards/cheeklord.jpg',\n    9: 'assets/images/cards/rain_of_cheek.jpg',\n    10: 'assets/images/cards/cheekdrop.jpg',\n    11: 'assets/images/cards/cheekmoon.jpg',\n    12: 'assets/images/cards/cheekpearl.jpg',\n    13: 'assets/images/cards/crabcheek.jpg',\n    14: 'assets/images/cards/cheekcano.jpg',\n    15: 'assets/images/cards/cheekdevil.jpg',\n    16: 'assets/images/cards/cheekflame.jpg',\n    17: 'assets/images/cards/cheekblast.jpg',\n    18: 'assets/images/cards/cheekflame_faerie.jpg',\n    19: 'assets/images/cards/baby_cheekdevil.jpg',\n    20: 'assets/images/cards/ghostcheek_tower.jpg',\n    21: 'assets/images/cards/ghostcheek.jpg',\n    22: 'assets/images/cards/ghostcheek_alchemist.jpg',\n    23: 'assets/images/cards/cheekruption.jpg',\n    24: 'assets/images/cards/suncheek.jpg',\n    25: 'assets/images/cards/cheekflower.jpg',\n    26: 'assets/images/cards/cavecheek_dweller.jpg',\n    27: 'assets/images/cards/mushroom_cheek.jpg',\n    28: 'assets/images/cards/cheekshrooms.jpg',\n    29: 'assets/images/cards/cheektree_giant.jpg',\n    30: 'assets/images/cards/cheekworld_tree.jpg',\n    31: 'assets/images/cards/cheek_shaman.jpg',\n    32: 'assets/images/cards/cheekfox.jpg',\n    33: 'assets/images/cards/cheekbloom_spirit.jpg',\n    34: 'assets/images/cards/cheekshield_spirit.jpg',\n    35: 'assets/images/cards/cheek_dancers.jpg',\n    36: 'assets/images/cards/cheeksphynx.jpg',\n    37: 'assets/images/cards/cheeksphynx_a.jpg',\n    38: 'assets/images/cards/cheeksphynx_b.jpg',\n    39: 'assets/images/cards/cheeksphynx_c.jpg',\n    40: 'assets/images/cards/mummy_cheek.jpg',\n    41: 'assets/images/cards/cheeksquito.jpg',\n    42: 'assets/images/cards/cheek_air_balloon.jpg',\n    43: 'assets/images/cards/balloon_cheek.jpg',\n    44: 'assets/images/cards/dragon_cheekrider.jpg',\n    45: 'assets/images/cards/baby_dragoncheek.jpg',\n    46: 'assets/images/cards/cheek_glider.jpg',\n    47: 'assets/images/cards/cheek_pyramid.jpg',\n    48: 'assets/images/cards/cheek_wind.jpg',\n    49: 'assets/images/cards/canopic_cheekjar.jpg',\n    50: 'assets/images/cards/cavecheek.jpg',\n    51: 'assets/images/cards/book_of_cheek.jpg',\n    52: 'assets/images/cards/milk_of_the_cheek.jpg',\n}\n\nexport default images;","import React from \"react\";\nimport images from \"../../../assets/images/cards/images\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const className = props.data.playable ? \"selectable\" : \"not-selectable\";\n  const click = props.data.playable ? props.click : null;\n\n  return (\n    <div style={{ width: \"15vw\", margin: \"10px\" }} id={props.data.id} onClick={click} className={className}>\n      <img\n        style={{ width: \"15vw\" }}\n        id={props.data.id}\n        alt={props.data.id}\n        src={images[props.data.id]}\n      />\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nconst Hexagon = (props) => {\n  const hexSize = props.hexSize;\n  const startPosX = props.startPosX;\n  const startPosY = props.startPosY;\n  const points = [\n    [startPosX + hexSize * 0.5, startPosY].join(),\n    [startPosX + hexSize * 1.5, startPosY].join(),\n    [startPosX + hexSize * 2, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\n    [startPosX + hexSize * 1.5, startPosY + Math.sqrt(3) * hexSize].join(),\n    [startPosX + hexSize * 0.5, startPosY + Math.sqrt(3) * hexSize].join(),\n    [startPosX, startPosY + Math.sqrt(3) * hexSize * 0.5].join(),\n  ].join(\" \");\n\n  return <polygon id={props.id} onClick={props.click} className={props.className} points={points} />;\n};\n\nexport default Hexagon;\n","import React from \"react\";\nimport Hexagon from \"./Hexagon/Hexagon\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport \"./Searchbar.css\";\n\nconst SearchBar = (props) => {\n  const hexSize = 40;\n  const landBar = Object.keys(props.landFilter).map((land, i) => (\n    <g key={land}>\n      <Hexagon\n        id={land}\n        className={land + (props.landFilter[land] ? \"-active\" : \"\")}\n        hexSize={hexSize}\n        startPosX={hexSize * i * 2.5 + 8}\n        startPosY={hexSize - hexSize * Math.sqrt(3) * 0.5}\n        click={props.changeLandFilter}\n      />\n    </g>\n  ));\n  return (\n    <div\n      style={{\n        display: \"flex\",\n      }}\n    >\n      <InputGroup style={{ width: \"50%\", alignItems: \"center\" }}>\n        <FormControl\n          onChange={props.changeNameFilter}\n          placeholder=\"Search by name\"\n          aria-label=\"name\"\n          aria-describedby=\"basic-addon1\"\n        />\n      </InputGroup>\n      <svg width=\"100%\" height=\"80px\">\n        {landBar}\n      </svg>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CardList from \"./CardList/CardList\";\nimport Card from \"./Card/Card\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport {\n  Badge,\n  Button,\n  InputGroup,\n  FormControl,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\n\nconst Deck = (props) => {\n  const [cardsState, setCardsState] = useState([]);\n  const [deckState, setDeckState] = useState(props.data);\n  const [landFilterState, setLandFilterState] = useState({\n    neutral: false,\n    forest: false,\n    desert: false,\n    mountain: false,\n    lake: false,\n  });\n  const [nameFilterState, setNameFilterState] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"/faeria/Faeria/utils/getCards.php\", {\n        params: {\n          name: nameFilterState,\n          land: Object.keys(landFilterState).find(\n            (key) => landFilterState[key]\n          ),\n        },\n      })\n      .then((res) => {\n        res.data.forEach((card) => {\n          const array = cardlist.find((arr) => arr.includes(parseInt(card.id)));\n          if (card.legendary === \"1\") {\n            !array || array.length < 1\n              ? (card.playable = true)\n              : (card.playable = false);\n          } else {\n            !array || array.length < 3\n              ? (card.playable = true)\n              : (card.playable = false);\n          }\n        });\n        setCardsState(res.data);\n      })\n      .catch((error) => {\n        console.log(\"Network Error\", error.message);\n      });\n  }, [landFilterState, nameFilterState]);\n\n  useEffect(() => {\n    const newCardsState = [...cardsState];\n    newCardsState.forEach((card) => {\n      const array = cardlist.find((arr) => arr.includes(parseInt(card.id)));\n      if (card.legendary === \"1\") {\n        !array || array.length < 1\n          ? (card.playable = true)\n          : (card.playable = false);\n      } else {\n        !array || array.length < 3\n          ? (card.playable = true)\n          : (card.playable = false);\n      }\n    });\n    setCardsState(newCardsState);\n  }, [deckState]);\n\n  const cardlist = deckState.cards.reduce((prev, curr, i, cards) => {\n    curr === cards[i - 1]\n      ? prev[prev.length - 1].push(curr)\n      : prev.push([curr]);\n    return prev;\n  }, []);\n\n  const getAvgCost = (cards) => {\n    let sum = 0;\n    let count = 0;\n    cards.forEach((id) => {\n      count++;\n      sum += parseInt(cardsState.filter((card) => card.id == id)[0].faeria); // eslint-disable-line eqeqeq\n    });\n    return count ? sum / count : 0;\n  };\n\n  const addCardHandler = (event) => {\n    const newDeckState = { ...deckState };\n    newDeckState.cards.push(parseInt(event.target.id));\n    newDeckState.cards.sort((a, b) => a - b);\n    newDeckState.cost = getAvgCost(newDeckState.cards);\n    setDeckState(newDeckState);\n  };\n\n  const removeCardHandler = (event) => {\n    const newDeckState = { ...deckState };\n    newDeckState.cards.splice(\n      newDeckState.cards.findIndex((card) => card == event.target.id), // eslint-disable-line eqeqeq\n      1\n    );\n    newDeckState.cost = getAvgCost(newDeckState.cards);\n    setDeckState(newDeckState);\n  };\n\n  const cards = cardsState.map((card, i) => (\n    <Card key={card.id} click={addCardHandler} data={card} />\n  ));\n\n  const saveDeck = () => {\n    const data = new FormData();\n    data.append(\"user\", document.getElementById(\"user\").value);\n    data.append(\"deck\", JSON.stringify(deckState));\n    axios\n      .post(\"/faeria/Faeria/utils/saveDeck.php\", data)\n      .then(() => {\n        props.click();\n      })\n      .catch((error) => {\n        console.log(\"Network Error\", error.message);\n      });\n  };\n\n  const cancelDeck = () => {\n    props.click();\n  };\n\n  const saveButton =\n    deckState.cards.length === 30 ? (\n      <Button onClick={saveDeck} variant=\"primary\" size=\"lg\">\n        Save\n      </Button>\n    ) : (\n      <Button disabled variant=\"secondary\" size=\"lg\">\n        Save\n      </Button>\n    );\n\n  const setName = (event) => {\n    const newDeckState = { ...deckState };\n    newDeckState.deck_name = event.target.value;\n    setDeckState(newDeckState);\n  };\n\n  const setCover = (event) => {\n    const newDeckState = { ...deckState };\n    newDeckState.cover = event.target.id;\n    setDeckState(newDeckState);\n  };\n\n  const changeLandFilter = (event) => {\n    const newLandFilterState = { ...landFilterState };\n    newLandFilterState[event.target.id] = !newLandFilterState[event.target.id];\n    Object.keys(newLandFilterState)\n      .filter((key) => key !== event.target.id)\n      .forEach((land) => (newLandFilterState[land] = false));\n    setLandFilterState(newLandFilterState);\n  };\n\n  const changeNameFilter = (event) => {\n    setNameFilterState(event.target.value);\n  };\n\n  const cover =\n    cardsState.length > 0\n      ? cardsState.find((card) => card.id == deckState.cover)\n        ? cardsState.find((card) => card.id == deckState.cover).name\n        : \"No cover\"\n      : null;\n  const options = cover\n    ? cardlist.map((item) => (\n        <Dropdown.Item key={item[0]} id={item[0]} onClick={setCover}>\n          {cardsState.find((card) => card.id == item[0]).name}\n        </Dropdown.Item>\n      ))\n    : null;\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            height: \"80vh\",\n            width: \"70vw\",\n            justifyContent: \"space-evenly\",\n            overflow: \"scroll\",\n          }}\n        >\n          {cards}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            height: \"20vh\",\n            width: \"70vw\",\n            justifyContent: \"space-evenly\",\n          }}\n        >\n          <SearchBar\n            landFilter={landFilterState}\n            nameFilter={nameFilterState}\n            changeLandFilter={changeLandFilter}\n            changeNameFilter={changeNameFilter}\n          />\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"30vw\",\n          height: \"100vh\",\n          justifyContent: \"flex-start\",\n          overflow: \"scroll\",\n        }}\n      >\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>\n              <Badge pill variant=\"primary\">\n                {parseFloat(deckState.cost).toFixed(1)}\n              </Badge>\n            </InputGroup.Text>\n            <InputGroup.Text>{deckState.cards.length}/30</InputGroup.Text>\n            <InputGroup.Text id=\"basic-addon1\">Name:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            onChange={setName}\n            placeholder={deckState.deck_name}\n            aria-label={deckState.deck_name}\n            aria-describedby=\"basic-addon1\"\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon2\">Cover:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            onChange={setName}\n            readOnly\n            defaultValue={cover}\n            aria-label={cover}\n            aria-describedby=\"basic-addon2\"\n          />\n          <DropdownButton\n            as={InputGroup.Append}\n            variant=\"secondary\"\n            title=\"Select\"\n            id=\"input-group-dropdown-2\"\n          >\n            {options}\n          </DropdownButton>\n        </InputGroup>\n        <CardList\n          cardlist={cardlist}\n          data={cardsState}\n          click={removeCardHandler}\n        />\n        {saveButton}\n        <Button onClick={cancelDeck} variant=\"dark\" size=\"lg\">\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Deck;\n","import React from \"react\";\nimport images from \"../../../assets/images/cards/images\";\n\nconst DeckListItem = (props) => {\n  return (\n    <div\n      data={JSON.stringify(props.data)}\n      style={{ width: \"17vw\", cursor: \"pointer\" }}\n      id={props.data.id}\n      onClick={props.click}\n    >\n      <h1 style={{ textAlign: \"center\" }}>{props.data.deck_name}</h1>\n      <img\n        style={{ width: \"17vw\" }}\n        id={props.data.id}\n        alt={props.data.id}\n        data={JSON.stringify(props.data)}\n        src={images[props.data.cover]}\n      />\n    </div>\n  );\n};\n\nexport default DeckListItem;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DeckListItem from \"./DeckListItem/DeckListItem\";\n\nconst DeckList = (props) => {\n  const [decksState, setDecksState] = useState([]);\n\n  useEffect(() => {\n    const data = new FormData();\n    data.append(\"user\", document.getElementById(\"user\").value);\n    axios\n      .post(\"/faeria/Faeria/utils/getDecks.php\", data)\n      .then((res) => {\n        setDecksState(res.data);\n      })\n      .catch((error) => {\n        console.log(\"Network Error\", error.message);\n      });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const decks = decksState.map((deck) => (\n    <DeckListItem key={deck.id} data={deck} click={props.click} />\n  ));\n  decks.push(\n    <DeckListItem\n      key=\"0\"\n      data={{ id: 0, deck_name: \"Add new\", cover: 0, cards: [], cost: 0.0 }}\n      click={props.click}\n    />\n  );\n  return decks;\n};\n\nexport default DeckList;\n","import React, { useState } from \"react\";\nimport Deck from \"./Deck/Deck\";\nimport DeckList from \"./DeckList/DeckList\";\n\nconst DeckBuilder = () => {\n  const [isListView, setIsListView] = useState(true);\n  const [deck, setDeck] = useState({});\n\n  const onClickHandler = (event) => {\n    setDeck(JSON.parse(event.target.attributes.data.value));\n    setIsListView(false);\n  };\n\n  const returnHandler = () => {\n    setDeck({});\n    setIsListView(true);\n  };\n\n  const display = isListView ? (\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        height: \"100vh\",\n        width: \"100vw\",\n        justifyContent: \"space-evenly\",\n        overflow: \"scroll\",\n      }}\n    >\n      <DeckList click={onClickHandler} />\n    </div>\n  ) : (\n    <Deck data={deck} click={returnHandler} />\n  );\n\n  return display;\n};\n\nexport default DeckBuilder;\n","import React from 'react';\nimport DeckBuilder from \"./DeckBuilder/DeckBuilder\";\n\nconst app = () => {\n  return (\n    <DeckBuilder />\n  );\n}\n\nexport default app;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('deck-builder')\n);\n"],"sourceRoot":""}