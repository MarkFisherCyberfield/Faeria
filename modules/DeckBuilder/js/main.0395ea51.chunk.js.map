{"version":3,"sources":["DeckBuilder/Deck/CardList/CardListItem/CardListItem.js","DeckBuilder/Deck/CardList/CardList.js","assets/images/cards/images.js","DeckBuilder/Deck/Card/Card.js","DeckBuilder/Deck/SearchBar/SearchBar.js","DeckBuilder/Deck/Deck.js","DeckBuilder/DeckList/DeckListItem/DeckListItem.js","DeckBuilder/DeckList/DeckList.js","DeckBuilder/DeckBuilder.js","App.js","index.js"],"names":["CardListItem","props","data","ListGroupItem","action","variant","id","onClick","click","Badge","pill","faeria","name","count","CardList","cardlist","map","item","length","filter","card","ListGroup","images","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","Card","className","playable","style","width","margin","alt","src","SearchBar","Deck","useState","cardsState","setCardsState","deckState","setDeckState","neutral","forest","desert","mountain","lake","landFilterState","nameFilterState","useEffect","axios","get","then","res","forEach","array","find","arr","includes","parseInt","legendary","catch","error","console","log","message","newCardsState","cards","reduce","prev","curr","i","push","getAvgCost","sum","addCardHandler","event","newDeckState","target","sort","a","b","cost","saveButton","Button","FormData","append","document","getElementById","value","JSON","stringify","post","size","disabled","setName","deck_name","setCover","cover","options","Dropdown","Item","display","flexWrap","height","justifyContent","overflow","landFilter","nameFilter","flexDirection","InputGroup","Prepend","Text","parseFloat","toFixed","FormControl","onChange","placeholder","aria-label","aria-describedby","readOnly","defaultValue","DropdownButton","as","Append","title","splice","findIndex","DeckListItem","cursor","textAlign","DeckList","decksState","setDecksState","decks","deck","DeckBuilder","isListView","setIsListView","setDeck","parse","attributes","app","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.0395ea51.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Badge, ListGroupItem } from \"react-bootstrap\";\r\n\r\nconst CardListItem = (props) => {\r\n  return props.data ? (\r\n    <ListGroupItem action variant=\"primary\" id={props.id} onClick={props.click}>\r\n      <Badge pill variant=\"primary\">\r\n        {props.data.faeria}\r\n      </Badge>{\" \"}\r\n      {props.data.name} <Badge variant=\"secondary\">x{props.count}</Badge>\r\n    </ListGroupItem>\r\n  ) : (\r\n    <ListGroupItem />\r\n  );\r\n};\r\n\r\nexport default CardListItem;\r\n","import React from \"react\";\r\nimport CardListItem from \"./CardListItem/CardListItem\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nconst CardList = (props) => {\r\n  const cardlist = props.cardlist.map((item) => (\r\n    <CardListItem\r\n      key={item[0]}\r\n      id={item[0]}\r\n      count={item.length}\r\n      data={props.data.filter((card) => card.id == item[0])[0]} // eslint-disable-line eqeqeq\r\n      click={props.click}\r\n    />\r\n  ));\r\n  return <ListGroup>{cardlist}</ListGroup>;\r\n};\r\n\r\nexport default CardList;\r\n","const images = {\r\n    0: 'assets/images/cards/cheeksplore.jpg',\r\n    1: 'assets/images/cards/mercheek.jpg',\r\n    2: 'assets/images/cards/dolphin_cheekrider.jpg',\r\n    3: 'assets/images/cards/clamcheek.jpg',\r\n    4: 'assets/images/cards/ninjacheek.jpg',\r\n    5: 'assets/images/cards/song_of_the_mercheek.jpg',\r\n    6: 'assets/images/cards/cheek_in_a_bottle.jpg',\r\n    7: 'assets/images/cards/cheekie_in_a_lamp.jpg',\r\n    8: 'assets/images/cards/cheeklord.jpg',\r\n    9: 'assets/images/cards/rain_of_cheek.jpg',\r\n    10: 'assets/images/cards/cheekdrop.jpg',\r\n    11: 'assets/images/cards/cheekmoon.jpg',\r\n    12: 'assets/images/cards/cheekpearl.jpg',\r\n    13: 'assets/images/cards/crabcheek.jpg',\r\n    14: 'assets/images/cards/cheekcano.jpg',\r\n    15: 'assets/images/cards/cheekdevil.jpg',\r\n    16: 'assets/images/cards/cheekflame.jpg',\r\n    17: 'assets/images/cards/cheekblast.jpg',\r\n    18: 'assets/images/cards/cheekflame_faerie.jpg',\r\n    19: 'assets/images/cards/baby_cheekdevil.jpg',\r\n    20: 'assets/images/cards/ghostcheek_tower.jpg',\r\n    21: 'assets/images/cards/ghostcheek.jpg',\r\n    22: 'assets/images/cards/ghostcheek_alchemist.jpg',\r\n    23: 'assets/images/cards/cheekruption.jpg',\r\n    24: 'assets/images/cards/suncheek.jpg',\r\n    25: 'assets/images/cards/cheekflower.jpg',\r\n    26: 'assets/images/cards/cavecheek_dweller.jpg',\r\n    27: 'assets/images/cards/mushroom_cheek.jpg',\r\n    28: 'assets/images/cards/cheekshrooms.jpg',\r\n    29: 'assets/images/cards/cheektree_giant.jpg',\r\n    30: 'assets/images/cards/cheekworld_tree.jpg',\r\n    31: 'assets/images/cards/cheek_shaman.jpg',\r\n    32: 'assets/images/cards/cheekfox.jpg',\r\n    33: 'assets/images/cards/cheekbloom_spirit.jpg',\r\n    34: 'assets/images/cards/cheekshield_spirit.jpg',\r\n    35: 'assets/images/cards/cheek_dancers.jpg',\r\n    36: 'assets/images/cards/cheeksphynx.jpg',\r\n    37: 'assets/images/cards/cheeksphynx_a.jpg',\r\n    38: 'assets/images/cards/cheeksphynx_b.jpg',\r\n    39: 'assets/images/cards/cheeksphynx_c.jpg',\r\n    40: 'assets/images/cards/mummy_cheek.jpg',\r\n    41: 'assets/images/cards/cheeksquito.jpg',\r\n    42: 'assets/images/cards/cheek_air_balloon.jpg',\r\n    43: 'assets/images/cards/balloon_cheek.jpg',\r\n    44: 'assets/images/cards/dragon_cheekrider.jpg',\r\n    45: 'assets/images/cards/baby_dragoncheek.jpg',\r\n    46: 'assets/images/cards/cheek_glider.jpg',\r\n    47: 'assets/images/cards/cheek_pyramid.jpg',\r\n    48: 'assets/images/cards/cheek_wind.jpg',\r\n    49: 'assets/images/cards/canopic_cheekjar.jpg',\r\n}\r\n\r\nexport default images;","import React from \"react\";\r\nimport images from \"../../../assets/images/cards/images\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const className = props.data.playable ? \"selectable\" : \"not-selectable\";\r\n  const click = props.data.playable ? props.click : null;\r\n\r\n  return (\r\n    <div style={{ width: \"15vw\", margin: \"10px\" }} id={props.data.id} onClick={click} className={className}>\r\n      <img\r\n        style={{ width: \"15vw\" }}\r\n        id={props.data.id}\r\n        alt={props.data.id}\r\n        src={images[props.data.id]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nconst SearchBar = (props) => {\r\n  return <div>SearchBar</div>;\r\n};\r\n\r\nexport default SearchBar;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport CardList from \"./CardList/CardList\";\r\nimport Card from \"./Card/Card\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\n\r\nconst Deck = (props) => {\r\n  const [cardsState, setCardsState] = useState([]);\r\n  const [deckState, setDeckState] = useState(props.data);\r\n  const [landFilterState, setlandFilterState] = useState({\r\n    neutral: false,\r\n    forest: false,\r\n    desert: false,\r\n    mountain: false,\r\n    lake: false,\r\n  });\r\n  const [nameFilterState, setnameFilterState] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/faeria/Faeria/utils/getCards.php\")\r\n      .then((res) => {\r\n        res.data.forEach((card) => {\r\n          const array = cardlist.find((arr) => arr.includes(parseInt(card.id)));\r\n          if (card.legendary === \"1\") {\r\n            !array || array.length < 1\r\n              ? (card.playable = true)\r\n              : (card.playable = false);\r\n          } else {\r\n            !array || array.length < 3\r\n              ? (card.playable = true)\r\n              : (card.playable = false);\r\n          }\r\n        });\r\n        setCardsState(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Network Error\", error.message);\r\n      });\r\n  }, [landFilterState, nameFilterState]);\r\n\r\n  useEffect(() => {\r\n    const newCardsState = [...cardsState];\r\n    newCardsState.forEach((card) => {\r\n      const array = cardlist.find((arr) => arr.includes(parseInt(card.id)));\r\n      if (card.legendary === \"1\") {\r\n        !array || array.length < 1\r\n          ? (card.playable = true)\r\n          : (card.playable = false);\r\n      } else {\r\n        !array || array.length < 3\r\n          ? (card.playable = true)\r\n          : (card.playable = false);\r\n      }\r\n    });\r\n    setCardsState(newCardsState);\r\n  }, [deckState]);\r\n\r\n  const cardlist = deckState.cards.reduce((prev, curr, i, cards) => {\r\n    curr === cards[i - 1]\r\n      ? prev[prev.length - 1].push(curr)\r\n      : prev.push([curr]);\r\n    return prev;\r\n  }, []);\r\n\r\n  const getAvgCost = (cards) => {\r\n    let sum = 0;\r\n    let count = 0;\r\n    cards.forEach((id) => {\r\n      count++;\r\n      sum += parseInt(cardsState.filter((card) => card.id == id)[0].faeria); // eslint-disable-line eqeqeq\r\n    });\r\n    return count ? sum / count : 0;\r\n  };\r\n\r\n  const addCardHandler = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.cards.push(parseInt(event.target.id));\r\n    newDeckState.cards.sort((a, b) => a - b);\r\n    newDeckState.cost = getAvgCost(newDeckState.cards);\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const removeCardHandler = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.cards.splice(\r\n      newDeckState.cards.findIndex((card) => card == event.target.id), // eslint-disable-line eqeqeq\r\n      1\r\n    );\r\n    newDeckState.cost = getAvgCost(newDeckState.cards);\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const cards = cardsState.map((card, i) => (\r\n    <Card key={card.id} click={addCardHandler} data={card} />\r\n  ));\r\n\r\n  const saveDeck = () => {\r\n    const data = new FormData();\r\n    data.append(\"user\", document.getElementById(\"user\").value);\r\n    data.append(\"deck\", JSON.stringify(deckState));\r\n    axios\r\n      .post(\"/faeria/Faeria/utils/saveDeck.php\", data)\r\n      .then(() => {\r\n        props.click();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Network Error\", error.message);\r\n      });\r\n  };\r\n\r\n  const cancelDeck = () => {\r\n    props.click();\r\n  };\r\n\r\n  const saveButton =\r\n    deckState.cards.length === 30 ? (\r\n      <Button onClick={saveDeck} variant=\"primary\" size=\"lg\">\r\n        Save\r\n      </Button>\r\n    ) : (\r\n      <Button disabled variant=\"secondary\" size=\"lg\">\r\n        Save\r\n      </Button>\r\n    );\r\n\r\n  const setName = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.deck_name = event.target.value;\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const setCover = (event) => {\r\n    const newDeckState = { ...deckState };\r\n    newDeckState.cover = event.target.id;\r\n    setDeckState(newDeckState);\r\n  };\r\n\r\n  const cover =\r\n    cardsState.length > 0\r\n      ? cardsState.find((card) => card.id == deckState.cover)\r\n        ? cardsState.find((card) => card.id == deckState.cover).name\r\n        : \"No cover\"\r\n      : null;\r\n  const options = cover\r\n    ? cardlist.map((item) => (\r\n        <Dropdown.Item key={item[0]} id={item[0]} onClick={setCover}>\r\n          {cardsState.find((card) => card.id == item[0]).name}\r\n        </Dropdown.Item>\r\n      ))\r\n    : null;\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            height: \"80vh\",\r\n            width: \"70vw\",\r\n            justifyContent: \"space-evenly\",\r\n            overflow: \"scroll\",\r\n          }}\r\n        >\r\n          {cards}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            height: \"20vh\",\r\n            width: \"70vw\",\r\n            justifyContent: \"space-evenly\",\r\n          }}\r\n        >\r\n          <SearchBar\r\n            landFilter={landFilterState}\r\n            nameFilter={nameFilterState}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          width: \"30vw\",\r\n          height: \"100vh\",\r\n          justifyContent: \"flex-start\",\r\n          overflow: \"scroll\",\r\n        }}\r\n      >\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              <Badge pill variant=\"primary\">\r\n                {parseFloat(deckState.cost).toFixed(1)}\r\n              </Badge>\r\n            </InputGroup.Text>\r\n            <InputGroup.Text>{deckState.cards.length}/30</InputGroup.Text>\r\n            <InputGroup.Text id=\"basic-addon1\">Name:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            onChange={setName}\r\n            placeholder={deckState.deck_name}\r\n            aria-label={deckState.deck_name}\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"basic-addon2\">Cover:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            onChange={setName}\r\n            readOnly\r\n            defaultValue={cover}\r\n            aria-label={cover}\r\n            aria-describedby=\"basic-addon2\"\r\n          />\r\n          <DropdownButton\r\n            as={InputGroup.Append}\r\n            variant=\"secondary\"\r\n            title=\"Select\"\r\n            id=\"input-group-dropdown-2\"\r\n          >\r\n            {options}\r\n          </DropdownButton>\r\n        </InputGroup>\r\n        <CardList\r\n          cardlist={cardlist}\r\n          data={cardsState}\r\n          click={removeCardHandler}\r\n        />\r\n        {saveButton}\r\n        <Button onClick={cancelDeck} variant=\"dark\" size=\"lg\">\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\nimport images from \"../../../assets/images/cards/images\";\r\n\r\nconst DeckListItem = (props) => {\r\n  return (\r\n    <div\r\n      data={JSON.stringify(props.data)}\r\n      style={{ width: \"17vw\", cursor: \"pointer\" }}\r\n      id={props.data.id}\r\n      onClick={props.click}\r\n    >\r\n      <h1 style={{ textAlign: \"center\" }}>{props.data.deck_name}</h1>\r\n      <img\r\n        style={{ width: \"17vw\" }}\r\n        id={props.data.id}\r\n        alt={props.data.id}\r\n        data={JSON.stringify(props.data)}\r\n        src={images[props.data.cover]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DeckListItem from \"./DeckListItem/DeckListItem\";\r\n\r\nconst DeckList = (props) => {\r\n  const [decksState, setDecksState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const data = new FormData();\r\n    data.append(\"user\", document.getElementById(\"user\").value);\r\n    axios\r\n      .post(\"/faeria/Faeria/utils/getDecks.php\", data)\r\n      .then((res) => {\r\n        setDecksState(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Network Error\", error.message);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const decks = decksState.map((deck) => (\r\n    <DeckListItem key={deck.id} data={deck} click={props.click} />\r\n  ));\r\n  decks.push(\r\n    <DeckListItem\r\n      key=\"0\"\r\n      data={{ id: 0, deck_name: \"Add new\", cover: 0, cards: [], cost: 0.0 }}\r\n      click={props.click}\r\n    />\r\n  );\r\n  return decks;\r\n};\r\n\r\nexport default DeckList;\r\n","import React, { useState } from \"react\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport DeckList from \"./DeckList/DeckList\";\r\n\r\nconst DeckBuilder = () => {\r\n  const [isListView, setIsListView] = useState(true);\r\n  const [deck, setDeck] = useState({});\r\n\r\n  const onClickHandler = (event) => {\r\n    setDeck(JSON.parse(event.target.attributes.data.value));\r\n    setIsListView(false);\r\n  };\r\n\r\n  const returnHandler = () => {\r\n    setDeck({});\r\n    setIsListView(true);\r\n  };\r\n\r\n  const display = isListView ? (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        justifyContent: \"space-evenly\",\r\n        overflow: \"scroll\",\r\n      }}\r\n    >\r\n      <DeckList click={onClickHandler} />\r\n    </div>\r\n  ) : (\r\n    <Deck data={deck} click={returnHandler} />\r\n  );\r\n\r\n  return display;\r\n};\r\n\r\nexport default DeckBuilder;\r\n","import React from 'react';\nimport DeckBuilder from \"./DeckBuilder/DeckBuilder\";\n\nconst app = () => {\n  return (\n    <DeckBuilder />\n  );\n}\n\nexport default app;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('deck-builder')\n);\n"],"sourceRoot":""}